<!DOCTYPE html >
<html>
 <head>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport"/>
  <title>
   Snowpark 1.12.0  - com.snowflake.snowpark.FileOperation
  </title>
  <meta content="Snowpark 1.12.0 - com.snowflake.snowpark.FileOperation" name="description"/>
  <meta content="Snowpark 1.12.0 com.snowflake.snowpark.FileOperation" name="keywords"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
  <link href="../../../lib/index.css" media="screen" rel="stylesheet" type="text/css"/>
  <link href="../../../lib/template.css" media="screen" rel="stylesheet" type="text/css"/>
  <link href="../../../lib/diagrams.css" id="diagrams-css" media="screen" rel="stylesheet" type="text/css"/>
  <script src="../../../lib/jquery.min.js" type="text/javascript">
  </script>
  <script src="../../../lib/jquery.panzoom.min.js" type="text/javascript">
  </script>
  <script src="../../../lib/jquery.mousewheel.min.js" type="text/javascript">
  </script>
  <script src="../../../lib/index.js" type="text/javascript">
  </script>
  <script src="../../../index.js" type="text/javascript">
  </script>
  <script src="../../../lib/scheduler.js" type="text/javascript">
  </script>
  <script src="../../../lib/template.js" type="text/javascript">
  </script>
  <script type="text/javascript">
   /* this variable can be used by the JS to determine the path to the root document */
        var toRoot = '../../../';
  </script>
  <style type="text/css">
   #search > span#doc-title {
       padding-left: 0.5em;
       text-align: left;
    }
    #search > span#doc-title > a#dev-guide-link {
      font-size: small;
    }
  </style>
  <script>
   (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-48785629-1', 'auto');
    ga('send', 'pageview');
  </script>
  <script async="async" src="//www.googletagmanager.com/gtag/js?id=G-00K70YK8HQ">
  </script>
  <script>
   window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
  
    gtag('config', 'G-00K70YK8HQ');
  </script>
 </head>
 <body>
  <div id="search">
   <span id="doc-title">
    Snowpark API Reference
    <span id="doc-version">
     1.12.0
    </span>
    <br/>
    <a href="https://docs.snowflake.com/en/developer-guide/snowpark/scala/index.html" id="dev-guide-link">
     [Snowpark Developer Guide]
    </a>
   </span>
   <span class="close-results">
    <span class="left">
     &lt;
    </span>
    Back
   </span>
   <div id="textfilter">
    <span class="input">
     <input accesskey="/" autocapitalize="none" id="index-input" placeholder="Search" type="text"/>
     <i class="clear material-icons">
      
     </i>
     <i class="material-icons" id="search-icon">
      
     </i>
    </span>
   </div>
  </div>
  <div id="search-results">
   <div id="search-progress">
    <div id="progress-fill">
    </div>
   </div>
   <div id="results-content">
    <div id="entity-results">
    </div>
    <div id="member-results">
    </div>
   </div>
  </div>
  <div id="content-scroll-container" style="-webkit-overflow-scrolling: touch;">
   <div id="content-container" style="-webkit-overflow-scrolling: touch;">
    <div id="subpackage-spacer">
     <div id="packages">
      <h1>
       Packages
      </h1>
      <ul>
       <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="_root_.root" visbl="pub">
        <a id="_root_">
        </a>
        <a id="root:_root_">
        </a>
        <span class="permalink">
         <a href="../../../index.html" title="Permalink">
          <i class="material-icons">
           
          </i>
         </a>
        </span>
        <span class="modifier_kind">
         <span class="modifier">
         </span>
         <span class="kind">
          package
         </span>
        </span>
        <span class="symbol">
         <a href="../../../index.html" title="">
          <span class="name">
           root
          </span>
         </a>
        </span>
        <div class="fullcomment">
         <dl class="attributes block">
          <dt>
           Definition Classes
          </dt>
          <dd>
           <a class="extype" href="../../../index.html" name="_root_">
            root
           </a>
          </dd>
         </dl>
        </div>
       </li>
       <li class="indented1" data-isabs="false" fullcomment="yes" group="Ungrouped" name="_root_.com" visbl="pub">
        <a id="com">
        </a>
        <a id="com:com">
        </a>
        <span class="permalink">
         <a href="../../../com/index.html" title="Permalink">
          <i class="material-icons">
           
          </i>
         </a>
        </span>
        <span class="modifier_kind">
         <span class="modifier">
         </span>
         <span class="kind">
          package
         </span>
        </span>
        <span class="symbol">
         <a href="../../index.html" title="">
          <span class="name">
           com
          </span>
         </a>
        </span>
        <div class="fullcomment">
         <dl class="attributes block">
          <dt>
           Definition Classes
          </dt>
          <dd>
           <a class="extype" href="../../../index.html" name="_root_">
            root
           </a>
          </dd>
         </dl>
        </div>
       </li>
       <li class="indented2" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake" visbl="pub">
        <a id="snowflake">
        </a>
        <a id="snowflake:snowflake">
        </a>
        <span class="permalink">
         <a href="../../../com/snowflake/index.html" title="Permalink">
          <i class="material-icons">
           
          </i>
         </a>
        </span>
        <span class="modifier_kind">
         <span class="modifier">
         </span>
         <span class="kind">
          package
         </span>
        </span>
        <span class="symbol">
         <a href="../index.html" title="">
          <span class="name">
           snowflake
          </span>
         </a>
        </span>
        <div class="fullcomment">
         <dl class="attributes block">
          <dt>
           Definition Classes
          </dt>
          <dd>
           <a class="extype" href="../../index.html" name="com">
            com
           </a>
          </dd>
         </dl>
        </div>
       </li>
       <li class="indented3" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark" visbl="pub">
        <a id="snowpark">
        </a>
        <a id="snowpark:snowpark">
        </a>
        <span class="permalink">
         <a href="../../../com/snowflake/snowpark/index.html" title="Permalink">
          <i class="material-icons">
           
          </i>
         </a>
        </span>
        <span class="modifier_kind">
         <span class="modifier">
         </span>
         <span class="kind">
          package
         </span>
        </span>
        <span class="symbol">
         <a href="index.html" title="">
          <span class="name">
           snowpark
          </span>
         </a>
        </span>
        <div class="fullcomment">
         <dl class="attributes block">
          <dt>
           Definition Classes
          </dt>
          <dd>
           <a class="extype" href="../index.html" name="com.snowflake">
            snowflake
           </a>
          </dd>
         </dl>
        </div>
       </li>
       <li class="indented4" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.types" visbl="pub">
        <a id="types">
        </a>
        <a id="types:types">
        </a>
        <span class="permalink">
         <a href="../../../com/snowflake/snowpark/types/index.html" title="Permalink">
          <i class="material-icons">
           
          </i>
         </a>
        </span>
        <span class="modifier_kind">
         <span class="modifier">
         </span>
         <span class="kind">
          package
         </span>
        </span>
        <span class="symbol">
         <a href="types/index.html" title="This package contains all Snowpark logical types.">
          <span class="name">
           types
          </span>
         </a>
        </span>
        <p class="shortcomment cmt">
         This package contains all Snowpark logical types.
        </p>
        <div class="fullcomment">
         <div class="comment cmt">
          <p>
           This package contains all Snowpark logical types.
          </p>
         </div>
         <dl class="attributes block">
          <dt>
           Definition Classes
          </dt>
          <dd>
           <a class="extype" href="index.html" name="com.snowflake.snowpark">
            snowpark
           </a>
          </dd>
          <dt>
           Since
          </dt>
          <dd>
           <p>
            0.1.0
           </p>
          </dd>
         </dl>
        </div>
       </li>
       <li class="indented4" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.udtf" visbl="pub">
        <a id="udtf">
        </a>
        <a id="udtf:udtf">
        </a>
        <span class="permalink">
         <a href="../../../com/snowflake/snowpark/udtf/index.html" title="Permalink">
          <i class="material-icons">
           
          </i>
         </a>
        </span>
        <span class="modifier_kind">
         <span class="modifier">
         </span>
         <span class="kind">
          package
         </span>
        </span>
        <span class="symbol">
         <a href="udtf/index.html" title="">
          <span class="name">
           udtf
          </span>
         </a>
        </span>
        <div class="fullcomment">
         <dl class="attributes block">
          <dt>
           Definition Classes
          </dt>
          <dd>
           <a class="extype" href="index.html" name="com.snowflake.snowpark">
            snowpark
           </a>
          </dd>
         </dl>
        </div>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="AsyncJob.html" title="Provides a way to track an asynchronous query in Snowflake.">
        </a>
        <a href="AsyncJob.html" title="Provides a way to track an asynchronous query in Snowflake.">
         AsyncJob
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="CaseExpr.html" title="Represents a CASE expression.">
        </a>
        <a href="CaseExpr.html" title="Represents a CASE expression.">
         CaseExpr
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="Column.html" title="Represents a column or an expression in a DataFrame.">
        </a>
        <a href="Column.html" title="Represents a column or an expression in a DataFrame.">
         Column
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="CopyableDataFrame.html" title="DataFrame for loading data from files in a stage to a table.">
        </a>
        <a href="CopyableDataFrame.html" title="DataFrame for loading data from files in a stage to a table.">
         CopyableDataFrame
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="CopyableDataFrameAsyncActor.html" title="Provides APIs to execute CopyableDataFrame actions asynchronously.">
        </a>
        <a href="CopyableDataFrameAsyncActor.html" title="Provides APIs to execute CopyableDataFrame actions asynchronously.">
         CopyableDataFrameAsyncActor
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="DataFrame.html" title="Represents a lazily-evaluated relational dataset that contains a collection of Row objects with columns defined by a schema (column name and type).">
        </a>
        <a href="DataFrame.html" title="Represents a lazily-evaluated relational dataset that contains a collection of Row objects with columns defined by a schema (column name and type).">
         DataFrame
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="DataFrameAsyncActor.html" title="Provides APIs to execute DataFrame actions asynchronously.">
        </a>
        <a href="DataFrameAsyncActor.html" title="Provides APIs to execute DataFrame actions asynchronously.">
         DataFrameAsyncActor
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="DataFrameNaFunctions.html" title="Provides functions for handling missing values in a DataFrame.">
        </a>
        <a href="DataFrameNaFunctions.html" title="Provides functions for handling missing values in a DataFrame.">
         DataFrameNaFunctions
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="DataFrameReader.html" title="Provides methods to load data in various supported formats from a Snowflake stage to a DataFrame.">
        </a>
        <a href="DataFrameReader.html" title="Provides methods to load data in various supported formats from a Snowflake stage to a DataFrame.">
         DataFrameReader
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="DataFrameStatFunctions.html" title="Provides eagerly computed statistical functions for DataFrames.">
        </a>
        <a href="DataFrameStatFunctions.html" title="Provides eagerly computed statistical functions for DataFrames.">
         DataFrameStatFunctions
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="DataFrameWriter.html" title="Provides methods for writing data from a DataFrame to supported output destinations.">
        </a>
        <a href="DataFrameWriter.html" title="Provides methods for writing data from a DataFrame to supported output destinations.">
         DataFrameWriter
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="DataFrameWriterAsyncActor.html" title="Provides APIs to execute DataFrameWriter actions asynchronously.">
        </a>
        <a href="DataFrameWriterAsyncActor.html" title="Provides APIs to execute DataFrameWriter actions asynchronously.">
         DataFrameWriterAsyncActor
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="DeleteResult.html" title="Result of deleting rows in an Updatable">
        </a>
        <a href="DeleteResult.html" title="Result of deleting rows in an Updatable">
         DeleteResult
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="" title="Provides methods for working on files in a stage.">
        </a>
        <a href="" title="Provides methods for working on files in a stage.">
         FileOperation
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="GetResult.html" title="Represents the results of downloading a file from a stage location to the local file system.">
        </a>
        <a href="GetResult.html" title="Represents the results of downloading a file from a stage location to the local file system.">
         GetResult
        </a>
       </li>
       <li class="current-entities indented3">
        <a class="object" href="GroupingSets$.html" title="Constructors of GroupingSets object.">
        </a>
        <a class="class" href="GroupingSets.html" title="A Container of grouping sets that you pass to DataFrame.groupByGroupingSets.">
        </a>
        <a href="GroupingSets.html" title="A Container of grouping sets that you pass to DataFrame.groupByGroupingSets.">
         GroupingSets
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="HasCachedResult.html" title="A DataFrame that returns cached data.">
        </a>
        <a href="HasCachedResult.html" title="A DataFrame that returns cached data.">
         HasCachedResult
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="MatchedClauseBuilder.html" title="Builder for a matched clause.">
        </a>
        <a href="MatchedClauseBuilder.html" title="Builder for a matched clause.">
         MatchedClauseBuilder
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="MergeBuilder.html" title="Builder for a merge action.">
        </a>
        <a href="MergeBuilder.html" title="Builder for a merge action.">
         MergeBuilder
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="MergeBuilderAsyncActor.html" title="Provides APIs to execute MergeBuilder actions asynchronously.">
        </a>
        <a href="MergeBuilderAsyncActor.html" title="Provides APIs to execute MergeBuilder actions asynchronously.">
         MergeBuilderAsyncActor
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="MergeResult.html" title="Result of merging a DataFrame into an Updatable DataFrame">
        </a>
        <a href="MergeResult.html" title="Result of merging a DataFrame into an Updatable DataFrame">
         MergeResult
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="MergeTypedAsyncJob.html" title="Provides a way to track an asynchronously executed action in a MergeBuilder.">
        </a>
        <a href="MergeTypedAsyncJob.html" title="Provides a way to track an asynchronously executed action in a MergeBuilder.">
         MergeTypedAsyncJob
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="NotMatchedClauseBuilder.html" title="Builder for a not matched clause.">
        </a>
        <a href="NotMatchedClauseBuilder.html" title="Builder for a not matched clause.">
         NotMatchedClauseBuilder
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="PublicPreview.html" title="">
        </a>
        <a href="PublicPreview.html" title="">
         PublicPreview
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="PutResult.html" title="Represents the results of uploading a local file to a stage location.">
        </a>
        <a href="PutResult.html" title="Represents the results of uploading a local file to a stage location.">
         PutResult
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="RelationalGroupedDataFrame.html" title="Represents an underlying DataFrame with rows that are grouped by common values.">
        </a>
        <a href="RelationalGroupedDataFrame.html" title="Represents an underlying DataFrame with rows that are grouped by common values.">
         RelationalGroupedDataFrame
        </a>
       </li>
       <li class="current-entities indented3">
        <a class="object" href="Row$.html" title="">
        </a>
        <a class="class" href="Row.html" title="Represents a row returned by the evaluation of a DataFrame.">
        </a>
        <a href="Row.html" title="Represents a row returned by the evaluation of a DataFrame.">
         Row
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="SProcRegistration.html" title="Provides methods to register a SProc (Stored Procedure) in the Snowflake database.">
        </a>
        <a href="SProcRegistration.html" title="Provides methods to register a SProc (Stored Procedure) in the Snowflake database.">
         SProcRegistration
        </a>
       </li>
       <li class="current-entities indented3">
        <a class="object" href="SaveMode$.html" title="SaveMode configures the behavior when data is written from a DataFrame to a data source using a DataFrameWriter instance.">
        </a>
        <a class="trait" href="SaveMode.html" title="Please refer to the companion SaveMode$ object.">
        </a>
        <a href="SaveMode.html" title="Please refer to the companion SaveMode$ object.">
         SaveMode
        </a>
       </li>
       <li class="current-entities indented3">
        <a class="object" href="Session$.html" title="Companion object to Session that you use to build and create a session.">
        </a>
        <a class="class" href="Session.html" title="Establishes a connection with a Snowflake database and provides methods for creating DataFrames and accessing objects for working with files in stages.">
        </a>
        <a href="Session.html" title="Establishes a connection with a Snowflake database and provides methods for creating DataFrames and accessing objects for working with files in stages.">
         Session
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="SnowparkClientException.html" title="Represents a Snowpark client side exception.">
        </a>
        <a href="SnowparkClientException.html" title="Represents a Snowpark client side exception.">
         SnowparkClientException
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="StoredProcedure.html" title="The reference to a Stored Procedure which can be created by Session.sproc.register methods, and used in Session.storedProcedure method.">
        </a>
        <a href="StoredProcedure.html" title="The reference to a Stored Procedure which can be created by Session.sproc.register methods, and used in Session.storedProcedure method.">
         StoredProcedure
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="TableFunction.html" title="Looks up table functions by funcName and returns tableFunction object which can be used in DataFrame.join and Session.tableFunction methods.">
        </a>
        <a href="TableFunction.html" title="Looks up table functions by funcName and returns tableFunction object which can be used in DataFrame.join and Session.tableFunction methods.">
         TableFunction
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="TypedAsyncJob.html" title="Provides a way to track an asynchronously executed action in a DataFrame.">
        </a>
        <a href="TypedAsyncJob.html" title="Provides a way to track an asynchronously executed action in a DataFrame.">
         TypedAsyncJob
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="UDFRegistration.html" title="Provides methods to register lambdas and functions as UDFs in the Snowflake database.">
        </a>
        <a href="UDFRegistration.html" title="Provides methods to register lambdas and functions as UDFs in the Snowflake database.">
         UDFRegistration
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="UDTFRegistration.html" title="Provides methods to register a UDTF (user-defined table function) in the Snowflake database.">
        </a>
        <a href="UDTFRegistration.html" title="Provides methods to register a UDTF (user-defined table function) in the Snowflake database.">
         UDTFRegistration
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="Updatable.html" title="Represents a lazily-evaluated Updatable.">
        </a>
        <a href="Updatable.html" title="Represents a lazily-evaluated Updatable.">
         Updatable
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="UpdatableAsyncActor.html" title="Provides APIs to execute Updatable actions asynchronously.">
        </a>
        <a href="UpdatableAsyncActor.html" title="Provides APIs to execute Updatable actions asynchronously.">
         UpdatableAsyncActor
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="UpdateResult.html" title="Result of updating rows in an Updatable">
        </a>
        <a href="UpdateResult.html" title="Result of updating rows in an Updatable">
         UpdateResult
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="UserDefinedFunction.html" title="Encapsulates a user defined lambda or function that is returned by UDFRegistration.registerTemporary or by com.snowflake.snowpark.functions.udf.">
        </a>
        <a href="UserDefinedFunction.html" title="Encapsulates a user defined lambda or function that is returned by UDFRegistration.registerTemporary or by com.snowflake.snowpark.functions.udf.">
         UserDefinedFunction
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="object" href="Window$.html" title="Contains functions to form WindowSpec.">
        </a>
        <a href="Window$.html" title="Contains functions to form WindowSpec.">
         Window
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="WindowSpec.html" title="Represents a window frame clause.">
        </a>
        <a href="WindowSpec.html" title="Represents a window frame clause.">
         WindowSpec
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="class" href="WriteFileResult.html" title="Represents the results of writing data from a DataFrame to a file in a stage.">
        </a>
        <a href="WriteFileResult.html" title="Represents the results of writing data from a DataFrame to a file in a stage.">
         WriteFileResult
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="object" href="functions$.html" title="Provides utility functions that generate Column expressions that you can pass to DataFrame transformation methods.">
        </a>
        <a href="functions$.html" title="Provides utility functions that generate Column expressions that you can pass to DataFrame transformation methods.">
         functions
        </a>
       </li>
       <li class="current-entities indented3">
        <span class="separator">
        </span>
        <a class="object" href="tableFunctions$.html" title="Provides utility functions that generate table function expressions that can be passed to DataFrame join method and Session tableFunction method.">
        </a>
        <a href="tableFunctions$.html" title="Provides utility functions that generate table function expressions that can be passed to DataFrame join method and Session tableFunction method.">
         tableFunctions
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div id="content">
     <body class="class type">
      <div id="definition">
       <div class="big-circle class">
        c
       </div>
       <p id="owner">
        <a class="extype" href="../../index.html" name="com">
         com
        </a>
        .
        <a class="extype" href="../index.html" name="com.snowflake">
         snowflake
        </a>
        .
        <a class="extype" href="index.html" name="com.snowflake.snowpark">
         snowpark
        </a>
       </p>
       <h1>
        FileOperation
        <span class="permalink">
         <a href="../../../com/snowflake/snowpark/FileOperation.html" title="Permalink">
          <i class="material-icons">
           
          </i>
         </a>
        </span>
       </h1>
       <h3>
        <span class="morelinks">
        </span>
       </h3>
      </div>
      <h4 class="signature" id="signature">
       <span class="modifier_kind">
        <span class="modifier">
         final
        </span>
        <span class="kind">
         class
        </span>
       </span>
       <span class="symbol">
        <span class="name">
         FileOperation
        </span>
        <span class="result">
         extends
         <span class="extype" name="com.snowflake.snowpark.internal.Logging">
          Logging
         </span>
        </span>
       </span>
      </h4>
      <div class="fullcommenttop" id="comment">
       <div class="comment cmt">
        <p>
         Provides methods for working on files in a stage.
        </p>
        <p>
         To access an object of this class, use
         <a class="extmbr" href="Session.html#file:com.snowflake.snowpark.FileOperation" name="com.snowflake.snowpark.Session#file">
          Session.file
         </a>
         .
        </p>
        <p>
         For example:
        </p>
        <pre><span class="cmt">// Upload a file to a stage.</span>
session.file.put(<span class="lit">"file:///tmp/file1.csv"</span>, <span class="lit">"@myStage/prefix1"</span>)
<span class="cmt">// Download a file from a stage.</span>
session.file.get(<span class="lit">"@myStage/prefix1/file1.csv"</span>, <span class="lit">"file:///tmp"</span>)</pre>
       </div>
       <dl class="attributes block">
        <dt>
         Since
        </dt>
        <dd>
         <p>
          0.4.0
         </p>
        </dd>
       </dl>
       <div class="toggleContainer block">
        <span class="toggle">
         Linear Supertypes
        </span>
        <div class="superTypes hiddenContent">
         <span class="extype" name="com.snowflake.snowpark.internal.Logging">
          Logging
         </span>
         ,
         <span class="extype" name="scala.AnyRef">
          AnyRef
         </span>
         ,
         <span class="extype" name="scala.Any">
          Any
         </span>
        </div>
       </div>
      </div>
      <div id="mbrsel">
       <div class="toggle">
       </div>
       <div id="memberfilter">
        <i class="material-icons arrow">
         
        </i>
        <span class="input">
         <input accesskey="/" id="mbrsel-input" placeholder="Filter all members" type="text"/>
        </span>
        <i class="clear material-icons">
         
        </i>
       </div>
       <div id="filterby">
        <div id="order">
         <span class="filtertype">
          Ordering
         </span>
         <ol>
          <li class="alpha in">
           <span>
            Alphabetic
           </span>
          </li>
          <li class="inherit out">
           <span>
            By Inheritance
           </span>
          </li>
         </ol>
        </div>
        <div class="ancestors">
         <span class="filtertype">
          Inherited
          <br/>
         </span>
         <ol id="linearization">
          <li class="in" name="com.snowflake.snowpark.FileOperation">
           <span>
            FileOperation
           </span>
          </li>
          <li class="in" name="com.snowflake.snowpark.internal.Logging">
           <span>
            Logging
           </span>
          </li>
          <li class="in" name="scala.AnyRef">
           <span>
            AnyRef
           </span>
          </li>
          <li class="in" name="scala.Any">
           <span>
            Any
           </span>
          </li>
         </ol>
        </div>
        <div class="ancestors">
         <span class="filtertype">
         </span>
         <ol>
          <li class="hideall out">
           <span>
            Hide All
           </span>
          </li>
          <li class="showall in">
           <span>
            Show All
           </span>
          </li>
         </ol>
        </div>
        <div id="visbl">
         <span class="filtertype">
          Visibility
         </span>
         <ol>
          <li class="public in">
           <span>
            Public
           </span>
          </li>
          <li class="all out">
           <span>
            All
           </span>
          </li>
         </ol>
        </div>
       </div>
      </div>
      <div id="template">
       <div id="allMembers">
        <div class="members" id="constructors">
         <h3>
          Instance Constructors
         </h3>
         <ol>
          <li class="indented0" data-isabs="false" fullcomment="no" group="Ungrouped" name="com.snowflake.snowpark.FileOperation#&lt;init&gt;" visbl="pub">
           <a id="&lt;init&gt;(session:com.snowflake.snowpark.Session):com.snowflake.snowpark.FileOperation">
           </a>
           <a id="&lt;init&gt;:FileOperation">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#&lt;init&gt;(session:com.snowflake.snowpark.Session):com.snowflake.snowpark.FileOperation" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             new
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             FileOperation
            </span>
            <span class="params">
             (
             <span name="session">
              session:
              <a class="extype" href="Session.html" name="com.snowflake.snowpark.Session">
               Session
              </a>
             </span>
             )
            </span>
           </span>
          </li>
         </ol>
        </div>
        <div class="values members">
         <h3>
          Value Members
         </h3>
         <ol>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#!=" visbl="pub">
           <a id="!=(x$1:Any):Boolean">
           </a>
           <a id="!=(Any):Boolean">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#!=(x$1:Any):Boolean" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name" title="gt4s: $bang$eq">
             !=
            </span>
            <span class="params">
             (
             <span name="arg0">
              arg0:
              <span class="extype" name="scala.Any">
               Any
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Boolean">
              Boolean
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef → Any
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef###" visbl="pub">
           <a id="##():Int">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html###():Int" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name" title="gt4s: $hash$hash">
             ##
            </span>
            <span class="params">
             ()
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Int">
              Int
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef → Any
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#==" visbl="pub">
           <a id="==(x$1:Any):Boolean">
           </a>
           <a id="==(Any):Boolean">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#==(x$1:Any):Boolean" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name" title="gt4s: $eq$eq">
             ==
            </span>
            <span class="params">
             (
             <span name="arg0">
              arg0:
              <span class="extype" name="scala.Any">
               Any
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Boolean">
              Boolean
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef → Any
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.Any#asInstanceOf" visbl="pub">
           <a id="asInstanceOf[T0]:T0">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#asInstanceOf[T0]:T0" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             asInstanceOf
            </span>
            <span class="tparams">
             [
             <span name="T0">
              T0
             </span>
             ]
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Any.asInstanceOf.T0">
              T0
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              Any
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#clone" visbl="prt">
           <a id="clone():Object">
           </a>
           <a id="clone():AnyRef">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#clone():Object" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             clone
            </span>
            <span class="params">
             ()
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.AnyRef">
              AnyRef
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="java.lang">
               lang
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef
             </dd>
             <dt>
              Annotations
             </dt>
             <dd>
              <span class="name">
               @throws
              </span>
              <span class="args">
               (
               <span>
                <span class="defval" name="classOf[java.lang.CloneNotSupportedException]">
                 ...
                </span>
               </span>
               )
              </span>
              <span class="name">
               @native
              </span>
              <span class="args">
               ()
              </span>
              <span class="name">
               @HotSpotIntrinsicCandidate
              </span>
              <span class="args">
               ()
              </span>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.FileOperation#downloadStream" visbl="pub">
           <a id="downloadStream(stageLocation:String,decompress:Boolean):java.io.InputStream">
           </a>
           <a id="downloadStream(String,Boolean):InputStream">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#downloadStream(stageLocation:String,decompress:Boolean):java.io.InputStream" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             downloadStream
            </span>
            <span class="params">
             (
             <span name="stageLocation">
              stageLocation:
              <span class="extype" name="scala.Predef.String">
               String
              </span>
             </span>
             ,
             <span name="decompress">
              decompress:
              <span class="extype" name="scala.Boolean">
               Boolean
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="java.io.InputStream">
              InputStream
             </span>
            </span>
           </span>
           <p class="shortcomment cmt">
            Download file from the given stage and return an input stream
           </p>
           <div class="fullcomment">
            <div class="comment cmt">
             <p>
              Download file from the given stage and return an input stream
             </p>
            </div>
            <dl class="paramcmts block">
             <dt class="param">
              stageLocation
             </dt>
             <dd class="cmt">
              <p>
               Full stage path to the file
              </p>
             </dd>
             <dt class="param">
              decompress
             </dt>
             <dd class="cmt">
              <p>
               True if file compressed
              </p>
             </dd>
             <dt>
              returns
             </dt>
             <dd class="cmt">
              <p>
               An InputStream object
              </p>
             </dd>
            </dl>
            <dl class="attributes block">
             <dt>
              Since
             </dt>
             <dd>
              <p>
               1.4.0
              </p>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#eq" visbl="pub">
           <a id="eq(x$1:AnyRef):Boolean">
           </a>
           <a id="eq(AnyRef):Boolean">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#eq(x$1:AnyRef):Boolean" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             eq
            </span>
            <span class="params">
             (
             <span name="arg0">
              arg0:
              <span class="extype" name="scala.AnyRef">
               AnyRef
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Boolean">
              Boolean
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#equals" visbl="pub">
           <a id="equals(x$1:Any):Boolean">
           </a>
           <a id="equals(Any):Boolean">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#equals(x$1:Any):Boolean" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             equals
            </span>
            <span class="params">
             (
             <span name="arg0">
              arg0:
              <span class="extype" name="scala.Any">
               Any
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Boolean">
              Boolean
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef → Any
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.FileOperation#get" visbl="pub">
           <a id="get(stageLocation:String,targetDirectory:String,options:Map[String,String]):Array[com.snowflake.snowpark.GetResult]">
           </a>
           <a id="get(String,String,Map[String,String]):Array[GetResult]">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#get(stageLocation:String,targetDirectory:String,options:Map[String,String]):Array[com.snowflake.snowpark.GetResult]" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             get
            </span>
            <span class="params">
             (
             <span name="stageLocation">
              stageLocation:
              <span class="extype" name="scala.Predef.String">
               String
              </span>
             </span>
             ,
             <span name="targetDirectory">
              targetDirectory:
              <span class="extype" name="scala.Predef.String">
               String
              </span>
             </span>
             ,
             <span name="options">
              options:
              <span class="extype" name="scala.Predef.Map">
               Map
              </span>
              [
              <span class="extype" name="scala.Predef.String">
               String
              </span>
              ,
              <span class="extype" name="scala.Predef.String">
               String
              </span>
              ] =
              <span class="symbol">
               Map()
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Array">
              Array
             </span>
             [
             <a class="extype" href="GetResult.html" name="com.snowflake.snowpark.GetResult">
              GetResult
             </a>
             ]
            </span>
           </span>
           <p class="shortcomment cmt">
            Downloads the specified files from a path in a stage (specified by
            <code>
             stageLocation
            </code>
            ) to
the local directory specified by
            <code>
             targetLocation
            </code>
            .
           </p>
           <div class="fullcomment">
            <div class="comment cmt">
             <p>
              Downloads the specified files from a path in a stage (specified by
              <code>
               stageLocation
              </code>
              ) to
the local directory specified by
              <code>
               targetLocation
              </code>
              .
             </p>
             <p>
              This method returns the results as an Array of
              <a class="extype" href="GetResult.html" name="com.snowflake.snowpark.GetResult">
               GetResult
              </a>
              objects (one for each file). Each
object represents the results of downloading a file.
             </p>
             <p>
              For example:
             </p>
             <pre><span class="cmt">// Upload files to a stage.</span>
session.file.put(<span class="lit">"file:///tmp/file_1.csv"</span>, <span class="lit">"@myStage/prefix2"</span>)
session.file.put(<span class="lit">"file:///tmp/file_2.csv"</span>, <span class="lit">"@myStage/prefix2"</span>)

<span class="cmt">// Download one file from a stage.</span>
<span class="kw">val</span> res1 = session.file.get(<span class="lit">"@myStage/prefix2/file_1.csv"</span>, <span class="lit">"file:///tmp/target"</span>)
<span class="cmt">// Download all the files from @myStage/prefix2.</span>
<span class="kw">val</span> res2 = session.file.get(<span class="lit">"@myStage/prefix2"</span>, <span class="lit">"file:///tmp/target2"</span>)
<span class="cmt">// Download files with names that match a regular expression pattern.</span>
<span class="kw">val</span> getOptions = <span class="std">Map</span>(<span class="lit">"PATTERN"</span> -&gt; s<span class="lit">"'.*file_.*.csv.gz'"</span>)
<span class="kw">val</span> res3 = session.file.get(<span class="lit">"@myStage/prefix2"</span>, <span class="lit">"file:///tmp/target3"</span>, getOptions)</pre>
            </div>
            <dl class="paramcmts block">
             <dt class="param">
              stageLocation
             </dt>
             <dd class="cmt">
              <p>
               The location (a directory or filename on a stage) from which you want to
                     download the files. The
               <code>
                @
               </code>
               prefix is optional.
              </p>
             </dd>
             <dt class="param">
              targetDirectory
             </dt>
             <dd class="cmt">
              <p>
               The path to the local directory where the file(s) should be downloaded.
                       Specify the path in the following format:
               <code>
                file://&lt;path_to_file&gt;/&lt;filename&gt;
               </code>
               . If
               <code>
                targetDirectory
               </code>
               does not
                       already exist, the method creates the directory.
              </p>
             </dd>
             <dt class="param">
              options
             </dt>
             <dd class="cmt">
              <p>
               A Map containing the names and values of optional
               <a href="https://docs.snowflake.com/en/sql-reference/sql/get.html#optional-parameters" target="_blank">
                parameters
               </a>
               for the GET command.
              </p>
             </dd>
             <dt>
              returns
             </dt>
             <dd class="cmt">
              <p>
               An Array of
               <a class="extype" href="PutResult.html" name="com.snowflake.snowpark.PutResult">
                PutResult
               </a>
               objects (one object for each file downloaded).
              </p>
             </dd>
            </dl>
            <dl class="attributes block">
             <dt>
              Since
             </dt>
             <dd>
              <p>
               0.4.0
              </p>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#getClass" visbl="pub">
           <a id="getClass():Class[_]">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#getClass():Class[_]" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             getClass
            </span>
            <span class="params">
             ()
            </span>
            <span class="result">
             :
             <span class="extype" name="java.lang.Class">
              Class
             </span>
             [_]
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef → Any
             </dd>
             <dt>
              Annotations
             </dt>
             <dd>
              <span class="name">
               @native
              </span>
              <span class="args">
               ()
              </span>
              <span class="name">
               @HotSpotIntrinsicCandidate
              </span>
              <span class="args">
               ()
              </span>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#hashCode" visbl="pub">
           <a id="hashCode():Int">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#hashCode():Int" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             hashCode
            </span>
            <span class="params">
             ()
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Int">
              Int
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef → Any
             </dd>
             <dt>
              Annotations
             </dt>
             <dd>
              <span class="name">
               @native
              </span>
              <span class="args">
               ()
              </span>
              <span class="name">
               @HotSpotIntrinsicCandidate
              </span>
              <span class="args">
               ()
              </span>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.Any#isInstanceOf" visbl="pub">
           <a id="isInstanceOf[T0]:Boolean">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#isInstanceOf[T0]:Boolean" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             isInstanceOf
            </span>
            <span class="tparams">
             [
             <span name="T0">
              T0
             </span>
             ]
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Boolean">
              Boolean
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              Any
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#log" visbl="prt">
           <a id="log():org.slf4j.Logger">
           </a>
           <a id="log():Logger">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#log():org.slf4j.Logger" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             log
            </span>
            <span class="params">
             ()
            </span>
            <span class="result">
             :
             <span class="extype" name="org.slf4j.Logger">
              Logger
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#logDebug" visbl="prt">
           <a id="logDebug(msg:String,throwable:Throwable):Unit">
           </a>
           <a id="logDebug(String,Throwable):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#logDebug(msg:String,throwable:Throwable):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             logDebug
            </span>
            <span class="params">
             (
             <span name="msg">
              msg:
              <span class="extype" name="java.lang.String">
               String
              </span>
             </span>
             ,
             <span name="throwable">
              throwable:
              <span class="extype" name="java.lang.Throwable">
               Throwable
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#logDebug" visbl="prt">
           <a id="logDebug(msg:String):Unit">
           </a>
           <a id="logDebug(String):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#logDebug(msg:String):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             logDebug
            </span>
            <span class="params">
             (
             <span name="msg">
              msg:
              <span class="extype" name="java.lang.String">
               String
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#logError" visbl="prt">
           <a id="logError(msg:String,throwable:Throwable):Unit">
           </a>
           <a id="logError(String,Throwable):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#logError(msg:String,throwable:Throwable):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             logError
            </span>
            <span class="params">
             (
             <span name="msg">
              msg:
              <span class="extype" name="java.lang.String">
               String
              </span>
             </span>
             ,
             <span name="throwable">
              throwable:
              <span class="extype" name="java.lang.Throwable">
               Throwable
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#logError" visbl="prt">
           <a id="logError(msg:String):Unit">
           </a>
           <a id="logError(String):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#logError(msg:String):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             logError
            </span>
            <span class="params">
             (
             <span name="msg">
              msg:
              <span class="extype" name="java.lang.String">
               String
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#logInfo" visbl="prt">
           <a id="logInfo(msg:String,throwable:Throwable):Unit">
           </a>
           <a id="logInfo(String,Throwable):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#logInfo(msg:String,throwable:Throwable):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             logInfo
            </span>
            <span class="params">
             (
             <span name="msg">
              msg:
              <span class="extype" name="java.lang.String">
               String
              </span>
             </span>
             ,
             <span name="throwable">
              throwable:
              <span class="extype" name="java.lang.Throwable">
               Throwable
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#logInfo" visbl="prt">
           <a id="logInfo(msg:String):Unit">
           </a>
           <a id="logInfo(String):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#logInfo(msg:String):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             logInfo
            </span>
            <span class="params">
             (
             <span name="msg">
              msg:
              <span class="extype" name="java.lang.String">
               String
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#logTrace" visbl="prt">
           <a id="logTrace(msg:String,throwable:Throwable):Unit">
           </a>
           <a id="logTrace(String,Throwable):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#logTrace(msg:String,throwable:Throwable):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             logTrace
            </span>
            <span class="params">
             (
             <span name="msg">
              msg:
              <span class="extype" name="java.lang.String">
               String
              </span>
             </span>
             ,
             <span name="throwable">
              throwable:
              <span class="extype" name="java.lang.Throwable">
               Throwable
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#logTrace" visbl="prt">
           <a id="logTrace(msg:String):Unit">
           </a>
           <a id="logTrace(String):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#logTrace(msg:String):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             logTrace
            </span>
            <span class="params">
             (
             <span name="msg">
              msg:
              <span class="extype" name="java.lang.String">
               String
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#logWarning" visbl="prt">
           <a id="logWarning(msg:String,throwable:Throwable):Unit">
           </a>
           <a id="logWarning(String,Throwable):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#logWarning(msg:String,throwable:Throwable):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             logWarning
            </span>
            <span class="params">
             (
             <span name="msg">
              msg:
              <span class="extype" name="java.lang.String">
               String
              </span>
             </span>
             ,
             <span name="throwable">
              throwable:
              <span class="extype" name="java.lang.Throwable">
               Throwable
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.internal.Logging#logWarning" visbl="prt">
           <a id="logWarning(msg:String):Unit">
           </a>
           <a id="logWarning(String):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#logWarning(msg:String):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             logWarning
            </span>
            <span class="params">
             (
             <span name="msg">
              msg:
              <span class="extype" name="java.lang.String">
               String
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="com.snowflake.snowpark.internal">
               internal
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              Logging
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#ne" visbl="pub">
           <a id="ne(x$1:AnyRef):Boolean">
           </a>
           <a id="ne(AnyRef):Boolean">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#ne(x$1:AnyRef):Boolean" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             ne
            </span>
            <span class="params">
             (
             <span name="arg0">
              arg0:
              <span class="extype" name="scala.AnyRef">
               AnyRef
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Boolean">
              Boolean
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#notify" visbl="pub">
           <a id="notify():Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#notify():Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             notify
            </span>
            <span class="params">
             ()
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef
             </dd>
             <dt>
              Annotations
             </dt>
             <dd>
              <span class="name">
               @native
              </span>
              <span class="args">
               ()
              </span>
              <span class="name">
               @HotSpotIntrinsicCandidate
              </span>
              <span class="args">
               ()
              </span>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#notifyAll" visbl="pub">
           <a id="notifyAll():Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#notifyAll():Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             notifyAll
            </span>
            <span class="params">
             ()
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef
             </dd>
             <dt>
              Annotations
             </dt>
             <dd>
              <span class="name">
               @native
              </span>
              <span class="args">
               ()
              </span>
              <span class="name">
               @HotSpotIntrinsicCandidate
              </span>
              <span class="args">
               ()
              </span>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.FileOperation#put" visbl="pub">
           <a id="put(localFileName:String,stageLocation:String,options:Map[String,String]):Array[com.snowflake.snowpark.PutResult]">
           </a>
           <a id="put(String,String,Map[String,String]):Array[PutResult]">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#put(localFileName:String,stageLocation:String,options:Map[String,String]):Array[com.snowflake.snowpark.PutResult]" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             put
            </span>
            <span class="params">
             (
             <span name="localFileName">
              localFileName:
              <span class="extype" name="scala.Predef.String">
               String
              </span>
             </span>
             ,
             <span name="stageLocation">
              stageLocation:
              <span class="extype" name="scala.Predef.String">
               String
              </span>
             </span>
             ,
             <span name="options">
              options:
              <span class="extype" name="scala.Predef.Map">
               Map
              </span>
              [
              <span class="extype" name="scala.Predef.String">
               String
              </span>
              ,
              <span class="extype" name="scala.Predef.String">
               String
              </span>
              ] =
              <span class="symbol">
               Map()
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Array">
              Array
             </span>
             [
             <a class="extype" href="PutResult.html" name="com.snowflake.snowpark.PutResult">
              PutResult
             </a>
             ]
            </span>
           </span>
           <p class="shortcomment cmt">
            Uploads the local files specified by
            <code>
             localFileName
            </code>
            to the stage location
specified in
            <code>
             stageLocation
            </code>
            .
           </p>
           <div class="fullcomment">
            <div class="comment cmt">
             <p>
              Uploads the local files specified by
              <code>
               localFileName
              </code>
              to the stage location
specified in
              <code>
               stageLocation
              </code>
              .
             </p>
             <p>
              This method returns the results as an Array of
              <a class="extype" href="PutResult.html" name="com.snowflake.snowpark.PutResult">
               PutResult
              </a>
              objects (one for each file). Each
object represents the results of uploading a file.
             </p>
             <p>
              For example:
             </p>
             <pre><span class="cmt">// Upload a file to a stage without compressing the file.</span>
<span class="kw">val</span> putOptions = <span class="std">Map</span>(<span class="lit">"AUTO_COMPRESS"</span> -&gt; <span class="lit">"FALSE"</span>)
<span class="kw">val</span> res1 = session.file.put(<span class="lit">"file:///tmp/file1.csv"</span>, <span class="lit">"@myStage"</span>, putOptions)

<span class="cmt">// Upload the CSV files in /tmp with names that start with "file".</span>
<span class="cmt">// You can use the wildcard characters "*" and "?" to match multiple files.</span>
<span class="kw">val</span> res2 = session.file.put(<span class="lit">"file:///tmp/file*.csv"</span>, <span class="lit">"@myStage/prefix2"</span>)</pre>
            </div>
            <dl class="paramcmts block">
             <dt class="param">
              localFileName
             </dt>
             <dd class="cmt">
              <p>
               The path to the local file(s) to upload. Specify the path in the
                     following format:
               <code>
                file://&lt;path_to_file&gt;/&lt;filename&gt;
               </code>
               . (The
               <code>
                file://
               </code>
               prefix is optional.) To match multiple files in the path, you
                     can specify the wildcard characters
               <code>
                *
               </code>
               and
               <code>
                ?
               </code>
               .
              </p>
             </dd>
             <dt class="param">
              stageLocation
             </dt>
             <dd class="cmt">
              <p>
               The stage (and prefix) where you want to upload the file(s).
                     The
               <code>
                @
               </code>
               prefix is optional.
              </p>
             </dd>
             <dt class="param">
              options
             </dt>
             <dd class="cmt">
              <p>
               A Map containing the names and values of optional
               <a href="https://docs.snowflake.com/en/sql-reference/sql/put.html#optional-parameters" target="_blank">
                parameters
               </a>
               for the PUT command.
              </p>
             </dd>
             <dt>
              returns
             </dt>
             <dd class="cmt">
              <p>
               An Array of
               <a class="extype" href="PutResult.html" name="com.snowflake.snowpark.PutResult">
                PutResult
               </a>
               objects (one object for each file uploaded).
              </p>
             </dd>
            </dl>
            <dl class="attributes block">
             <dt>
              Since
             </dt>
             <dd>
              <p>
               0.4.0
              </p>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#synchronized" visbl="pub">
           <a id="synchronized[T0](x$1:=&gt;T0):T0">
           </a>
           <a id="synchronized[T0](⇒T0):T0">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#synchronized[T0](x$1:=&gt;T0):T0" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             synchronized
            </span>
            <span class="tparams">
             [
             <span name="T0">
              T0
             </span>
             ]
            </span>
            <span class="params">
             (
             <span name="arg0">
              arg0: ⇒
              <span class="extype" name="java.lang.AnyRef.synchronized.T0">
               T0
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="java.lang.AnyRef.synchronized.T0">
              T0
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#toString" visbl="pub">
           <a id="toString():String">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#toString():String" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             toString
            </span>
            <span class="params">
             ()
            </span>
            <span class="result">
             :
             <span class="extype" name="java.lang.String">
              String
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef → Any
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="com.snowflake.snowpark.FileOperation#uploadStream" visbl="pub">
           <a id="uploadStream(stageLocation:String,inputStream:java.io.InputStream,compress:Boolean):Unit">
           </a>
           <a id="uploadStream(String,InputStream,Boolean):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#uploadStream(stageLocation:String,inputStream:java.io.InputStream,compress:Boolean):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             uploadStream
            </span>
            <span class="params">
             (
             <span name="stageLocation">
              stageLocation:
              <span class="extype" name="scala.Predef.String">
               String
              </span>
             </span>
             ,
             <span name="inputStream">
              inputStream:
              <span class="extype" name="java.io.InputStream">
               InputStream
              </span>
             </span>
             ,
             <span name="compress">
              compress:
              <span class="extype" name="scala.Boolean">
               Boolean
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <p class="shortcomment cmt">
            Method to compress data from a stream and upload it at a stage location.
           </p>
           <div class="fullcomment">
            <div class="comment cmt">
             <p>
              Method to compress data from a stream and upload it at a stage location. The data will be
uploaded as one file. No splitting is done in this method.
             </p>
             <p>
              caller is responsible for releasing the inputStream after the method is called.
             </p>
            </div>
            <dl class="paramcmts block">
             <dt class="param">
              stageLocation
             </dt>
             <dd class="cmt">
              <p>
               Full stage path to the file
              </p>
             </dd>
             <dt class="param">
              inputStream
             </dt>
             <dd class="cmt">
              <p>
               Input stream from which the data will be uploaded
              </p>
             </dd>
             <dt class="param">
              compress
             </dt>
             <dd class="cmt">
              <p>
               Compress data or not before uploading stream
              </p>
             </dd>
            </dl>
            <dl class="attributes block">
             <dt>
              Since
             </dt>
             <dd>
              <p>
               1.4.0
              </p>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#wait" visbl="pub">
           <a id="wait(x$1:Long,x$2:Int):Unit">
           </a>
           <a id="wait(Long,Int):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#wait(x$1:Long,x$2:Int):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             wait
            </span>
            <span class="params">
             (
             <span name="arg0">
              arg0:
              <span class="extype" name="scala.Long">
               Long
              </span>
             </span>
             ,
             <span name="arg1">
              arg1:
              <span class="extype" name="scala.Int">
               Int
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef
             </dd>
             <dt>
              Annotations
             </dt>
             <dd>
              <span class="name">
               @throws
              </span>
              <span class="args">
               (
               <span>
                <span class="defval" name="classOf[java.lang.InterruptedException]">
                 ...
                </span>
               </span>
               )
              </span>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#wait" visbl="pub">
           <a id="wait(x$1:Long):Unit">
           </a>
           <a id="wait(Long):Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#wait(x$1:Long):Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             wait
            </span>
            <span class="params">
             (
             <span name="arg0">
              arg0:
              <span class="extype" name="scala.Long">
               Long
              </span>
             </span>
             )
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef
             </dd>
             <dt>
              Annotations
             </dt>
             <dd>
              <span class="name">
               @throws
              </span>
              <span class="args">
               (
               <span>
                <span class="defval" name="classOf[java.lang.InterruptedException]">
                 ...
                </span>
               </span>
               )
              </span>
              <span class="name">
               @native
              </span>
              <span class="args">
               ()
              </span>
             </dd>
            </dl>
           </div>
          </li>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#wait" visbl="pub">
           <a id="wait():Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#wait():Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
             final
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name">
             wait
            </span>
            <span class="params">
             ()
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef
             </dd>
             <dt>
              Annotations
             </dt>
             <dd>
              <span class="name">
               @throws
              </span>
              <span class="args">
               (
               <span>
                <span class="defval" name="classOf[java.lang.InterruptedException]">
                 ...
                </span>
               </span>
               )
              </span>
             </dd>
            </dl>
           </div>
          </li>
         </ol>
        </div>
        <div class="values members">
         <h3>
          Deprecated Value Members
         </h3>
         <ol>
          <li class="indented0" data-isabs="false" fullcomment="yes" group="Ungrouped" name="scala.AnyRef#finalize" visbl="prt">
           <a id="finalize():Unit">
           </a>
           <span class="permalink">
            <a href="../../../com/snowflake/snowpark/FileOperation.html#finalize():Unit" title="Permalink">
             <i class="material-icons">
              
             </i>
            </a>
           </span>
           <span class="modifier_kind">
            <span class="modifier">
            </span>
            <span class="kind">
             def
            </span>
           </span>
           <span class="symbol">
            <span class="name deprecated" title="Deprecated: ">
             finalize
            </span>
            <span class="params">
             ()
            </span>
            <span class="result">
             :
             <span class="extype" name="scala.Unit">
              Unit
             </span>
            </span>
           </span>
           <div class="fullcomment">
            <dl class="attributes block">
             <dt>
              Attributes
             </dt>
             <dd>
              protected[
              <span class="extype" name="java.lang">
               lang
              </span>
              ]
             </dd>
             <dt>
              Definition Classes
             </dt>
             <dd>
              AnyRef
             </dd>
             <dt>
              Annotations
             </dt>
             <dd>
              <span class="name">
               @throws
              </span>
              <span class="args">
               (
               <span>
                <span class="symbol">
                 classOf[java.lang.Throwable]
                </span>
               </span>
               )
              </span>
              <span class="name">
               @Deprecated
              </span>
             </dd>
             <dt>
              Deprecated
             </dt>
             <dd class="cmt">
             </dd>
            </dl>
           </div>
          </li>
         </ol>
        </div>
       </div>
       <div id="inheritedMembers">
        <div class="parent" name="com.snowflake.snowpark.internal.Logging">
         <h3>
          Inherited from
          <span class="extype" name="com.snowflake.snowpark.internal.Logging">
           Logging
          </span>
         </h3>
        </div>
        <div class="parent" name="scala.AnyRef">
         <h3>
          Inherited from
          <span class="extype" name="scala.AnyRef">
           AnyRef
          </span>
         </h3>
        </div>
        <div class="parent" name="scala.Any">
         <h3>
          Inherited from
          <span class="extype" name="scala.Any">
           Any
          </span>
         </h3>
        </div>
       </div>
       <div id="groupedMembers">
        <div class="group" name="Ungrouped">
         <h3>
          Ungrouped
         </h3>
        </div>
       </div>
      </div>
      <div id="tooltip">
      </div>
      <div id="footer">
       © 2023 Snowflake Inc. All Rights Reserved
      </div>
     </body>
    </div>
   </div>
  </div>
 </body>
</html>
