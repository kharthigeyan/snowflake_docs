Index.PACKAGES = {"com.snowflake.snowpark.types" : [{"name" : "com.snowflake.snowpark.types.ArrayType", "shortDescription" : "Array data type.", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.ArrayType.toString", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#toString():String", "kind" : "def"}, {"member" : "com.snowflake.snowpark.types.ArrayType#<init>", "error" : "unsupported entity"}, {"label" : "elementType", "tail" : ": DataType", "member" : "com.snowflake.snowpark.types.ArrayType.elementType", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#elementType:com.snowflake.snowpark.types.DataType", "kind" : "val"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/ArrayType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/types\/ArrayType.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.types.BinaryType", "shortDescription" : "Binary data type.", "object" : "com\/snowflake\/snowpark\/types\/BinaryType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/BinaryType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.BooleanType", "shortDescription" : "Boolean data type.", "object" : "com\/snowflake\/snowpark\/types\/BooleanType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/BooleanType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.ByteType", "shortDescription" : "Byte data type.", "object" : "com\/snowflake\/snowpark\/types\/ByteType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/ByteType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.ColumnIdentifier", "shortDescription" : " Constructors and Util functions of ColumnIdentifier", "object" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.ColumnIdentifier.toString", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.snowflake.snowpark.types.ColumnIdentifier.equals", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.snowflake.snowpark.types.ColumnIdentifier.hashCode", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#hashCode():Int", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "com.snowflake.snowpark.types.ColumnIdentifier.clone", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#clone():AnyRef", "kind" : "def"}, {"label" : "quotedName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.ColumnIdentifier.quotedName", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#quotedName:String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.snowflake.snowpark.types.ColumnIdentifier.name", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(name: String): ColumnIdentifier", "member" : "com.snowflake.snowpark.types.ColumnIdentifier.apply", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#apply(name:String):com.snowflake.snowpark.types.ColumnIdentifier", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/types\/ColumnIdentifier.html", "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.DataType", "shortDescription" : "The trait of Snowpark data types", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#typeName:String", "kind" : "def"}, {"member" : "com.snowflake.snowpark.types.DataType#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/DataType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/DataType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/types\/DataType.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.types.DateType", "shortDescription" : "Date data type.", "object" : "com\/snowflake\/snowpark\/types\/DateType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/DateType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.DecimalType", "shortDescription" : "Decimal data type.", "object" : "com\/snowflake\/snowpark\/types\/DecimalType$.html", "members_object" : [{"label" : "apply", "tail" : "(decimal: BigDecimal): DecimalType", "member" : "com.snowflake.snowpark.types.DecimalType.apply", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#apply(decimal:BigDecimal):com.snowflake.snowpark.types.DecimalType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/DecimalType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DecimalType.toString", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DecimalType.typeName", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#typeName:String", "kind" : "def"}, {"member" : "com.snowflake.snowpark.types.DecimalType#<init>", "error" : "unsupported entity"}, {"label" : "scale", "tail" : ": Int", "member" : "com.snowflake.snowpark.types.DecimalType.scale", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#scale:Int", "kind" : "val"}, {"label" : "precision", "tail" : ": Int", "member" : "com.snowflake.snowpark.types.DecimalType.precision", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#precision:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/DecimalType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/types\/DecimalType.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.types.DoubleType", "shortDescription" : "Double data type.", "object" : "com\/snowflake\/snowpark\/types\/DoubleType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/DoubleType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.FloatType", "shortDescription" : "Float data type.", "object" : "com\/snowflake\/snowpark\/types\/FloatType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/FloatType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.Geography", "shortDescription" : "Companion object of Geography class.", "object" : "com\/snowflake\/snowpark\/types\/Geography$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.Geography.toString", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#toString():String", "kind" : "def"}, {"label" : "getString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.Geography.getString", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#getString:String", "kind" : "def"}, {"label" : "asGeoJSON", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.Geography.asGeoJSON", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#asGeoJSON():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.snowflake.snowpark.types.Geography.hashCode", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.snowflake.snowpark.types.Geography.equals", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/Geography.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/Geography.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromGeoJSON", "tail" : "(g: String): Geography", "member" : "com.snowflake.snowpark.types.Geography.fromGeoJSON", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#fromGeoJSON(g:String):com.snowflake.snowpark.types.Geography", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/Geography$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/types\/Geography.html", "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.GeographyType", "shortDescription" : "Geography data type.", "object" : "com\/snowflake\/snowpark\/types\/GeographyType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.GeographyType.toString", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/GeographyType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.Geometry", "shortDescription" : "Companion object of Geometry class.", "object" : "com\/snowflake\/snowpark\/types\/Geometry$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.Geometry.toString", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.snowflake.snowpark.types.Geometry.hashCode", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.snowflake.snowpark.types.Geometry.equals", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/Geometry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromGeoJSON", "tail" : "(g: String): Geometry", "member" : "com.snowflake.snowpark.types.Geometry.fromGeoJSON", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#fromGeoJSON(g:String):com.snowflake.snowpark.types.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/Geometry$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/types\/Geometry.html", "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.GeometryType", "shortDescription" : "Geometry data type.", "object" : "com\/snowflake\/snowpark\/types\/GeometryType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.GeometryType.toString", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/GeometryType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.IntegerType", "shortDescription" : "Integer data type.", "object" : "com\/snowflake\/snowpark\/types\/IntegerType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/IntegerType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.LongType", "shortDescription" : "Long integer data type.", "object" : "com\/snowflake\/snowpark\/types\/LongType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/LongType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.MapType", "shortDescription" : "Map data type.", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.MapType.toString", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#toString():String", "kind" : "def"}, {"member" : "com.snowflake.snowpark.types.MapType#<init>", "error" : "unsupported entity"}, {"label" : "valueType", "tail" : ": DataType", "member" : "com.snowflake.snowpark.types.MapType.valueType", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#valueType:com.snowflake.snowpark.types.DataType", "kind" : "val"}, {"label" : "keyType", "tail" : ": DataType", "member" : "com.snowflake.snowpark.types.MapType.keyType", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#keyType:com.snowflake.snowpark.types.DataType", "kind" : "val"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/MapType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/MapType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/types\/MapType.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.types.ShortType", "shortDescription" : "Short integer data type.", "object" : "com\/snowflake\/snowpark\/types\/ShortType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/ShortType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.StringType", "shortDescription" : "String data type.", "object" : "com\/snowflake\/snowpark\/types\/StringType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/StringType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.StructField", "shortDescription" : "Constructors and Util functions of StructField", "object" : "com\/snowflake\/snowpark\/types\/StructField$.html", "members_object" : [{"label" : "apply", "tail" : "(name: String, dataType: DataType): StructField", "member" : "com.snowflake.snowpark.types.StructField.apply", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#apply(name:String,dataType:com.snowflake.snowpark.types.DataType):com.snowflake.snowpark.types.StructField", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, dataType: DataType, nullable: Boolean): StructField", "member" : "com.snowflake.snowpark.types.StructField.apply", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#apply(name:String,dataType:com.snowflake.snowpark.types.DataType,nullable:Boolean):com.snowflake.snowpark.types.StructField", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/StructField$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.StructField.toString", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.snowflake.snowpark.types.StructField.name", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#name:String", "kind" : "val"}, {"member" : "com.snowflake.snowpark.types.StructField#<init>", "error" : "unsupported entity"}, {"label" : "nullable", "tail" : ": Boolean", "member" : "com.snowflake.snowpark.types.StructField.nullable", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#nullable:Boolean", "kind" : "val"}, {"label" : "dataType", "tail" : ": DataType", "member" : "com.snowflake.snowpark.types.StructField.dataType", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#dataType:com.snowflake.snowpark.types.DataType", "kind" : "val"}, {"label" : "columnIdentifier", "tail" : ": ColumnIdentifier", "member" : "com.snowflake.snowpark.types.StructField.columnIdentifier", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#columnIdentifier:com.snowflake.snowpark.types.ColumnIdentifier", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/StructField.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/StructField.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/types\/StructField.html", "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.StructType", "shortDescription" : "StructType data type, represents table schema.", "object" : "com\/snowflake\/snowpark\/types\/StructType$.html", "members_object" : [{"label" : "apply", "tail" : "(field: StructField, remaining: StructField*): StructType", "member" : "com.snowflake.snowpark.types.StructType.apply", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#apply(field:com.snowflake.snowpark.types.StructField,remaining:com.snowflake.snowpark.types.StructField*):com.snowflake.snowpark.types.StructType", "kind" : "def"}, {"label" : "apply", "tail" : "(fields: Seq[StructField]): StructType", "member" : "com.snowflake.snowpark.types.StructType.apply", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#apply(fields:Seq[com.snowflake.snowpark.types.StructField]):com.snowflake.snowpark.types.StructType", "kind" : "def"}, {"label" : "apply", "tail" : "(other: StructType): StructType", "member" : "com.snowflake.snowpark.types.StructType.apply", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#apply(other:com.snowflake.snowpark.types.StructType):com.snowflake.snowpark.types.StructType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/StructType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "printTreeString", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.types.StructType.printTreeString", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#printTreeString():Unit", "kind" : "def"}, {"label" : "toAttributes", "tail" : "(): Seq[Attribute]", "member" : "com.snowflake.snowpark.types.StructType.toAttributes", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toAttributes:Seq[com.snowflake.snowpark.internal.analyzer.Attribute]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String): StructField", "member" : "com.snowflake.snowpark.types.StructType.apply", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#apply(name:String):com.snowflake.snowpark.types.StructField", "kind" : "def"}, {"label" : "nameToField", "tail" : "(name: String): Option[StructField]", "member" : "com.snowflake.snowpark.types.StructType.nameToField", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#nameToField(name:String):Option[com.snowflake.snowpark.types.StructField]", "kind" : "def"}, {"label" : "names", "tail" : "(): Seq[String]", "member" : "com.snowflake.snowpark.types.StructType.names", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#names:Seq[String]", "kind" : "def"}, {"label" : "add", "tail" : "(name: String, dataType: DataType, nullable: Boolean): StructType", "member" : "com.snowflake.snowpark.types.StructType.add", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#add(name:String,dataType:com.snowflake.snowpark.types.DataType,nullable:Boolean):com.snowflake.snowpark.types.StructType", "kind" : "def"}, {"label" : "add", "tail" : "(field: StructField): StructType", "member" : "com.snowflake.snowpark.types.StructType.add", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#add(field:com.snowflake.snowpark.types.StructField):com.snowflake.snowpark.types.StructType", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.StructType.toString", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toString():String", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): StructField", "member" : "com.snowflake.snowpark.types.StructType.apply", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#apply(idx:Int):com.snowflake.snowpark.types.StructField", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[StructField]", "member" : "com.snowflake.snowpark.types.StructType.iterator", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#iterator:Iterator[com.snowflake.snowpark.types.StructField]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.snowflake.snowpark.types.StructType.length", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#length:Int", "kind" : "def"}, {"member" : "com.snowflake.snowpark.types.StructType#<init>", "error" : "unsupported entity"}, {"label" : "fields", "tail" : ": Array[StructField]", "member" : "com.snowflake.snowpark.types.StructType.fields", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#fields:Array[com.snowflake.snowpark.types.StructField]", "kind" : "val"}, {"label" : "seq", "tail" : "(): Seq[StructField]", "member" : "scala.collection.Seq.seq", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#seq:Seq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Seq]", "member" : "scala.collection.Seq.companion", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#companion:scala.collection.generic.GenericCompanion[Seq]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[StructField, Seq[StructField]]", "member" : "scala.collection.SeqLike.view", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[StructField, Seq[StructField]]", "member" : "scala.collection.SeqLike.view", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[StructField]", "member" : "scala.collection.SeqLike.toSeq", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[StructField]", "member" : "scala.collection.SeqLike.sorted", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (StructField) ⇒ B)(ord: Ordering[B]): Seq[StructField]", "member" : "scala.collection.SeqLike.sortBy", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (StructField, StructField) ⇒ Boolean): Seq[StructField]", "member" : "scala.collection.SeqLike.sortWith", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (StructField, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[StructField]", "member" : "scala.collection.SeqLike.distinct", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Seq[StructField]", "member" : "scala.collection.SeqLike.intersect", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Seq[StructField]", "member" : "scala.collection.SeqLike.diff", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[StructField]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (StructField) ⇒ B)(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[StructField]", "member" : "scala.collection.SeqLike.reverse", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[StructField]]", "member" : "scala.collection.SeqLike.combinations", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[StructField]]", "member" : "scala.collection.SeqLike.permutations", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (StructField) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexWhere", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (StructField) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.indexWhere", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (StructField) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.SeqLike.segmentLength", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqLike.isEmpty", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqLike.lengthCompare", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[StructField, ParSeq[StructField]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Seq[StructField]): Seq[StructField]", "member" : "scala.collection.SeqLike.toCollection", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toCollection(repr:Repr):Seq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Seq[StructField]", "member" : "scala.collection.SeqLike.thisCollection", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#thisCollection:Seq[A]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenSeqLike.hashCode", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#hashCode():Int", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (StructField) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (StructField) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (StructField) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[StructField]", "member" : "scala.collection.IterableLike.toStream", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Seq[StructField], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Seq[StructField], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Seq[StructField], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[StructField]", "member" : "scala.collection.IterableLike.dropRight", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[StructField]", "member" : "scala.collection.IterableLike.takeRight", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[StructField]]", "member" : "scala.collection.IterableLike.sliding", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[StructField]]", "member" : "scala.collection.IterableLike.sliding", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[StructField]]", "member" : "scala.collection.IterableLike.grouped", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (StructField) ⇒ Boolean): Seq[StructField]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[StructField]", "member" : "scala.collection.IterableLike.drop", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[StructField]", "member" : "scala.collection.IterableLike.take", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[StructField]", "member" : "scala.collection.IterableLike.slice", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): StructField", "member" : "scala.collection.IterableLike.head", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[StructField]", "member" : "scala.collection.IterableLike.toIterator", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[StructField]", "member" : "scala.collection.IterableLike.toIterable", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (StructField, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (StructField, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (StructField) ⇒ Boolean): Option[StructField]", "member" : "scala.collection.IterableLike.find", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (StructField) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (StructField) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (StructField) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (StructField) ⇒ GenTraversableOnce[B]): Seq[Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (StructField) ⇒ GenTraversableOnce[B]): Seq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (StructField) ⇒ (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (StructField) ⇒ (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Seq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[StructField, Seq[StructField]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (StructField) ⇒ Boolean): FilterMonadic[StructField, Seq[StructField]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, StructField, Col[StructField]]): Col[StructField]", "member" : "scala.collection.TraversableLike.to", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[StructField]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[StructField]]", "member" : "scala.collection.TraversableLike.inits", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[StructField]]", "member" : "scala.collection.TraversableLike.tails", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[StructField], Seq[StructField])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (StructField) ⇒ Boolean): (Seq[StructField], Seq[StructField])", "member" : "scala.collection.TraversableLike.span", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (StructField) ⇒ Boolean): Seq[StructField]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[StructField]", "member" : "scala.collection.TraversableLike.init", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[StructField]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): StructField", "member" : "scala.collection.TraversableLike.last", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[StructField]", "member" : "scala.collection.TraversableLike.tail", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[StructField]", "member" : "scala.collection.TraversableLike.headOption", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (StructField, B) ⇒ B)(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, StructField) ⇒ B)(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (StructField) ⇒ K): Map[K, Seq[StructField]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (StructField) ⇒ Boolean): (Seq[StructField], Seq[StructField])", "member" : "scala.collection.TraversableLike.partition", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[StructField, B])(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (StructField) ⇒ Boolean): Seq[StructField]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (StructField) ⇒ Boolean): Seq[StructField]", "member" : "scala.collection.TraversableLike.filter", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (StructField) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (StructField) ⇒ B)(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Seq[StructField], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Seq[StructField]", "member" : "scala.collection.TraversableLike.repr", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[StructField]", "member" : "scala.collection.Parallelizable.par", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[StructField, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[StructField]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[StructField]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[StructField]", "member" : "scala.collection.TraversableOnce.toList", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (StructField) ⇒ B)(cmp: Ordering[B]): StructField", "member" : "scala.collection.TraversableOnce.minBy", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (StructField) ⇒ B)(cmp: Ordering[B]): StructField", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): StructField", "member" : "scala.collection.TraversableOnce.max", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): StructField", "member" : "scala.collection.TraversableOnce.min", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, StructField) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (StructField, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, StructField) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, StructField) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, StructField) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (StructField, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, StructField) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[StructField, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (StructField) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[StructField]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (StructField) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[StructField]", "member" : "scala.PartialFunction.lift", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (StructField) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ StructField", "member" : "scala.Function1.compose", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/StructType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/StructType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/types\/StructType.html", "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.TimestampType", "shortDescription" : "Timestamp data type.", "object" : "com\/snowflake\/snowpark\/types\/TimestampType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/TimestampType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.TimeType", "shortDescription" : "Time data type.", "object" : "com\/snowflake\/snowpark\/types\/TimeType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/TimeType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.types.Variant", "shortDescription" : "Representation of Snowflake Variant data", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "com.snowflake.snowpark.types.Variant.hashCode", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.snowflake.snowpark.types.Variant.equals", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "asMap", "tail" : "(): Map[String, Variant]", "member" : "com.snowflake.snowpark.types.Variant.asMap", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asMap():Map[String,com.snowflake.snowpark.types.Variant]", "kind" : "def"}, {"label" : "asArray", "tail" : "(): Array[Variant]", "member" : "com.snowflake.snowpark.types.Variant.asArray", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asArray():Array[com.snowflake.snowpark.types.Variant]", "kind" : "def"}, {"label" : "asSeq", "tail" : "(): Seq[Variant]", "member" : "com.snowflake.snowpark.types.Variant.asSeq", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asSeq():Seq[com.snowflake.snowpark.types.Variant]", "kind" : "def"}, {"label" : "asTimestamp", "tail" : "(): Timestamp", "member" : "com.snowflake.snowpark.types.Variant.asTimestamp", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asTimestamp():java.sql.Timestamp", "kind" : "def"}, {"label" : "asDate", "tail" : "(): Date", "member" : "com.snowflake.snowpark.types.Variant.asDate", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asDate():java.sql.Date", "kind" : "def"}, {"label" : "asTime", "tail" : "(): Time", "member" : "com.snowflake.snowpark.types.Variant.asTime", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asTime():java.sql.Time", "kind" : "def"}, {"label" : "asBinary", "tail" : "(): Array[Byte]", "member" : "com.snowflake.snowpark.types.Variant.asBinary", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asBinary():Array[Byte]", "kind" : "def"}, {"label" : "asJsonString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.Variant.asJsonString", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asJsonString():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.Variant.toString", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#toString():String", "kind" : "def"}, {"label" : "asString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.Variant.asString", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asString():String", "kind" : "def"}, {"label" : "asBoolean", "tail" : "(): Boolean", "member" : "com.snowflake.snowpark.types.Variant.asBoolean", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asBoolean():Boolean", "kind" : "def"}, {"label" : "asBigInt", "tail" : "(): BigInt", "member" : "com.snowflake.snowpark.types.Variant.asBigInt", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asBigInt():BigInt", "kind" : "def"}, {"label" : "asBigDecimal", "tail" : "(): BigDecimal", "member" : "com.snowflake.snowpark.types.Variant.asBigDecimal", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asBigDecimal():BigDecimal", "kind" : "def"}, {"label" : "asShort", "tail" : "(): Short", "member" : "com.snowflake.snowpark.types.Variant.asShort", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asShort():Short", "kind" : "def"}, {"label" : "asInt", "tail" : "(): Int", "member" : "com.snowflake.snowpark.types.Variant.asInt", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asInt():Int", "kind" : "def"}, {"label" : "asLong", "tail" : "(): Long", "member" : "com.snowflake.snowpark.types.Variant.asLong", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asLong():Long", "kind" : "def"}, {"label" : "asFloat", "tail" : "(): Float", "member" : "com.snowflake.snowpark.types.Variant.asFloat", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asFloat():Float", "kind" : "def"}, {"label" : "asDouble", "tail" : "(): Double", "member" : "com.snowflake.snowpark.types.Variant.asDouble", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asDouble():Double", "kind" : "def"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"member" : "com.snowflake.snowpark.types.Variant#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/Variant.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/Variant.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/types\/Variant.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.types.VariantType", "shortDescription" : "Variant data type.", "object" : "com\/snowflake\/snowpark\/types\/VariantType$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.toString", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#toString():String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "com.snowflake.snowpark.types.DataType.typeName", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/types\/VariantType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.snowflake.snowpark" : [{"name" : "com.snowflake.snowpark.AsyncJob", "shortDescription" : "Provides a way to track an asynchronous query in Snowflake.", "members_class" : [{"label" : "cancel", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.AsyncJob.cancel", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#cancel():Unit", "kind" : "def"}, {"label" : "isDone", "tail" : "(): Boolean", "member" : "com.snowflake.snowpark.AsyncJob.isDone", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#isDone():Boolean", "kind" : "def"}, {"label" : "getRows", "tail" : "(maxWaitTimeInSeconds: Int): Array[Row]", "member" : "com.snowflake.snowpark.AsyncJob.getRows", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#getRows(maxWaitTimeInSeconds:Int):Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "getIterator", "tail" : "(maxWaitTimeInSeconds: Int): Iterator[Row]", "member" : "com.snowflake.snowpark.AsyncJob.getIterator", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#getIterator(maxWaitTimeInSeconds:Int):Iterator[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "getQueryId", "tail" : "(): String", "member" : "com.snowflake.snowpark.AsyncJob.getQueryId", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#getQueryId():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/AsyncJob.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/AsyncJob.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/AsyncJob.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.CaseExpr", "shortDescription" : "Represents aCASE expression.", "members_class" : [{"label" : "else", "tail" : "(value: Column): Column", "member" : "com.snowflake.snowpark.CaseExpr.else", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#else(value:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "otherwise", "tail" : "(value: Column): Column", "member" : "com.snowflake.snowpark.CaseExpr.otherwise", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#otherwise(value:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "when", "tail" : "(condition: Column, value: Column): CaseExpr", "member" : "com.snowflake.snowpark.CaseExpr.when", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#when(condition:com.snowflake.snowpark.Column,value:com.snowflake.snowpark.Column):com.snowflake.snowpark.CaseExpr", "kind" : "def"}, {"label" : "withExpr", "tail" : "(newExpr: Expression): Column", "member" : "com.snowflake.snowpark.Column.withExpr", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#withExpr(newExpr:com.snowflake.snowpark.internal.analyzer.Expression):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "collate", "tail" : "(collateSpec: String): Column", "member" : "com.snowflake.snowpark.Column.collate", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#collate(collateSpec:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "withinGroup", "tail" : "(cols: Seq[Column]): Column", "member" : "com.snowflake.snowpark.Column.withinGroup", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#withinGroup(cols:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "withinGroup", "tail" : "(first: Column, remaining: Column*): Column", "member" : "com.snowflake.snowpark.Column.withinGroup", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#withinGroup(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "regexp", "tail" : "(pattern: Column): Column", "member" : "com.snowflake.snowpark.Column.regexp", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#regexp(pattern:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "like", "tail" : "(pattern: Column): Column", "member" : "com.snowflake.snowpark.Column.like", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#like(pattern:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "over", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.over", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#over():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "over", "tail" : "(window: WindowSpec): Column", "member" : "com.snowflake.snowpark.Column.over", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#over(window:com.snowflake.snowpark.WindowSpec):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "bitxor", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.bitxor", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#bitxor(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "bitand", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.bitand", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#bitand(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "bitor", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.bitor", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#bitor(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "asc_nulls_last", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.asc_nulls_last", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#asc_nulls_last:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "asc_nulls_first", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.asc_nulls_first", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#asc_nulls_first:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "asc", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.asc", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#asc:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "desc_nulls_last", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.desc_nulls_last", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#desc_nulls_last:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "desc_nulls_first", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.desc_nulls_first", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#desc_nulls_first:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "desc", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.desc", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#desc:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "cast", "tail" : "(to: DataType): Column", "member" : "com.snowflake.snowpark.Column.cast", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#cast(to:com.snowflake.snowpark.types.DataType):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "mod", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.mod", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#mod(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "%", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.%", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#%(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "divide", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.divide", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#divide(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.\/", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#\/(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "multiply", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.multiply", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#multiply(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "*", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.*", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#*(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "minus", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.minus", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#minus(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "-", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.-", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#-(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "plus", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.plus", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#plus(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "+", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.+", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#+(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "between", "tail" : "(lowerBound: Column, upperBound: Column): Column", "member" : "com.snowflake.snowpark.Column.between", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#between(lowerBound:com.snowflake.snowpark.Column,upperBound:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "and", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.and", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#and(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "&&", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.&&", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#&&(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "or", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.or", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#or(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "||", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.||", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#||(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_not_null", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.is_not_null", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#is_not_null:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "isNull", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.isNull", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#isNull:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_null", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.is_null", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#is_null:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "equal_nan", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.equal_nan", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#equal_nan:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "equal_null", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.equal_null", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#equal_null(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "<=>", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.<=>", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#<=>(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "geq", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.geq", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#geq(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : ">=", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.>=", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#>=(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "leq", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.leq", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#leq(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "<=", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.<=", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#<=(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lt", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.lt", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#lt(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "<", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.<", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#<(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "gt", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.gt", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#gt(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : ">", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.>", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#>(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "not_equal", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.not_equal", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#not_equal(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "=!=", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.=!=", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#=!=(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "equal_to", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.equal_to", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#equal_to(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "===", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.===", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#===(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.unary_!", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#unary_!:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.unary_-", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#unary_-:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "name", "tail" : "(alias: String): Column", "member" : "com.snowflake.snowpark.Column.name", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#name(alias:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "alias", "tail" : "(alias: String): Column", "member" : "com.snowflake.snowpark.Column.alias", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#alias(alias:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as", "tail" : "(alias: String): Column", "member" : "com.snowflake.snowpark.Column.as", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#as(alias:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.Column.toString", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#toString():String", "kind" : "def"}, {"label" : "getName", "tail" : "(): Option[String]", "member" : "com.snowflake.snowpark.Column.getName", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#getName:Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): Column", "member" : "com.snowflake.snowpark.Column.apply", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#apply(idx:Int):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "apply", "tail" : "(field: String): Column", "member" : "com.snowflake.snowpark.Column.apply", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#apply(field:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "in", "tail" : "(df: DataFrame): Column", "member" : "com.snowflake.snowpark.Column.in", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#in(df:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "in", "tail" : "(values: Seq[Any]): Column", "member" : "com.snowflake.snowpark.Column.in", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#in(values:Seq[Any]):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/CaseExpr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/CaseExpr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/CaseExpr.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.Column", "shortDescription" : "Represents a column or an expression in a DataFrame.", "members_case class" : [{"label" : "withExpr", "tail" : "(newExpr: Expression): Column", "member" : "com.snowflake.snowpark.Column.withExpr", "link" : "com\/snowflake\/snowpark\/Column.html#withExpr(newExpr:com.snowflake.snowpark.internal.analyzer.Expression):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "collate", "tail" : "(collateSpec: String): Column", "member" : "com.snowflake.snowpark.Column.collate", "link" : "com\/snowflake\/snowpark\/Column.html#collate(collateSpec:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "withinGroup", "tail" : "(cols: Seq[Column]): Column", "member" : "com.snowflake.snowpark.Column.withinGroup", "link" : "com\/snowflake\/snowpark\/Column.html#withinGroup(cols:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "withinGroup", "tail" : "(first: Column, remaining: Column*): Column", "member" : "com.snowflake.snowpark.Column.withinGroup", "link" : "com\/snowflake\/snowpark\/Column.html#withinGroup(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "regexp", "tail" : "(pattern: Column): Column", "member" : "com.snowflake.snowpark.Column.regexp", "link" : "com\/snowflake\/snowpark\/Column.html#regexp(pattern:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "like", "tail" : "(pattern: Column): Column", "member" : "com.snowflake.snowpark.Column.like", "link" : "com\/snowflake\/snowpark\/Column.html#like(pattern:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "over", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.over", "link" : "com\/snowflake\/snowpark\/Column.html#over():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "over", "tail" : "(window: WindowSpec): Column", "member" : "com.snowflake.snowpark.Column.over", "link" : "com\/snowflake\/snowpark\/Column.html#over(window:com.snowflake.snowpark.WindowSpec):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "bitxor", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.bitxor", "link" : "com\/snowflake\/snowpark\/Column.html#bitxor(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "bitand", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.bitand", "link" : "com\/snowflake\/snowpark\/Column.html#bitand(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "bitor", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.bitor", "link" : "com\/snowflake\/snowpark\/Column.html#bitor(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "asc_nulls_last", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.asc_nulls_last", "link" : "com\/snowflake\/snowpark\/Column.html#asc_nulls_last:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "asc_nulls_first", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.asc_nulls_first", "link" : "com\/snowflake\/snowpark\/Column.html#asc_nulls_first:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "asc", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.asc", "link" : "com\/snowflake\/snowpark\/Column.html#asc:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "desc_nulls_last", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.desc_nulls_last", "link" : "com\/snowflake\/snowpark\/Column.html#desc_nulls_last:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "desc_nulls_first", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.desc_nulls_first", "link" : "com\/snowflake\/snowpark\/Column.html#desc_nulls_first:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "desc", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.desc", "link" : "com\/snowflake\/snowpark\/Column.html#desc:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "cast", "tail" : "(to: DataType): Column", "member" : "com.snowflake.snowpark.Column.cast", "link" : "com\/snowflake\/snowpark\/Column.html#cast(to:com.snowflake.snowpark.types.DataType):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "mod", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.mod", "link" : "com\/snowflake\/snowpark\/Column.html#mod(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "%", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.%", "link" : "com\/snowflake\/snowpark\/Column.html#%(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "divide", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.divide", "link" : "com\/snowflake\/snowpark\/Column.html#divide(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "\/", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.\/", "link" : "com\/snowflake\/snowpark\/Column.html#\/(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "multiply", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.multiply", "link" : "com\/snowflake\/snowpark\/Column.html#multiply(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "*", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.*", "link" : "com\/snowflake\/snowpark\/Column.html#*(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "minus", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.minus", "link" : "com\/snowflake\/snowpark\/Column.html#minus(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "-", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.-", "link" : "com\/snowflake\/snowpark\/Column.html#-(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "plus", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.plus", "link" : "com\/snowflake\/snowpark\/Column.html#plus(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "+", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.+", "link" : "com\/snowflake\/snowpark\/Column.html#+(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "between", "tail" : "(lowerBound: Column, upperBound: Column): Column", "member" : "com.snowflake.snowpark.Column.between", "link" : "com\/snowflake\/snowpark\/Column.html#between(lowerBound:com.snowflake.snowpark.Column,upperBound:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "and", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.and", "link" : "com\/snowflake\/snowpark\/Column.html#and(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "&&", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.&&", "link" : "com\/snowflake\/snowpark\/Column.html#&&(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "or", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.or", "link" : "com\/snowflake\/snowpark\/Column.html#or(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "||", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.||", "link" : "com\/snowflake\/snowpark\/Column.html#||(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_not_null", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.is_not_null", "link" : "com\/snowflake\/snowpark\/Column.html#is_not_null:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "isNull", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.isNull", "link" : "com\/snowflake\/snowpark\/Column.html#isNull:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_null", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.is_null", "link" : "com\/snowflake\/snowpark\/Column.html#is_null:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "equal_nan", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.equal_nan", "link" : "com\/snowflake\/snowpark\/Column.html#equal_nan:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "equal_null", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.equal_null", "link" : "com\/snowflake\/snowpark\/Column.html#equal_null(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "<=>", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.<=>", "link" : "com\/snowflake\/snowpark\/Column.html#<=>(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "geq", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.geq", "link" : "com\/snowflake\/snowpark\/Column.html#geq(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : ">=", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.>=", "link" : "com\/snowflake\/snowpark\/Column.html#>=(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "leq", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.leq", "link" : "com\/snowflake\/snowpark\/Column.html#leq(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "<=", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.<=", "link" : "com\/snowflake\/snowpark\/Column.html#<=(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lt", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.lt", "link" : "com\/snowflake\/snowpark\/Column.html#lt(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "<", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.<", "link" : "com\/snowflake\/snowpark\/Column.html#<(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "gt", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.gt", "link" : "com\/snowflake\/snowpark\/Column.html#gt(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : ">", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.>", "link" : "com\/snowflake\/snowpark\/Column.html#>(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "not_equal", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.not_equal", "link" : "com\/snowflake\/snowpark\/Column.html#not_equal(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "=!=", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.=!=", "link" : "com\/snowflake\/snowpark\/Column.html#=!=(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "equal_to", "tail" : "(other: Column): Column", "member" : "com.snowflake.snowpark.Column.equal_to", "link" : "com\/snowflake\/snowpark\/Column.html#equal_to(other:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "===", "tail" : "(other: Any): Column", "member" : "com.snowflake.snowpark.Column.===", "link" : "com\/snowflake\/snowpark\/Column.html#===(other:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.unary_!", "link" : "com\/snowflake\/snowpark\/Column.html#unary_!:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): Column", "member" : "com.snowflake.snowpark.Column.unary_-", "link" : "com\/snowflake\/snowpark\/Column.html#unary_-:com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "name", "tail" : "(alias: String): Column", "member" : "com.snowflake.snowpark.Column.name", "link" : "com\/snowflake\/snowpark\/Column.html#name(alias:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "alias", "tail" : "(alias: String): Column", "member" : "com.snowflake.snowpark.Column.alias", "link" : "com\/snowflake\/snowpark\/Column.html#alias(alias:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as", "tail" : "(alias: String): Column", "member" : "com.snowflake.snowpark.Column.as", "link" : "com\/snowflake\/snowpark\/Column.html#as(alias:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.Column.toString", "link" : "com\/snowflake\/snowpark\/Column.html#toString():String", "kind" : "def"}, {"label" : "getName", "tail" : "(): Option[String]", "member" : "com.snowflake.snowpark.Column.getName", "link" : "com\/snowflake\/snowpark\/Column.html#getName:Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): Column", "member" : "com.snowflake.snowpark.Column.apply", "link" : "com\/snowflake\/snowpark\/Column.html#apply(idx:Int):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "apply", "tail" : "(field: String): Column", "member" : "com.snowflake.snowpark.Column.apply", "link" : "com\/snowflake\/snowpark\/Column.html#apply(field:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "in", "tail" : "(df: DataFrame): Column", "member" : "com.snowflake.snowpark.Column.in", "link" : "com\/snowflake\/snowpark\/Column.html#in(df:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "in", "tail" : "(values: Seq[Any]): Column", "member" : "com.snowflake.snowpark.Column.in", "link" : "com\/snowflake\/snowpark\/Column.html#in(values:Seq[Any]):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/Column.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/Column.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/Column.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/Column.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/Column.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/Column.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/Column.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/Column.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/Column.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/Column.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/Column.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/Column.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/Column.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/Column.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/Column.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/Column.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/Column.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/Column.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Column.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Column.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Column.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/Column.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/Column.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/Column.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/Column.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/Column.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/Column.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/Column.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.CopyableDataFrame", "shortDescription" : "DataFrame for loading data from files in a stage to a table.", "members_class" : [{"label" : "async", "tail" : "(): CopyableDataFrameAsyncActor", "member" : "com.snowflake.snowpark.CopyableDataFrame.async", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#async:com.snowflake.snowpark.CopyableDataFrameAsyncActor", "kind" : "def"}, {"label" : "clone", "tail" : "(): CopyableDataFrame", "member" : "com.snowflake.snowpark.CopyableDataFrame.clone", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#clone():com.snowflake.snowpark.CopyableDataFrame", "kind" : "def"}, {"label" : "copyInto", "tail" : "(tableName: String, targetColumnNames: Seq[String], transformations: Seq[Column], options: Map[String, Any]): Unit", "member" : "com.snowflake.snowpark.CopyableDataFrame.copyInto", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#copyInto(tableName:String,targetColumnNames:Seq[String],transformations:Seq[com.snowflake.snowpark.Column],options:Map[String,Any]):Unit", "kind" : "def"}, {"label" : "copyInto", "tail" : "(tableName: String, transformations: Seq[Column], options: Map[String, Any]): Unit", "member" : "com.snowflake.snowpark.CopyableDataFrame.copyInto", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#copyInto(tableName:String,transformations:Seq[com.snowflake.snowpark.Column],options:Map[String,Any]):Unit", "kind" : "def"}, {"label" : "copyInto", "tail" : "(tableName: String, transformations: Seq[Column]): Unit", "member" : "com.snowflake.snowpark.CopyableDataFrame.copyInto", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#copyInto(tableName:String,transformations:Seq[com.snowflake.snowpark.Column]):Unit", "kind" : "def"}, {"label" : "copyInto", "tail" : "(tableName: String): Unit", "member" : "com.snowflake.snowpark.CopyableDataFrame.copyInto", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#copyInto(tableName:String):Unit", "kind" : "def"}, {"label" : "withPlan", "tail" : "(plan: LogicalPlan): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withPlan", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#withPlan(plan:com.snowflake.snowpark.internal.analyzer.LogicalPlan):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "disambiguate", "tail" : "(lhs: DataFrame, rhs: DataFrame, joinType: JoinType, usingColumns: Seq[String]): (DataFrame, DataFrame)", "member" : "com.snowflake.snowpark.DataFrame.disambiguate", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#disambiguate(lhs:com.snowflake.snowpark.DataFrame,rhs:com.snowflake.snowpark.DataFrame,joinType:com.snowflake.snowpark.internal.analyzer.JoinType,usingColumns:Seq[String]):(com.snowflake.snowpark.DataFrame,com.snowflake.snowpark.DataFrame)", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column, path: String, outer: Boolean, recursive: Boolean, mode: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.flatten", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#flatten(input:com.snowflake.snowpark.Column,path:String,outer:Boolean,recursive:Boolean,mode:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.flatten", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#flatten(input:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "randomSplit", "tail" : "(weights: Array[Double]): Array[DataFrame]", "member" : "com.snowflake.snowpark.DataFrame.randomSplit", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#randomSplit(weights:Array[Double]):Array[com.snowflake.snowpark.DataFrame]", "kind" : "def"}, {"label" : "sample", "tail" : "(probabilityFraction: Double): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sample", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#sample(probabilityFraction:Double):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sample", "tail" : "(num: Long): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sample", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#sample(num:Long):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "stat", "tail" : ": DataFrameStatFunctions", "member" : "com.snowflake.snowpark.DataFrame.stat", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#stat:com.snowflake.snowpark.DataFrameStatFunctions", "kind" : "lazy val"}, {"label" : "na", "tail" : ": DataFrameNaFunctions", "member" : "com.snowflake.snowpark.DataFrame.na", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#na:com.snowflake.snowpark.DataFrameNaFunctions", "kind" : "lazy val"}, {"label" : "first", "tail" : "(n: Int): Array[Row]", "member" : "com.snowflake.snowpark.DataFrame.first", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#first(n:Int):Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "first", "tail" : "(): Option[Row]", "member" : "com.snowflake.snowpark.DataFrame.first", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#first():Option[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(multipartIdentifier: List[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#createOrReplaceTempView(multipartIdentifier:java.util.List[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(multipartIdentifier: Seq[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#createOrReplaceTempView(multipartIdentifier:Seq[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(viewName: String): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#createOrReplaceTempView(viewName:String):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(multipartIdentifier: List[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#createOrReplaceView(multipartIdentifier:java.util.List[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(multipartIdentifier: Seq[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#createOrReplaceView(multipartIdentifier:Seq[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(viewName: String): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#createOrReplaceView(viewName:String):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(n: Int, maxWidth: Int): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#show(n:Int,maxWidth:Int):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(n: Int): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#show(n:Int):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#show():Unit", "kind" : "def"}, {"label" : "write", "tail" : "(): DataFrameWriter", "member" : "com.snowflake.snowpark.DataFrame.write", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#write:com.snowflake.snowpark.DataFrameWriter", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "com.snowflake.snowpark.DataFrame.count", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#count():Long", "kind" : "def"}, {"label" : "toLocalIterator", "tail" : "(): Iterator[Row]", "member" : "com.snowflake.snowpark.DataFrame.toLocalIterator", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#toLocalIterator:Iterator[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "collect", "tail" : "(): Array[Row]", "member" : "com.snowflake.snowpark.DataFrame.collect", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#collect():Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "rename", "tail" : "(newName: String, col: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.rename", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#rename(newName:String,col:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "withColumns", "tail" : "(colNames: Seq[String], values: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withColumns", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#withColumns(colNames:Seq[String],values:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "withColumn", "tail" : "(colName: String, col: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withColumn", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#withColumn(colName:String,col:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "naturalJoin", "tail" : "(right: DataFrame, joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.naturalJoin", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#naturalJoin(right:com.snowflake.snowpark.DataFrame,joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "naturalJoin", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.naturalJoin", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#naturalJoin(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "crossJoin", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.crossJoin", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#crossJoin(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: Column, partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(func:com.snowflake.snowpark.Column,partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(func:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Map[String, Column], partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(func:com.snowflake.snowpark.TableFunction,args:Map[String,com.snowflake.snowpark.Column],partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Map[String, Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(func:com.snowflake.snowpark.TableFunction,args:Map[String,com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Seq[Column], partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(func:com.snowflake.snowpark.TableFunction,args:Seq[com.snowflake.snowpark.Column],partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(func:com.snowflake.snowpark.TableFunction,args:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, firstArg: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(func:com.snowflake.snowpark.TableFunction,firstArg:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, joinExprs: Column, joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(right:com.snowflake.snowpark.DataFrame,joinExprs:com.snowflake.snowpark.Column,joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, joinExprs: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(right:com.snowflake.snowpark.DataFrame,joinExprs:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumns: Seq[String], joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(right:com.snowflake.snowpark.DataFrame,usingColumns:Seq[String],joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumns: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(right:com.snowflake.snowpark.DataFrame,usingColumns:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumn: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(right:com.snowflake.snowpark.DataFrame,usingColumn:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#join(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "except", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.except", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#except(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.intersect", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#intersect(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionAllByName", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionAllByName", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#unionAllByName(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionByName", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionByName", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#unionByName(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionAll", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionAll", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#unionAll(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "union", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.union", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#union(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "limit", "tail" : "(n: Int): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.limit", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#limit(n:Int):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "pivot", "tail" : "(pivotColumn: Column, values: Seq[Any]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.pivot", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#pivot(pivotColumn:com.snowflake.snowpark.Column,values:Seq[Any]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "pivot", "tail" : "(pivotColumn: String, values: Seq[Any]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.pivot", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#pivot(pivotColumn:String,values:Seq[Any]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "dropDuplicates", "tail" : "(colNames: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.dropDuplicates", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#dropDuplicates(colNames:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "distinct", "tail" : "(): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.distinct", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#distinct():com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#cube(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#cube(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#cube(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#cube[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$6:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#cube(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupByGroupingSets", "tail" : "(groupingSets: Seq[GroupingSets]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupByGroupingSets", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#groupByGroupingSets(groupingSets:Seq[com.snowflake.snowpark.GroupingSets]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupByGroupingSets", "tail" : "(first: GroupingSets, remaining: GroupingSets*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupByGroupingSets", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#groupByGroupingSets(first:com.snowflake.snowpark.GroupingSets,remaining:com.snowflake.snowpark.GroupingSets*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Array[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#groupBy(cols:Array[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#groupBy(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#groupBy(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#groupBy(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#groupBy[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$5:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#groupBy():com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#groupBy(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Array[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#rollup(cols:Array[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#rollup(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#rollup(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#rollup(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#rollup[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$4:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#rollup(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#agg(exprs:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#agg[T](exprs:Seq[com.snowflake.snowpark.Column])(implicitevidence$3:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(expr: Column, exprs: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#agg(expr:com.snowflake.snowpark.Column,exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Seq[(String, String)]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#agg(exprs:Seq[(String,String)]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(expr: (String, String), exprs: (String, String)*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#agg(expr:(String,String),exprs:(String,String)*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "where", "tail" : "(condition: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.where", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#where(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "filter", "tail" : "(condition: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.filter", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#filter(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(cols: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#drop(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#drop[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$2:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#drop(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(colNames: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#drop(colNames:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(colNames: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#drop(colNames:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#drop(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#select(columns:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#select(columns:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#select(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#select(columns:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#select[T](columns:Seq[com.snowflake.snowpark.Column])(implicitevidence$1:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#select(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "alias", "tail" : "(alias: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.alias", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#alias(alias:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "col", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.DataFrame.col", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#col(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "apply", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.DataFrame.apply", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#apply(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sort", "tail" : "(sortExprs: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#sort(sortExprs:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sort", "tail" : "(sortExprs: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#sort(sortExprs:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sort", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#sort(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(colNames: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#toDF(colNames:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(colNames: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#toDF(colNames:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#toDF(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "explain", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.DataFrame.explain", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#explain():Unit", "kind" : "def"}, {"label" : "cacheResult", "tail" : "(): HasCachedResult", "member" : "com.snowflake.snowpark.DataFrame.cacheResult", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#cacheResult():com.snowflake.snowpark.HasCachedResult", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "com.snowflake.snowpark.DataFrame.schema", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#schema:com.snowflake.snowpark.types.StructType", "kind" : "lazy val"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/CopyableDataFrame.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/CopyableDataFrame.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.CopyableDataFrameAsyncActor", "shortDescription" : "Provides APIs to execute CopyableDataFrame actions asynchronously.", "members_class" : [{"label" : "copyInto", "tail" : "(tableName: String, targetColumnNames: Seq[String], transformations: Seq[Column], options: Map[String, Any]): TypedAsyncJob[Unit]", "member" : "com.snowflake.snowpark.CopyableDataFrameAsyncActor.copyInto", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#copyInto(tableName:String,targetColumnNames:Seq[String],transformations:Seq[com.snowflake.snowpark.Column],options:Map[String,Any]):com.snowflake.snowpark.TypedAsyncJob[Unit]", "kind" : "def"}, {"label" : "copyInto", "tail" : "(tableName: String, transformations: Seq[Column], options: Map[String, Any]): TypedAsyncJob[Unit]", "member" : "com.snowflake.snowpark.CopyableDataFrameAsyncActor.copyInto", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#copyInto(tableName:String,transformations:Seq[com.snowflake.snowpark.Column],options:Map[String,Any]):com.snowflake.snowpark.TypedAsyncJob[Unit]", "kind" : "def"}, {"label" : "copyInto", "tail" : "(tableName: String, transformations: Seq[Column]): TypedAsyncJob[Unit]", "member" : "com.snowflake.snowpark.CopyableDataFrameAsyncActor.copyInto", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#copyInto(tableName:String,transformations:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.TypedAsyncJob[Unit]", "kind" : "def"}, {"label" : "copyInto", "tail" : "(tableName: String): TypedAsyncJob[Unit]", "member" : "com.snowflake.snowpark.CopyableDataFrameAsyncActor.copyInto", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#copyInto(tableName:String):com.snowflake.snowpark.TypedAsyncJob[Unit]", "kind" : "def"}, {"label" : "count", "tail" : "(): TypedAsyncJob[Long]", "member" : "com.snowflake.snowpark.DataFrameAsyncActor.count", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#count():com.snowflake.snowpark.TypedAsyncJob[Long]", "kind" : "def"}, {"label" : "toLocalIterator", "tail" : "(): TypedAsyncJob[Iterator[Row]]", "member" : "com.snowflake.snowpark.DataFrameAsyncActor.toLocalIterator", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#toLocalIterator():com.snowflake.snowpark.TypedAsyncJob[Iterator[com.snowflake.snowpark.Row]]", "kind" : "def"}, {"label" : "collect", "tail" : "(): TypedAsyncJob[Array[Row]]", "member" : "com.snowflake.snowpark.DataFrameAsyncActor.collect", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#collect():com.snowflake.snowpark.TypedAsyncJob[Array[com.snowflake.snowpark.Row]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/CopyableDataFrameAsyncActor.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.DataFrame", "shortDescription" : "Represents a lazily-evaluated relational dataset that contains a collection of Row objectswith columns defined by a schema (column name and type).", "members_class" : [{"label" : "withPlan", "tail" : "(plan: LogicalPlan): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withPlan", "link" : "com\/snowflake\/snowpark\/DataFrame.html#withPlan(plan:com.snowflake.snowpark.internal.analyzer.LogicalPlan):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "disambiguate", "tail" : "(lhs: DataFrame, rhs: DataFrame, joinType: JoinType, usingColumns: Seq[String]): (DataFrame, DataFrame)", "member" : "com.snowflake.snowpark.DataFrame.disambiguate", "link" : "com\/snowflake\/snowpark\/DataFrame.html#disambiguate(lhs:com.snowflake.snowpark.DataFrame,rhs:com.snowflake.snowpark.DataFrame,joinType:com.snowflake.snowpark.internal.analyzer.JoinType,usingColumns:Seq[String]):(com.snowflake.snowpark.DataFrame,com.snowflake.snowpark.DataFrame)", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column, path: String, outer: Boolean, recursive: Boolean, mode: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.flatten", "link" : "com\/snowflake\/snowpark\/DataFrame.html#flatten(input:com.snowflake.snowpark.Column,path:String,outer:Boolean,recursive:Boolean,mode:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.flatten", "link" : "com\/snowflake\/snowpark\/DataFrame.html#flatten(input:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "randomSplit", "tail" : "(weights: Array[Double]): Array[DataFrame]", "member" : "com.snowflake.snowpark.DataFrame.randomSplit", "link" : "com\/snowflake\/snowpark\/DataFrame.html#randomSplit(weights:Array[Double]):Array[com.snowflake.snowpark.DataFrame]", "kind" : "def"}, {"label" : "sample", "tail" : "(probabilityFraction: Double): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sample", "link" : "com\/snowflake\/snowpark\/DataFrame.html#sample(probabilityFraction:Double):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sample", "tail" : "(num: Long): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sample", "link" : "com\/snowflake\/snowpark\/DataFrame.html#sample(num:Long):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "stat", "tail" : ": DataFrameStatFunctions", "member" : "com.snowflake.snowpark.DataFrame.stat", "link" : "com\/snowflake\/snowpark\/DataFrame.html#stat:com.snowflake.snowpark.DataFrameStatFunctions", "kind" : "lazy val"}, {"label" : "na", "tail" : ": DataFrameNaFunctions", "member" : "com.snowflake.snowpark.DataFrame.na", "link" : "com\/snowflake\/snowpark\/DataFrame.html#na:com.snowflake.snowpark.DataFrameNaFunctions", "kind" : "lazy val"}, {"label" : "first", "tail" : "(n: Int): Array[Row]", "member" : "com.snowflake.snowpark.DataFrame.first", "link" : "com\/snowflake\/snowpark\/DataFrame.html#first(n:Int):Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "first", "tail" : "(): Option[Row]", "member" : "com.snowflake.snowpark.DataFrame.first", "link" : "com\/snowflake\/snowpark\/DataFrame.html#first():Option[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(multipartIdentifier: List[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/DataFrame.html#createOrReplaceTempView(multipartIdentifier:java.util.List[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(multipartIdentifier: Seq[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/DataFrame.html#createOrReplaceTempView(multipartIdentifier:Seq[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(viewName: String): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/DataFrame.html#createOrReplaceTempView(viewName:String):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(multipartIdentifier: List[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/DataFrame.html#createOrReplaceView(multipartIdentifier:java.util.List[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(multipartIdentifier: Seq[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/DataFrame.html#createOrReplaceView(multipartIdentifier:Seq[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(viewName: String): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/DataFrame.html#createOrReplaceView(viewName:String):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(n: Int, maxWidth: Int): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/DataFrame.html#show(n:Int,maxWidth:Int):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(n: Int): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/DataFrame.html#show(n:Int):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/DataFrame.html#show():Unit", "kind" : "def"}, {"label" : "async", "tail" : "(): DataFrameAsyncActor", "member" : "com.snowflake.snowpark.DataFrame.async", "link" : "com\/snowflake\/snowpark\/DataFrame.html#async:com.snowflake.snowpark.DataFrameAsyncActor", "kind" : "def"}, {"label" : "write", "tail" : "(): DataFrameWriter", "member" : "com.snowflake.snowpark.DataFrame.write", "link" : "com\/snowflake\/snowpark\/DataFrame.html#write:com.snowflake.snowpark.DataFrameWriter", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "com.snowflake.snowpark.DataFrame.count", "link" : "com\/snowflake\/snowpark\/DataFrame.html#count():Long", "kind" : "def"}, {"label" : "toLocalIterator", "tail" : "(): Iterator[Row]", "member" : "com.snowflake.snowpark.DataFrame.toLocalIterator", "link" : "com\/snowflake\/snowpark\/DataFrame.html#toLocalIterator:Iterator[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "collect", "tail" : "(): Array[Row]", "member" : "com.snowflake.snowpark.DataFrame.collect", "link" : "com\/snowflake\/snowpark\/DataFrame.html#collect():Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "rename", "tail" : "(newName: String, col: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.rename", "link" : "com\/snowflake\/snowpark\/DataFrame.html#rename(newName:String,col:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "withColumns", "tail" : "(colNames: Seq[String], values: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withColumns", "link" : "com\/snowflake\/snowpark\/DataFrame.html#withColumns(colNames:Seq[String],values:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "withColumn", "tail" : "(colName: String, col: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withColumn", "link" : "com\/snowflake\/snowpark\/DataFrame.html#withColumn(colName:String,col:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "naturalJoin", "tail" : "(right: DataFrame, joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.naturalJoin", "link" : "com\/snowflake\/snowpark\/DataFrame.html#naturalJoin(right:com.snowflake.snowpark.DataFrame,joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "naturalJoin", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.naturalJoin", "link" : "com\/snowflake\/snowpark\/DataFrame.html#naturalJoin(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "crossJoin", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.crossJoin", "link" : "com\/snowflake\/snowpark\/DataFrame.html#crossJoin(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: Column, partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(func:com.snowflake.snowpark.Column,partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(func:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Map[String, Column], partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(func:com.snowflake.snowpark.TableFunction,args:Map[String,com.snowflake.snowpark.Column],partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Map[String, Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(func:com.snowflake.snowpark.TableFunction,args:Map[String,com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Seq[Column], partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(func:com.snowflake.snowpark.TableFunction,args:Seq[com.snowflake.snowpark.Column],partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(func:com.snowflake.snowpark.TableFunction,args:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, firstArg: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(func:com.snowflake.snowpark.TableFunction,firstArg:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, joinExprs: Column, joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(right:com.snowflake.snowpark.DataFrame,joinExprs:com.snowflake.snowpark.Column,joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, joinExprs: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(right:com.snowflake.snowpark.DataFrame,joinExprs:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumns: Seq[String], joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(right:com.snowflake.snowpark.DataFrame,usingColumns:Seq[String],joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumns: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(right:com.snowflake.snowpark.DataFrame,usingColumns:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumn: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(right:com.snowflake.snowpark.DataFrame,usingColumn:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/DataFrame.html#join(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "except", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.except", "link" : "com\/snowflake\/snowpark\/DataFrame.html#except(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.intersect", "link" : "com\/snowflake\/snowpark\/DataFrame.html#intersect(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionAllByName", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionAllByName", "link" : "com\/snowflake\/snowpark\/DataFrame.html#unionAllByName(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionByName", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionByName", "link" : "com\/snowflake\/snowpark\/DataFrame.html#unionByName(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionAll", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionAll", "link" : "com\/snowflake\/snowpark\/DataFrame.html#unionAll(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "union", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.union", "link" : "com\/snowflake\/snowpark\/DataFrame.html#union(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "limit", "tail" : "(n: Int): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.limit", "link" : "com\/snowflake\/snowpark\/DataFrame.html#limit(n:Int):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "pivot", "tail" : "(pivotColumn: Column, values: Seq[Any]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.pivot", "link" : "com\/snowflake\/snowpark\/DataFrame.html#pivot(pivotColumn:com.snowflake.snowpark.Column,values:Seq[Any]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "pivot", "tail" : "(pivotColumn: String, values: Seq[Any]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.pivot", "link" : "com\/snowflake\/snowpark\/DataFrame.html#pivot(pivotColumn:String,values:Seq[Any]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "dropDuplicates", "tail" : "(colNames: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.dropDuplicates", "link" : "com\/snowflake\/snowpark\/DataFrame.html#dropDuplicates(colNames:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "distinct", "tail" : "(): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.distinct", "link" : "com\/snowflake\/snowpark\/DataFrame.html#distinct():com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/DataFrame.html#cube(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/DataFrame.html#cube(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/DataFrame.html#cube(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/DataFrame.html#cube[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$6:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/DataFrame.html#cube(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupByGroupingSets", "tail" : "(groupingSets: Seq[GroupingSets]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupByGroupingSets", "link" : "com\/snowflake\/snowpark\/DataFrame.html#groupByGroupingSets(groupingSets:Seq[com.snowflake.snowpark.GroupingSets]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupByGroupingSets", "tail" : "(first: GroupingSets, remaining: GroupingSets*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupByGroupingSets", "link" : "com\/snowflake\/snowpark\/DataFrame.html#groupByGroupingSets(first:com.snowflake.snowpark.GroupingSets,remaining:com.snowflake.snowpark.GroupingSets*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Array[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/DataFrame.html#groupBy(cols:Array[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/DataFrame.html#groupBy(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/DataFrame.html#groupBy(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/DataFrame.html#groupBy(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/DataFrame.html#groupBy[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$5:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/DataFrame.html#groupBy():com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/DataFrame.html#groupBy(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Array[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/DataFrame.html#rollup(cols:Array[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/DataFrame.html#rollup(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/DataFrame.html#rollup(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/DataFrame.html#rollup(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/DataFrame.html#rollup[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$4:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/DataFrame.html#rollup(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/DataFrame.html#agg(exprs:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/DataFrame.html#agg[T](exprs:Seq[com.snowflake.snowpark.Column])(implicitevidence$3:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(expr: Column, exprs: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/DataFrame.html#agg(expr:com.snowflake.snowpark.Column,exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Seq[(String, String)]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/DataFrame.html#agg(exprs:Seq[(String,String)]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(expr: (String, String), exprs: (String, String)*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/DataFrame.html#agg(expr:(String,String),exprs:(String,String)*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "where", "tail" : "(condition: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.where", "link" : "com\/snowflake\/snowpark\/DataFrame.html#where(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "filter", "tail" : "(condition: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.filter", "link" : "com\/snowflake\/snowpark\/DataFrame.html#filter(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(cols: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/DataFrame.html#drop(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/DataFrame.html#drop[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$2:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/DataFrame.html#drop(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(colNames: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/DataFrame.html#drop(colNames:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(colNames: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/DataFrame.html#drop(colNames:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/DataFrame.html#drop(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/DataFrame.html#select(columns:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/DataFrame.html#select(columns:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/DataFrame.html#select(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/DataFrame.html#select(columns:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/DataFrame.html#select[T](columns:Seq[com.snowflake.snowpark.Column])(implicitevidence$1:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/DataFrame.html#select(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "alias", "tail" : "(alias: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.alias", "link" : "com\/snowflake\/snowpark\/DataFrame.html#alias(alias:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "col", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.DataFrame.col", "link" : "com\/snowflake\/snowpark\/DataFrame.html#col(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "apply", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.DataFrame.apply", "link" : "com\/snowflake\/snowpark\/DataFrame.html#apply(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sort", "tail" : "(sortExprs: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/DataFrame.html#sort(sortExprs:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sort", "tail" : "(sortExprs: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/DataFrame.html#sort(sortExprs:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sort", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/DataFrame.html#sort(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(colNames: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/DataFrame.html#toDF(colNames:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(colNames: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/DataFrame.html#toDF(colNames:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/DataFrame.html#toDF(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "explain", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.DataFrame.explain", "link" : "com\/snowflake\/snowpark\/DataFrame.html#explain():Unit", "kind" : "def"}, {"label" : "cacheResult", "tail" : "(): HasCachedResult", "member" : "com.snowflake.snowpark.DataFrame.cacheResult", "link" : "com\/snowflake\/snowpark\/DataFrame.html#cacheResult():com.snowflake.snowpark.HasCachedResult", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "com.snowflake.snowpark.DataFrame.schema", "link" : "com\/snowflake\/snowpark\/DataFrame.html#schema:com.snowflake.snowpark.types.StructType", "kind" : "lazy val"}, {"label" : "clone", "tail" : "(): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.clone", "link" : "com\/snowflake\/snowpark\/DataFrame.html#clone():com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/DataFrame.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/DataFrame.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/DataFrame.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/DataFrame.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/DataFrame.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/DataFrame.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/DataFrame.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/DataFrame.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/DataFrame.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/DataFrame.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/DataFrame.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/DataFrame.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/DataFrame.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/DataFrame.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/DataFrame.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/DataFrame.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/DataFrame.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/DataFrame.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrame.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrame.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrame.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/DataFrame.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/DataFrame.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/DataFrame.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/DataFrame.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/DataFrame.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/DataFrame.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrame.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrame.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/DataFrame.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.DataFrameAsyncActor", "shortDescription" : "Provides APIs to execute DataFrame actions asynchronously.", "members_class" : [{"label" : "count", "tail" : "(): TypedAsyncJob[Long]", "member" : "com.snowflake.snowpark.DataFrameAsyncActor.count", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#count():com.snowflake.snowpark.TypedAsyncJob[Long]", "kind" : "def"}, {"label" : "toLocalIterator", "tail" : "(): TypedAsyncJob[Iterator[Row]]", "member" : "com.snowflake.snowpark.DataFrameAsyncActor.toLocalIterator", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#toLocalIterator():com.snowflake.snowpark.TypedAsyncJob[Iterator[com.snowflake.snowpark.Row]]", "kind" : "def"}, {"label" : "collect", "tail" : "(): TypedAsyncJob[Array[Row]]", "member" : "com.snowflake.snowpark.DataFrameAsyncActor.collect", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#collect():com.snowflake.snowpark.TypedAsyncJob[Array[com.snowflake.snowpark.Row]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/DataFrameAsyncActor.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.DataFrameNaFunctions", "shortDescription" : "Provides functions for handling missing values in a DataFrame.", "members_class" : [{"label" : "replace", "tail" : "(colName: String, replacement: Map[Any, Any]): DataFrame", "member" : "com.snowflake.snowpark.DataFrameNaFunctions.replace", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#replace(colName:String,replacement:Map[Any,Any]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "fill", "tail" : "(valueMap: Map[String, Any]): DataFrame", "member" : "com.snowflake.snowpark.DataFrameNaFunctions.fill", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#fill(valueMap:Map[String,Any]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(minNonNullsPerRow: Int, cols: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrameNaFunctions.drop", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#drop(minNonNullsPerRow:Int,cols:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/DataFrameNaFunctions.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.DataFrameReader", "shortDescription" : "Provides methods to load data in various supported formats from a Snowflake stage to a DataFrame.", "members_class" : [{"label" : "options", "tail" : "(configs: Map[String, Any]): DataFrameReader", "member" : "com.snowflake.snowpark.DataFrameReader.options", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#options(configs:Map[String,Any]):com.snowflake.snowpark.DataFrameReader", "kind" : "def"}, {"label" : "option", "tail" : "(key: String, value: Any): DataFrameReader", "member" : "com.snowflake.snowpark.DataFrameReader.option", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#option(key:String,value:Any):com.snowflake.snowpark.DataFrameReader", "kind" : "def"}, {"label" : "xml", "tail" : "(path: String): CopyableDataFrame", "member" : "com.snowflake.snowpark.DataFrameReader.xml", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#xml(path:String):com.snowflake.snowpark.CopyableDataFrame", "kind" : "def"}, {"label" : "orc", "tail" : "(path: String): CopyableDataFrame", "member" : "com.snowflake.snowpark.DataFrameReader.orc", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#orc(path:String):com.snowflake.snowpark.CopyableDataFrame", "kind" : "def"}, {"label" : "parquet", "tail" : "(path: String): CopyableDataFrame", "member" : "com.snowflake.snowpark.DataFrameReader.parquet", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#parquet(path:String):com.snowflake.snowpark.CopyableDataFrame", "kind" : "def"}, {"label" : "avro", "tail" : "(path: String): CopyableDataFrame", "member" : "com.snowflake.snowpark.DataFrameReader.avro", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#avro(path:String):com.snowflake.snowpark.CopyableDataFrame", "kind" : "def"}, {"label" : "json", "tail" : "(path: String): CopyableDataFrame", "member" : "com.snowflake.snowpark.DataFrameReader.json", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#json(path:String):com.snowflake.snowpark.CopyableDataFrame", "kind" : "def"}, {"label" : "csv", "tail" : "(path: String): CopyableDataFrame", "member" : "com.snowflake.snowpark.DataFrameReader.csv", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#csv(path:String):com.snowflake.snowpark.CopyableDataFrame", "kind" : "def"}, {"label" : "schema", "tail" : "(schema: StructType): DataFrameReader", "member" : "com.snowflake.snowpark.DataFrameReader.schema", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#schema(schema:com.snowflake.snowpark.types.StructType):com.snowflake.snowpark.DataFrameReader", "kind" : "def"}, {"label" : "table", "tail" : "(name: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrameReader.table", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#table(name:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"member" : "com.snowflake.snowpark.DataFrameReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/DataFrameReader.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.DataFrameStatFunctions", "shortDescription" : "Provides eagerly computed statistical functions for DataFrames.", "members_class" : [{"label" : "sampleBy", "tail" : "(col: String, fractions: Map[T, Double]): DataFrame", "member" : "com.snowflake.snowpark.DataFrameStatFunctions.sampleBy", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#sampleBy[T](col:String,fractions:Map[T,Double]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sampleBy", "tail" : "(col: Column, fractions: Map[T, Double]): DataFrame", "member" : "com.snowflake.snowpark.DataFrameStatFunctions.sampleBy", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#sampleBy[T](col:com.snowflake.snowpark.Column,fractions:Map[T,Double]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "crosstab", "tail" : "(col1: String, col2: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrameStatFunctions.crosstab", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#crosstab(col1:String,col2:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "approxQuantile", "tail" : "(cols: Array[String], percentile: Array[Double]): Array[Array[Option[Double]]]", "member" : "com.snowflake.snowpark.DataFrameStatFunctions.approxQuantile", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#approxQuantile(cols:Array[String],percentile:Array[Double]):Array[Array[Option[Double]]]", "kind" : "def"}, {"label" : "approxQuantile", "tail" : "(col: String, percentile: Array[Double]): Array[Option[Double]]", "member" : "com.snowflake.snowpark.DataFrameStatFunctions.approxQuantile", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#approxQuantile(col:String,percentile:Array[Double]):Array[Option[Double]]", "kind" : "def"}, {"label" : "cov", "tail" : "(col1: String, col2: String): Option[Double]", "member" : "com.snowflake.snowpark.DataFrameStatFunctions.cov", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#cov(col1:String,col2:String):Option[Double]", "kind" : "def"}, {"label" : "corr", "tail" : "(col1: String, col2: String): Option[Double]", "member" : "com.snowflake.snowpark.DataFrameStatFunctions.corr", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#corr(col1:String,col2:String):Option[Double]", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/DataFrameStatFunctions.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.DataFrameWriter", "shortDescription" : "Provides methods for writing data from a DataFrame to supported output destinations.", "members_class" : [{"label" : "async", "tail" : "(): DataFrameWriterAsyncActor", "member" : "com.snowflake.snowpark.DataFrameWriter.async", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#async:com.snowflake.snowpark.DataFrameWriterAsyncActor", "kind" : "def"}, {"label" : "mode", "tail" : "(saveMode: SaveMode): DataFrameWriter", "member" : "com.snowflake.snowpark.DataFrameWriter.mode", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#mode(saveMode:com.snowflake.snowpark.SaveMode):com.snowflake.snowpark.DataFrameWriter", "kind" : "def"}, {"label" : "mode", "tail" : "(saveMode: String): DataFrameWriter", "member" : "com.snowflake.snowpark.DataFrameWriter.mode", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#mode(saveMode:String):com.snowflake.snowpark.DataFrameWriter", "kind" : "def"}, {"label" : "saveAsTable", "tail" : "(multipartIdentifier: List[String]): Unit", "member" : "com.snowflake.snowpark.DataFrameWriter.saveAsTable", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#saveAsTable(multipartIdentifier:java.util.List[String]):Unit", "kind" : "def"}, {"label" : "saveAsTable", "tail" : "(multipartIdentifier: Seq[String]): Unit", "member" : "com.snowflake.snowpark.DataFrameWriter.saveAsTable", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#saveAsTable(multipartIdentifier:Seq[String]):Unit", "kind" : "def"}, {"label" : "saveAsTable", "tail" : "(tableName: String): Unit", "member" : "com.snowflake.snowpark.DataFrameWriter.saveAsTable", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#saveAsTable(tableName:String):Unit", "kind" : "def"}, {"label" : "options", "tail" : "(configs: Map[String, Any]): DataFrameWriter", "member" : "com.snowflake.snowpark.DataFrameWriter.options", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#options(configs:Map[String,Any]):com.snowflake.snowpark.DataFrameWriter", "kind" : "def"}, {"label" : "option", "tail" : "(key: String, value: Any): DataFrameWriter", "member" : "com.snowflake.snowpark.DataFrameWriter.option", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#option(key:String,value:Any):com.snowflake.snowpark.DataFrameWriter", "kind" : "def"}, {"label" : "parquet", "tail" : "(path: String): WriteFileResult", "member" : "com.snowflake.snowpark.DataFrameWriter.parquet", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#parquet(path:String):com.snowflake.snowpark.WriteFileResult", "kind" : "def"}, {"label" : "json", "tail" : "(path: String): WriteFileResult", "member" : "com.snowflake.snowpark.DataFrameWriter.json", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#json(path:String):com.snowflake.snowpark.WriteFileResult", "kind" : "def"}, {"label" : "csv", "tail" : "(path: String): WriteFileResult", "member" : "com.snowflake.snowpark.DataFrameWriter.csv", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#csv(path:String):com.snowflake.snowpark.WriteFileResult", "kind" : "def"}, {"member" : "com.snowflake.snowpark.DataFrameWriter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/DataFrameWriter.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.DataFrameWriterAsyncActor", "shortDescription" : "Provides APIs to execute DataFrameWriter actions asynchronously.", "members_class" : [{"label" : "parquet", "tail" : "(path: String): TypedAsyncJob[WriteFileResult]", "member" : "com.snowflake.snowpark.DataFrameWriterAsyncActor.parquet", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#parquet(path:String):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.WriteFileResult]", "kind" : "def"}, {"label" : "json", "tail" : "(path: String): TypedAsyncJob[WriteFileResult]", "member" : "com.snowflake.snowpark.DataFrameWriterAsyncActor.json", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#json(path:String):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.WriteFileResult]", "kind" : "def"}, {"label" : "csv", "tail" : "(path: String): TypedAsyncJob[WriteFileResult]", "member" : "com.snowflake.snowpark.DataFrameWriterAsyncActor.csv", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#csv(path:String):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.WriteFileResult]", "kind" : "def"}, {"label" : "saveAsTable", "tail" : "(multipartIdentifier: List[String]): TypedAsyncJob[Unit]", "member" : "com.snowflake.snowpark.DataFrameWriterAsyncActor.saveAsTable", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#saveAsTable(multipartIdentifier:java.util.List[String]):com.snowflake.snowpark.TypedAsyncJob[Unit]", "kind" : "def"}, {"label" : "saveAsTable", "tail" : "(multipartIdentifier: Seq[String]): TypedAsyncJob[Unit]", "member" : "com.snowflake.snowpark.DataFrameWriterAsyncActor.saveAsTable", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#saveAsTable(multipartIdentifier:Seq[String]):com.snowflake.snowpark.TypedAsyncJob[Unit]", "kind" : "def"}, {"label" : "saveAsTable", "tail" : "(tableName: String): TypedAsyncJob[Unit]", "member" : "com.snowflake.snowpark.DataFrameWriterAsyncActor.saveAsTable", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#saveAsTable(tableName:String):com.snowflake.snowpark.TypedAsyncJob[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/DataFrameWriterAsyncActor.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.DeleteResult", "shortDescription" : "Result of deleting rows in an Updatable", "members_case class" : [{"member" : "com.snowflake.snowpark.DeleteResult#<init>", "error" : "unsupported entity"}, {"label" : "rowsDeleted", "tail" : ": Long", "member" : "com.snowflake.snowpark.DeleteResult.rowsDeleted", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#rowsDeleted:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/DeleteResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/DeleteResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/DeleteResult.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.FileOperation", "shortDescription" : "Provides methods for working on files in a stage.", "members_class" : [{"label" : "downloadStream", "tail" : "(stageLocation: String, decompress: Boolean): InputStream", "member" : "com.snowflake.snowpark.FileOperation.downloadStream", "link" : "com\/snowflake\/snowpark\/FileOperation.html#downloadStream(stageLocation:String,decompress:Boolean):java.io.InputStream", "kind" : "def"}, {"label" : "uploadStream", "tail" : "(stageLocation: String, inputStream: InputStream, compress: Boolean): Unit", "member" : "com.snowflake.snowpark.FileOperation.uploadStream", "link" : "com\/snowflake\/snowpark\/FileOperation.html#uploadStream(stageLocation:String,inputStream:java.io.InputStream,compress:Boolean):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(stageLocation: String, targetDirectory: String, options: Map[String, String]): Array[GetResult]", "member" : "com.snowflake.snowpark.FileOperation.get", "link" : "com\/snowflake\/snowpark\/FileOperation.html#get(stageLocation:String,targetDirectory:String,options:Map[String,String]):Array[com.snowflake.snowpark.GetResult]", "kind" : "def"}, {"label" : "put", "tail" : "(localFileName: String, stageLocation: String, options: Map[String, String]): Array[PutResult]", "member" : "com.snowflake.snowpark.FileOperation.put", "link" : "com\/snowflake\/snowpark\/FileOperation.html#put(localFileName:String,stageLocation:String,options:Map[String,String]):Array[com.snowflake.snowpark.PutResult]", "kind" : "def"}, {"member" : "com.snowflake.snowpark.FileOperation#<init>", "error" : "unsupported entity"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/FileOperation.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/FileOperation.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/FileOperation.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/FileOperation.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/FileOperation.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/FileOperation.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/FileOperation.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/FileOperation.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/FileOperation.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/FileOperation.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/FileOperation.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/FileOperation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/FileOperation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/FileOperation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/FileOperation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/FileOperation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/FileOperation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/FileOperation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/FileOperation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/FileOperation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/FileOperation.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/FileOperation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/FileOperation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/FileOperation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/FileOperation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/FileOperation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/FileOperation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/FileOperation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/FileOperation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/FileOperation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/FileOperation.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.functions", "shortDescription" : "Provides utility functions that generate Column expressions that you can pass toDataFrame transformation methods.", "object" : "com\/snowflake\/snowpark\/functions$.html", "members_object" : [{"label" : "builtin", "tail" : "", "member" : "com.snowflake.snowpark.functions.builtin", "link" : "com\/snowflake\/snowpark\/functions$.html#builtinextendsProductwithSerializable", "kind" : "case class"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21], arg22: scala.reflect.api.JavaUniverse.TypeTag[A22]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22)=>RT)(implicitevidence$255:reflect.runtime.universe.TypeTag[RT],implicitevidence$256:reflect.runtime.universe.TypeTag[A1],implicitevidence$257:reflect.runtime.universe.TypeTag[A2],implicitevidence$258:reflect.runtime.universe.TypeTag[A3],implicitevidence$259:reflect.runtime.universe.TypeTag[A4],implicitevidence$260:reflect.runtime.universe.TypeTag[A5],implicitevidence$261:reflect.runtime.universe.TypeTag[A6],implicitevidence$262:reflect.runtime.universe.TypeTag[A7],implicitevidence$263:reflect.runtime.universe.TypeTag[A8],implicitevidence$264:reflect.runtime.universe.TypeTag[A9],implicitevidence$265:reflect.runtime.universe.TypeTag[A10],implicitevidence$266:reflect.runtime.universe.TypeTag[A11],implicitevidence$267:reflect.runtime.universe.TypeTag[A12],implicitevidence$268:reflect.runtime.universe.TypeTag[A13],implicitevidence$269:reflect.runtime.universe.TypeTag[A14],implicitevidence$270:reflect.runtime.universe.TypeTag[A15],implicitevidence$271:reflect.runtime.universe.TypeTag[A16],implicitevidence$272:reflect.runtime.universe.TypeTag[A17],implicitevidence$273:reflect.runtime.universe.TypeTag[A18],implicitevidence$274:reflect.runtime.universe.TypeTag[A19],implicitevidence$275:reflect.runtime.universe.TypeTag[A20],implicitevidence$276:reflect.runtime.universe.TypeTag[A21],implicitevidence$277:reflect.runtime.universe.TypeTag[A22]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>RT)(implicitevidence$233:reflect.runtime.universe.TypeTag[RT],implicitevidence$234:reflect.runtime.universe.TypeTag[A1],implicitevidence$235:reflect.runtime.universe.TypeTag[A2],implicitevidence$236:reflect.runtime.universe.TypeTag[A3],implicitevidence$237:reflect.runtime.universe.TypeTag[A4],implicitevidence$238:reflect.runtime.universe.TypeTag[A5],implicitevidence$239:reflect.runtime.universe.TypeTag[A6],implicitevidence$240:reflect.runtime.universe.TypeTag[A7],implicitevidence$241:reflect.runtime.universe.TypeTag[A8],implicitevidence$242:reflect.runtime.universe.TypeTag[A9],implicitevidence$243:reflect.runtime.universe.TypeTag[A10],implicitevidence$244:reflect.runtime.universe.TypeTag[A11],implicitevidence$245:reflect.runtime.universe.TypeTag[A12],implicitevidence$246:reflect.runtime.universe.TypeTag[A13],implicitevidence$247:reflect.runtime.universe.TypeTag[A14],implicitevidence$248:reflect.runtime.universe.TypeTag[A15],implicitevidence$249:reflect.runtime.universe.TypeTag[A16],implicitevidence$250:reflect.runtime.universe.TypeTag[A17],implicitevidence$251:reflect.runtime.universe.TypeTag[A18],implicitevidence$252:reflect.runtime.universe.TypeTag[A19],implicitevidence$253:reflect.runtime.universe.TypeTag[A20],implicitevidence$254:reflect.runtime.universe.TypeTag[A21]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>RT)(implicitevidence$212:reflect.runtime.universe.TypeTag[RT],implicitevidence$213:reflect.runtime.universe.TypeTag[A1],implicitevidence$214:reflect.runtime.universe.TypeTag[A2],implicitevidence$215:reflect.runtime.universe.TypeTag[A3],implicitevidence$216:reflect.runtime.universe.TypeTag[A4],implicitevidence$217:reflect.runtime.universe.TypeTag[A5],implicitevidence$218:reflect.runtime.universe.TypeTag[A6],implicitevidence$219:reflect.runtime.universe.TypeTag[A7],implicitevidence$220:reflect.runtime.universe.TypeTag[A8],implicitevidence$221:reflect.runtime.universe.TypeTag[A9],implicitevidence$222:reflect.runtime.universe.TypeTag[A10],implicitevidence$223:reflect.runtime.universe.TypeTag[A11],implicitevidence$224:reflect.runtime.universe.TypeTag[A12],implicitevidence$225:reflect.runtime.universe.TypeTag[A13],implicitevidence$226:reflect.runtime.universe.TypeTag[A14],implicitevidence$227:reflect.runtime.universe.TypeTag[A15],implicitevidence$228:reflect.runtime.universe.TypeTag[A16],implicitevidence$229:reflect.runtime.universe.TypeTag[A17],implicitevidence$230:reflect.runtime.universe.TypeTag[A18],implicitevidence$231:reflect.runtime.universe.TypeTag[A19],implicitevidence$232:reflect.runtime.universe.TypeTag[A20]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>RT)(implicitevidence$192:reflect.runtime.universe.TypeTag[RT],implicitevidence$193:reflect.runtime.universe.TypeTag[A1],implicitevidence$194:reflect.runtime.universe.TypeTag[A2],implicitevidence$195:reflect.runtime.universe.TypeTag[A3],implicitevidence$196:reflect.runtime.universe.TypeTag[A4],implicitevidence$197:reflect.runtime.universe.TypeTag[A5],implicitevidence$198:reflect.runtime.universe.TypeTag[A6],implicitevidence$199:reflect.runtime.universe.TypeTag[A7],implicitevidence$200:reflect.runtime.universe.TypeTag[A8],implicitevidence$201:reflect.runtime.universe.TypeTag[A9],implicitevidence$202:reflect.runtime.universe.TypeTag[A10],implicitevidence$203:reflect.runtime.universe.TypeTag[A11],implicitevidence$204:reflect.runtime.universe.TypeTag[A12],implicitevidence$205:reflect.runtime.universe.TypeTag[A13],implicitevidence$206:reflect.runtime.universe.TypeTag[A14],implicitevidence$207:reflect.runtime.universe.TypeTag[A15],implicitevidence$208:reflect.runtime.universe.TypeTag[A16],implicitevidence$209:reflect.runtime.universe.TypeTag[A17],implicitevidence$210:reflect.runtime.universe.TypeTag[A18],implicitevidence$211:reflect.runtime.universe.TypeTag[A19]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>RT)(implicitevidence$173:reflect.runtime.universe.TypeTag[RT],implicitevidence$174:reflect.runtime.universe.TypeTag[A1],implicitevidence$175:reflect.runtime.universe.TypeTag[A2],implicitevidence$176:reflect.runtime.universe.TypeTag[A3],implicitevidence$177:reflect.runtime.universe.TypeTag[A4],implicitevidence$178:reflect.runtime.universe.TypeTag[A5],implicitevidence$179:reflect.runtime.universe.TypeTag[A6],implicitevidence$180:reflect.runtime.universe.TypeTag[A7],implicitevidence$181:reflect.runtime.universe.TypeTag[A8],implicitevidence$182:reflect.runtime.universe.TypeTag[A9],implicitevidence$183:reflect.runtime.universe.TypeTag[A10],implicitevidence$184:reflect.runtime.universe.TypeTag[A11],implicitevidence$185:reflect.runtime.universe.TypeTag[A12],implicitevidence$186:reflect.runtime.universe.TypeTag[A13],implicitevidence$187:reflect.runtime.universe.TypeTag[A14],implicitevidence$188:reflect.runtime.universe.TypeTag[A15],implicitevidence$189:reflect.runtime.universe.TypeTag[A16],implicitevidence$190:reflect.runtime.universe.TypeTag[A17],implicitevidence$191:reflect.runtime.universe.TypeTag[A18]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>RT)(implicitevidence$155:reflect.runtime.universe.TypeTag[RT],implicitevidence$156:reflect.runtime.universe.TypeTag[A1],implicitevidence$157:reflect.runtime.universe.TypeTag[A2],implicitevidence$158:reflect.runtime.universe.TypeTag[A3],implicitevidence$159:reflect.runtime.universe.TypeTag[A4],implicitevidence$160:reflect.runtime.universe.TypeTag[A5],implicitevidence$161:reflect.runtime.universe.TypeTag[A6],implicitevidence$162:reflect.runtime.universe.TypeTag[A7],implicitevidence$163:reflect.runtime.universe.TypeTag[A8],implicitevidence$164:reflect.runtime.universe.TypeTag[A9],implicitevidence$165:reflect.runtime.universe.TypeTag[A10],implicitevidence$166:reflect.runtime.universe.TypeTag[A11],implicitevidence$167:reflect.runtime.universe.TypeTag[A12],implicitevidence$168:reflect.runtime.universe.TypeTag[A13],implicitevidence$169:reflect.runtime.universe.TypeTag[A14],implicitevidence$170:reflect.runtime.universe.TypeTag[A15],implicitevidence$171:reflect.runtime.universe.TypeTag[A16],implicitevidence$172:reflect.runtime.universe.TypeTag[A17]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>RT)(implicitevidence$138:reflect.runtime.universe.TypeTag[RT],implicitevidence$139:reflect.runtime.universe.TypeTag[A1],implicitevidence$140:reflect.runtime.universe.TypeTag[A2],implicitevidence$141:reflect.runtime.universe.TypeTag[A3],implicitevidence$142:reflect.runtime.universe.TypeTag[A4],implicitevidence$143:reflect.runtime.universe.TypeTag[A5],implicitevidence$144:reflect.runtime.universe.TypeTag[A6],implicitevidence$145:reflect.runtime.universe.TypeTag[A7],implicitevidence$146:reflect.runtime.universe.TypeTag[A8],implicitevidence$147:reflect.runtime.universe.TypeTag[A9],implicitevidence$148:reflect.runtime.universe.TypeTag[A10],implicitevidence$149:reflect.runtime.universe.TypeTag[A11],implicitevidence$150:reflect.runtime.universe.TypeTag[A12],implicitevidence$151:reflect.runtime.universe.TypeTag[A13],implicitevidence$152:reflect.runtime.universe.TypeTag[A14],implicitevidence$153:reflect.runtime.universe.TypeTag[A15],implicitevidence$154:reflect.runtime.universe.TypeTag[A16]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>RT)(implicitevidence$122:reflect.runtime.universe.TypeTag[RT],implicitevidence$123:reflect.runtime.universe.TypeTag[A1],implicitevidence$124:reflect.runtime.universe.TypeTag[A2],implicitevidence$125:reflect.runtime.universe.TypeTag[A3],implicitevidence$126:reflect.runtime.universe.TypeTag[A4],implicitevidence$127:reflect.runtime.universe.TypeTag[A5],implicitevidence$128:reflect.runtime.universe.TypeTag[A6],implicitevidence$129:reflect.runtime.universe.TypeTag[A7],implicitevidence$130:reflect.runtime.universe.TypeTag[A8],implicitevidence$131:reflect.runtime.universe.TypeTag[A9],implicitevidence$132:reflect.runtime.universe.TypeTag[A10],implicitevidence$133:reflect.runtime.universe.TypeTag[A11],implicitevidence$134:reflect.runtime.universe.TypeTag[A12],implicitevidence$135:reflect.runtime.universe.TypeTag[A13],implicitevidence$136:reflect.runtime.universe.TypeTag[A14],implicitevidence$137:reflect.runtime.universe.TypeTag[A15]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>RT)(implicitevidence$107:reflect.runtime.universe.TypeTag[RT],implicitevidence$108:reflect.runtime.universe.TypeTag[A1],implicitevidence$109:reflect.runtime.universe.TypeTag[A2],implicitevidence$110:reflect.runtime.universe.TypeTag[A3],implicitevidence$111:reflect.runtime.universe.TypeTag[A4],implicitevidence$112:reflect.runtime.universe.TypeTag[A5],implicitevidence$113:reflect.runtime.universe.TypeTag[A6],implicitevidence$114:reflect.runtime.universe.TypeTag[A7],implicitevidence$115:reflect.runtime.universe.TypeTag[A8],implicitevidence$116:reflect.runtime.universe.TypeTag[A9],implicitevidence$117:reflect.runtime.universe.TypeTag[A10],implicitevidence$118:reflect.runtime.universe.TypeTag[A11],implicitevidence$119:reflect.runtime.universe.TypeTag[A12],implicitevidence$120:reflect.runtime.universe.TypeTag[A13],implicitevidence$121:reflect.runtime.universe.TypeTag[A14]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>RT)(implicitevidence$93:reflect.runtime.universe.TypeTag[RT],implicitevidence$94:reflect.runtime.universe.TypeTag[A1],implicitevidence$95:reflect.runtime.universe.TypeTag[A2],implicitevidence$96:reflect.runtime.universe.TypeTag[A3],implicitevidence$97:reflect.runtime.universe.TypeTag[A4],implicitevidence$98:reflect.runtime.universe.TypeTag[A5],implicitevidence$99:reflect.runtime.universe.TypeTag[A6],implicitevidence$100:reflect.runtime.universe.TypeTag[A7],implicitevidence$101:reflect.runtime.universe.TypeTag[A8],implicitevidence$102:reflect.runtime.universe.TypeTag[A9],implicitevidence$103:reflect.runtime.universe.TypeTag[A10],implicitevidence$104:reflect.runtime.universe.TypeTag[A11],implicitevidence$105:reflect.runtime.universe.TypeTag[A12],implicitevidence$106:reflect.runtime.universe.TypeTag[A13]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>RT)(implicitevidence$80:reflect.runtime.universe.TypeTag[RT],implicitevidence$81:reflect.runtime.universe.TypeTag[A1],implicitevidence$82:reflect.runtime.universe.TypeTag[A2],implicitevidence$83:reflect.runtime.universe.TypeTag[A3],implicitevidence$84:reflect.runtime.universe.TypeTag[A4],implicitevidence$85:reflect.runtime.universe.TypeTag[A5],implicitevidence$86:reflect.runtime.universe.TypeTag[A6],implicitevidence$87:reflect.runtime.universe.TypeTag[A7],implicitevidence$88:reflect.runtime.universe.TypeTag[A8],implicitevidence$89:reflect.runtime.universe.TypeTag[A9],implicitevidence$90:reflect.runtime.universe.TypeTag[A10],implicitevidence$91:reflect.runtime.universe.TypeTag[A11],implicitevidence$92:reflect.runtime.universe.TypeTag[A12]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>RT)(implicitevidence$68:reflect.runtime.universe.TypeTag[RT],implicitevidence$69:reflect.runtime.universe.TypeTag[A1],implicitevidence$70:reflect.runtime.universe.TypeTag[A2],implicitevidence$71:reflect.runtime.universe.TypeTag[A3],implicitevidence$72:reflect.runtime.universe.TypeTag[A4],implicitevidence$73:reflect.runtime.universe.TypeTag[A5],implicitevidence$74:reflect.runtime.universe.TypeTag[A6],implicitevidence$75:reflect.runtime.universe.TypeTag[A7],implicitevidence$76:reflect.runtime.universe.TypeTag[A8],implicitevidence$77:reflect.runtime.universe.TypeTag[A9],implicitevidence$78:reflect.runtime.universe.TypeTag[A10],implicitevidence$79:reflect.runtime.universe.TypeTag[A11]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>RT)(implicitevidence$57:reflect.runtime.universe.TypeTag[RT],implicitevidence$58:reflect.runtime.universe.TypeTag[A1],implicitevidence$59:reflect.runtime.universe.TypeTag[A2],implicitevidence$60:reflect.runtime.universe.TypeTag[A3],implicitevidence$61:reflect.runtime.universe.TypeTag[A4],implicitevidence$62:reflect.runtime.universe.TypeTag[A5],implicitevidence$63:reflect.runtime.universe.TypeTag[A6],implicitevidence$64:reflect.runtime.universe.TypeTag[A7],implicitevidence$65:reflect.runtime.universe.TypeTag[A8],implicitevidence$66:reflect.runtime.universe.TypeTag[A9],implicitevidence$67:reflect.runtime.universe.TypeTag[A10]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>RT)(implicitevidence$47:reflect.runtime.universe.TypeTag[RT],implicitevidence$48:reflect.runtime.universe.TypeTag[A1],implicitevidence$49:reflect.runtime.universe.TypeTag[A2],implicitevidence$50:reflect.runtime.universe.TypeTag[A3],implicitevidence$51:reflect.runtime.universe.TypeTag[A4],implicitevidence$52:reflect.runtime.universe.TypeTag[A5],implicitevidence$53:reflect.runtime.universe.TypeTag[A6],implicitevidence$54:reflect.runtime.universe.TypeTag[A7],implicitevidence$55:reflect.runtime.universe.TypeTag[A8],implicitevidence$56:reflect.runtime.universe.TypeTag[A9]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7,A8](func:(A1,A2,A3,A4,A5,A6,A7,A8)=>RT)(implicitevidence$38:reflect.runtime.universe.TypeTag[RT],implicitevidence$39:reflect.runtime.universe.TypeTag[A1],implicitevidence$40:reflect.runtime.universe.TypeTag[A2],implicitevidence$41:reflect.runtime.universe.TypeTag[A3],implicitevidence$42:reflect.runtime.universe.TypeTag[A4],implicitevidence$43:reflect.runtime.universe.TypeTag[A5],implicitevidence$44:reflect.runtime.universe.TypeTag[A6],implicitevidence$45:reflect.runtime.universe.TypeTag[A7],implicitevidence$46:reflect.runtime.universe.TypeTag[A8]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6,A7](func:(A1,A2,A3,A4,A5,A6,A7)=>RT)(implicitevidence$30:reflect.runtime.universe.TypeTag[RT],implicitevidence$31:reflect.runtime.universe.TypeTag[A1],implicitevidence$32:reflect.runtime.universe.TypeTag[A2],implicitevidence$33:reflect.runtime.universe.TypeTag[A3],implicitevidence$34:reflect.runtime.universe.TypeTag[A4],implicitevidence$35:reflect.runtime.universe.TypeTag[A5],implicitevidence$36:reflect.runtime.universe.TypeTag[A6],implicitevidence$37:reflect.runtime.universe.TypeTag[A7]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5, A6) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5,A6](func:(A1,A2,A3,A4,A5,A6)=>RT)(implicitevidence$23:reflect.runtime.universe.TypeTag[RT],implicitevidence$24:reflect.runtime.universe.TypeTag[A1],implicitevidence$25:reflect.runtime.universe.TypeTag[A2],implicitevidence$26:reflect.runtime.universe.TypeTag[A3],implicitevidence$27:reflect.runtime.universe.TypeTag[A4],implicitevidence$28:reflect.runtime.universe.TypeTag[A5],implicitevidence$29:reflect.runtime.universe.TypeTag[A6]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4, A5) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4,A5](func:(A1,A2,A3,A4,A5)=>RT)(implicitevidence$17:reflect.runtime.universe.TypeTag[RT],implicitevidence$18:reflect.runtime.universe.TypeTag[A1],implicitevidence$19:reflect.runtime.universe.TypeTag[A2],implicitevidence$20:reflect.runtime.universe.TypeTag[A3],implicitevidence$21:reflect.runtime.universe.TypeTag[A4],implicitevidence$22:reflect.runtime.universe.TypeTag[A5]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3, A4) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3,A4](func:(A1,A2,A3,A4)=>RT)(implicitevidence$12:reflect.runtime.universe.TypeTag[RT],implicitevidence$13:reflect.runtime.universe.TypeTag[A1],implicitevidence$14:reflect.runtime.universe.TypeTag[A2],implicitevidence$15:reflect.runtime.universe.TypeTag[A3],implicitevidence$16:reflect.runtime.universe.TypeTag[A4]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2, A3) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2,A3](func:(A1,A2,A3)=>RT)(implicitevidence$8:reflect.runtime.universe.TypeTag[RT],implicitevidence$9:reflect.runtime.universe.TypeTag[A1],implicitevidence$10:reflect.runtime.universe.TypeTag[A2],implicitevidence$11:reflect.runtime.universe.TypeTag[A3]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1, A2) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1,A2](func:(A1,A2)=>RT)(implicitevidence$5:reflect.runtime.universe.TypeTag[RT],implicitevidence$6:reflect.runtime.universe.TypeTag[A1],implicitevidence$7:reflect.runtime.universe.TypeTag[A2]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: (A1) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT,A1](func:A1=>RT)(implicitevidence$3:reflect.runtime.universe.TypeTag[RT],implicitevidence$4:reflect.runtime.universe.TypeTag[A1]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "udf", "tail" : "(func: () ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT]): UserDefinedFunction", "member" : "com.snowflake.snowpark.functions.udf", "link" : "com\/snowflake\/snowpark\/functions$.html#udf[RT](func:()=>RT)(implicitevidence$2:reflect.runtime.universe.TypeTag[RT]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "callUDF", "tail" : "(udfName: String, cols: Any*): Column", "member" : "com.snowflake.snowpark.functions.callUDF", "link" : "com\/snowflake\/snowpark\/functions$.html#callUDF(udfName:String,cols:Any*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "callBuiltin", "tail" : "(functionName: String, args: Any*): Column", "member" : "com.snowflake.snowpark.functions.callBuiltin", "link" : "com\/snowflake\/snowpark\/functions$.html#callBuiltin(functionName:String,args:Any*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "listagg", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.listagg", "link" : "com\/snowflake\/snowpark\/functions$.html#listagg(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "listagg", "tail" : "(col: Column, delimiter: String): Column", "member" : "com.snowflake.snowpark.functions.listagg", "link" : "com\/snowflake\/snowpark\/functions$.html#listagg(col:com.snowflake.snowpark.Column,delimiter:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "listagg", "tail" : "(col: Column, delimiter: String, isDistinct: Boolean): Column", "member" : "com.snowflake.snowpark.functions.listagg", "link" : "com\/snowflake\/snowpark\/functions$.html#listagg(col:com.snowflake.snowpark.Column,delimiter:String,isDistinct:Boolean):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "uniform", "tail" : "(min: Column, max: Column, gen: Column): Column", "member" : "com.snowflake.snowpark.functions.uniform", "link" : "com\/snowflake\/snowpark\/functions$.html#uniform(min:com.snowflake.snowpark.Column,max:com.snowflake.snowpark.Column,gen:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "seq8", "tail" : "(startsFromZero: Boolean): Column", "member" : "com.snowflake.snowpark.functions.seq8", "link" : "com\/snowflake\/snowpark\/functions$.html#seq8(startsFromZero:Boolean):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "seq8", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.seq8", "link" : "com\/snowflake\/snowpark\/functions$.html#seq8():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "seq4", "tail" : "(startsFromZero: Boolean): Column", "member" : "com.snowflake.snowpark.functions.seq4", "link" : "com\/snowflake\/snowpark\/functions$.html#seq4(startsFromZero:Boolean):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "seq4", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.seq4", "link" : "com\/snowflake\/snowpark\/functions$.html#seq4():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "seq2", "tail" : "(startsFromZero: Boolean): Column", "member" : "com.snowflake.snowpark.functions.seq2", "link" : "com\/snowflake\/snowpark\/functions$.html#seq2(startsFromZero:Boolean):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "seq2", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.seq2", "link" : "com\/snowflake\/snowpark\/functions$.html#seq2():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "seq1", "tail" : "(startsFromZero: Boolean): Column", "member" : "com.snowflake.snowpark.functions.seq1", "link" : "com\/snowflake\/snowpark\/functions$.html#seq1(startsFromZero:Boolean):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "seq1", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.seq1", "link" : "com\/snowflake\/snowpark\/functions$.html#seq1():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "in", "tail" : "(columns: Seq[Column], df: DataFrame): Column", "member" : "com.snowflake.snowpark.functions.in", "link" : "com\/snowflake\/snowpark\/functions$.html#in(columns:Seq[com.snowflake.snowpark.Column],df:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "in", "tail" : "(columns: Seq[Column], values: Seq[Seq[Any]]): Column", "member" : "com.snowflake.snowpark.functions.in", "link" : "com\/snowflake\/snowpark\/functions$.html#in(columns:Seq[com.snowflake.snowpark.Column],values:Seq[Seq[Any]]):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "iff", "tail" : "(condition: Column, expr1: Column, expr2: Column): Column", "member" : "com.snowflake.snowpark.functions.iff", "link" : "com\/snowflake\/snowpark\/functions$.html#iff(condition:com.snowflake.snowpark.Column,expr1:com.snowflake.snowpark.Column,expr2:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "when", "tail" : "(condition: Column, value: Column): CaseExpr", "member" : "com.snowflake.snowpark.functions.when", "link" : "com\/snowflake\/snowpark\/functions$.html#when(condition:com.snowflake.snowpark.Column,value:com.snowflake.snowpark.Column):com.snowflake.snowpark.CaseExpr", "kind" : "def"}, {"label" : "get_path", "tail" : "(col: Column, path: Column): Column", "member" : "com.snowflake.snowpark.functions.get_path", "link" : "com\/snowflake\/snowpark\/functions$.html#get_path(col:com.snowflake.snowpark.Column,path:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "xmlget", "tail" : "(xml: Column, tag: Column): Column", "member" : "com.snowflake.snowpark.functions.xmlget", "link" : "com\/snowflake\/snowpark\/functions$.html#xmlget(xml:com.snowflake.snowpark.Column,tag:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "xmlget", "tail" : "(xml: Column, tag: Column, instance: Column): Column", "member" : "com.snowflake.snowpark.functions.xmlget", "link" : "com\/snowflake\/snowpark\/functions$.html#xmlget(xml:com.snowflake.snowpark.Column,tag:com.snowflake.snowpark.Column,instance:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "object_keys", "tail" : "(obj: Column): Column", "member" : "com.snowflake.snowpark.functions.object_keys", "link" : "com\/snowflake\/snowpark\/functions$.html#object_keys(obj:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "get_ignore_case", "tail" : "(obj: Column, field: Column): Column", "member" : "com.snowflake.snowpark.functions.get_ignore_case", "link" : "com\/snowflake\/snowpark\/functions$.html#get_ignore_case(obj:com.snowflake.snowpark.Column,field:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "get", "tail" : "(col1: Column, col2: Column): Column", "member" : "com.snowflake.snowpark.functions.get", "link" : "com\/snowflake\/snowpark\/functions$.html#get(col1:com.snowflake.snowpark.Column,col2:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "to_xml", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.to_xml", "link" : "com\/snowflake\/snowpark\/functions$.html#to_xml(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "to_variant", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.to_variant", "link" : "com\/snowflake\/snowpark\/functions$.html#to_variant(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "to_object", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.to_object", "link" : "com\/snowflake\/snowpark\/functions$.html#to_object(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "to_json", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.to_json", "link" : "com\/snowflake\/snowpark\/functions$.html#to_json(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "to_array", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.to_array", "link" : "com\/snowflake\/snowpark\/functions$.html#to_array(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "strtok_to_array", "tail" : "(array: Column, delimiter: Column): Column", "member" : "com.snowflake.snowpark.functions.strtok_to_array", "link" : "com\/snowflake\/snowpark\/functions$.html#strtok_to_array(array:com.snowflake.snowpark.Column,delimiter:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "strtok_to_array", "tail" : "(array: Column): Column", "member" : "com.snowflake.snowpark.functions.strtok_to_array", "link" : "com\/snowflake\/snowpark\/functions$.html#strtok_to_array(array:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_timestamp_tz", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_timestamp_tz", "link" : "com\/snowflake\/snowpark\/functions$.html#as_timestamp_tz(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_timestamp_ntz", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_timestamp_ntz", "link" : "com\/snowflake\/snowpark\/functions$.html#as_timestamp_ntz(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_timestamp_ltz", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_timestamp_ltz", "link" : "com\/snowflake\/snowpark\/functions$.html#as_timestamp_ltz(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_time", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_time", "link" : "com\/snowflake\/snowpark\/functions$.html#as_time(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_object", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_object", "link" : "com\/snowflake\/snowpark\/functions$.html#as_object(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_integer", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_integer", "link" : "com\/snowflake\/snowpark\/functions$.html#as_integer(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_real", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_real", "link" : "com\/snowflake\/snowpark\/functions$.html#as_real(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_double", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_double", "link" : "com\/snowflake\/snowpark\/functions$.html#as_double(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_number", "tail" : "(variant: Column, precision: Int, scale: Int): Column", "member" : "com.snowflake.snowpark.functions.as_number", "link" : "com\/snowflake\/snowpark\/functions$.html#as_number(variant:com.snowflake.snowpark.Column,precision:Int,scale:Int):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_number", "tail" : "(variant: Column, precision: Int): Column", "member" : "com.snowflake.snowpark.functions.as_number", "link" : "com\/snowflake\/snowpark\/functions$.html#as_number(variant:com.snowflake.snowpark.Column,precision:Int):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_number", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_number", "link" : "com\/snowflake\/snowpark\/functions$.html#as_number(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_decimal", "tail" : "(variant: Column, precision: Int, scale: Int): Column", "member" : "com.snowflake.snowpark.functions.as_decimal", "link" : "com\/snowflake\/snowpark\/functions$.html#as_decimal(variant:com.snowflake.snowpark.Column,precision:Int,scale:Int):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_decimal", "tail" : "(variant: Column, precision: Int): Column", "member" : "com.snowflake.snowpark.functions.as_decimal", "link" : "com\/snowflake\/snowpark\/functions$.html#as_decimal(variant:com.snowflake.snowpark.Column,precision:Int):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_decimal", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_decimal", "link" : "com\/snowflake\/snowpark\/functions$.html#as_decimal(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_date", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_date", "link" : "com\/snowflake\/snowpark\/functions$.html#as_date(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_varchar", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_varchar", "link" : "com\/snowflake\/snowpark\/functions$.html#as_varchar(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_char", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_char", "link" : "com\/snowflake\/snowpark\/functions$.html#as_char(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_binary", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_binary", "link" : "com\/snowflake\/snowpark\/functions$.html#as_binary(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "as_array", "tail" : "(variant: Column): Column", "member" : "com.snowflake.snowpark.functions.as_array", "link" : "com\/snowflake\/snowpark\/functions$.html#as_array(variant:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "object_pick", "tail" : "(obj: Column, key1: Column, keys: Column*): Column", "member" : "com.snowflake.snowpark.functions.object_pick", "link" : "com\/snowflake\/snowpark\/functions$.html#object_pick(obj:com.snowflake.snowpark.Column,key1:com.snowflake.snowpark.Column,keys:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "object_insert", "tail" : "(obj: Column, key: Column, value: Column, update_flag: Column): Column", "member" : "com.snowflake.snowpark.functions.object_insert", "link" : "com\/snowflake\/snowpark\/functions$.html#object_insert(obj:com.snowflake.snowpark.Column,key:com.snowflake.snowpark.Column,value:com.snowflake.snowpark.Column,update_flag:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "object_insert", "tail" : "(obj: Column, key: Column, value: Column): Column", "member" : "com.snowflake.snowpark.functions.object_insert", "link" : "com\/snowflake\/snowpark\/functions$.html#object_insert(obj:com.snowflake.snowpark.Column,key:com.snowflake.snowpark.Column,value:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "object_delete", "tail" : "(obj: Column, key1: Column, keys: Column*): Column", "member" : "com.snowflake.snowpark.functions.object_delete", "link" : "com\/snowflake\/snowpark\/functions$.html#object_delete(obj:com.snowflake.snowpark.Column,key1:com.snowflake.snowpark.Column,keys:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "object_construct", "tail" : "(key_values: Column*): Column", "member" : "com.snowflake.snowpark.functions.object_construct", "link" : "com\/snowflake\/snowpark\/functions$.html#object_construct(key_values:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "objectagg", "tail" : "(key: Column, value: Column): Column", "member" : "com.snowflake.snowpark.functions.objectagg", "link" : "com\/snowflake\/snowpark\/functions$.html#objectagg(key:com.snowflake.snowpark.Column,value:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_to_string", "tail" : "(array: Column, separator: Column): Column", "member" : "com.snowflake.snowpark.functions.array_to_string", "link" : "com\/snowflake\/snowpark\/functions$.html#array_to_string(array:com.snowflake.snowpark.Column,separator:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_slice", "tail" : "(array: Column, from: Column, to: Column): Column", "member" : "com.snowflake.snowpark.functions.array_slice", "link" : "com\/snowflake\/snowpark\/functions$.html#array_slice(array:com.snowflake.snowpark.Column,from:com.snowflake.snowpark.Column,to:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_size", "tail" : "(array: Column): Column", "member" : "com.snowflake.snowpark.functions.array_size", "link" : "com\/snowflake\/snowpark\/functions$.html#array_size(array:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_prepend", "tail" : "(array: Column, element: Column): Column", "member" : "com.snowflake.snowpark.functions.array_prepend", "link" : "com\/snowflake\/snowpark\/functions$.html#array_prepend(array:com.snowflake.snowpark.Column,element:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_position", "tail" : "(variant: Column, array: Column): Column", "member" : "com.snowflake.snowpark.functions.array_position", "link" : "com\/snowflake\/snowpark\/functions$.html#array_position(variant:com.snowflake.snowpark.Column,array:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_insert", "tail" : "(array: Column, pos: Column, element: Column): Column", "member" : "com.snowflake.snowpark.functions.array_insert", "link" : "com\/snowflake\/snowpark\/functions$.html#array_insert(array:com.snowflake.snowpark.Column,pos:com.snowflake.snowpark.Column,element:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_contains", "tail" : "(variant: Column, array: Column): Column", "member" : "com.snowflake.snowpark.functions.array_contains", "link" : "com\/snowflake\/snowpark\/functions$.html#array_contains(variant:com.snowflake.snowpark.Column,array:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_construct_compact", "tail" : "(cols: Column*): Column", "member" : "com.snowflake.snowpark.functions.array_construct_compact", "link" : "com\/snowflake\/snowpark\/functions$.html#array_construct_compact(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_construct", "tail" : "(cols: Column*): Column", "member" : "com.snowflake.snowpark.functions.array_construct", "link" : "com\/snowflake\/snowpark\/functions$.html#array_construct(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_compact", "tail" : "(array: Column): Column", "member" : "com.snowflake.snowpark.functions.array_compact", "link" : "com\/snowflake\/snowpark\/functions$.html#array_compact(array:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_cat", "tail" : "(array1: Column, array2: Column): Column", "member" : "com.snowflake.snowpark.functions.array_cat", "link" : "com\/snowflake\/snowpark\/functions$.html#array_cat(array1:com.snowflake.snowpark.Column,array2:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_append", "tail" : "(array: Column, element: Column): Column", "member" : "com.snowflake.snowpark.functions.array_append", "link" : "com\/snowflake\/snowpark\/functions$.html#array_append(array:com.snowflake.snowpark.Column,element:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_agg", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.array_agg", "link" : "com\/snowflake\/snowpark\/functions$.html#array_agg(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "strip_null_value", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.strip_null_value", "link" : "com\/snowflake\/snowpark\/functions$.html#strip_null_value(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "parse_xml", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.parse_xml", "link" : "com\/snowflake\/snowpark\/functions$.html#parse_xml(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "parse_json", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.parse_json", "link" : "com\/snowflake\/snowpark\/functions$.html#parse_json(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "json_extract_path_text", "tail" : "(col: Column, path: Column): Column", "member" : "com.snowflake.snowpark.functions.json_extract_path_text", "link" : "com\/snowflake\/snowpark\/functions$.html#json_extract_path_text(col:com.snowflake.snowpark.Column,path:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "check_xml", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.check_xml", "link" : "com\/snowflake\/snowpark\/functions$.html#check_xml(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "check_json", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.check_json", "link" : "com\/snowflake\/snowpark\/functions$.html#check_json(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_timestamp_tz", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_timestamp_tz", "link" : "com\/snowflake\/snowpark\/functions$.html#is_timestamp_tz(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_timestamp_ntz", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_timestamp_ntz", "link" : "com\/snowflake\/snowpark\/functions$.html#is_timestamp_ntz(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_timestamp_ltz", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_timestamp_ltz", "link" : "com\/snowflake\/snowpark\/functions$.html#is_timestamp_ltz(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_time", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_time", "link" : "com\/snowflake\/snowpark\/functions$.html#is_time(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_object", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_object", "link" : "com\/snowflake\/snowpark\/functions$.html#is_object(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_null_value", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_null_value", "link" : "com\/snowflake\/snowpark\/functions$.html#is_null_value(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_integer", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_integer", "link" : "com\/snowflake\/snowpark\/functions$.html#is_integer(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_real", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_real", "link" : "com\/snowflake\/snowpark\/functions$.html#is_real(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_double", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_double", "link" : "com\/snowflake\/snowpark\/functions$.html#is_double(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_decimal", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_decimal", "link" : "com\/snowflake\/snowpark\/functions$.html#is_decimal(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_date_value", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_date_value", "link" : "com\/snowflake\/snowpark\/functions$.html#is_date_value(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_date", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_date", "link" : "com\/snowflake\/snowpark\/functions$.html#is_date(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_varchar", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_varchar", "link" : "com\/snowflake\/snowpark\/functions$.html#is_varchar(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_char", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_char", "link" : "com\/snowflake\/snowpark\/functions$.html#is_char(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_binary", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_binary", "link" : "com\/snowflake\/snowpark\/functions$.html#is_binary(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_boolean", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_boolean", "link" : "com\/snowflake\/snowpark\/functions$.html#is_boolean(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_array", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.is_array", "link" : "com\/snowflake\/snowpark\/functions$.html#is_array(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "array_intersection", "tail" : "(col1: Column, col2: Column): Column", "member" : "com.snowflake.snowpark.functions.array_intersection", "link" : "com\/snowflake\/snowpark\/functions$.html#array_intersection(col1:com.snowflake.snowpark.Column,col2:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "collation", "tail" : "(expr: Column): Column", "member" : "com.snowflake.snowpark.functions.collation", "link" : "com\/snowflake\/snowpark\/functions$.html#collation(expr:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "collate", "tail" : "(expr: Column, collationSpec: String): Column", "member" : "com.snowflake.snowpark.functions.collate", "link" : "com\/snowflake\/snowpark\/functions$.html#collate(expr:com.snowflake.snowpark.Column,collationSpec:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "charindex", "tail" : "(targetExpr: Column, sourceExpr: Column, position: Column): Column", "member" : "com.snowflake.snowpark.functions.charindex", "link" : "com\/snowflake\/snowpark\/functions$.html#charindex(targetExpr:com.snowflake.snowpark.Column,sourceExpr:com.snowflake.snowpark.Column,position:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "charindex", "tail" : "(targetExpr: Column, sourceExpr: Column): Column", "member" : "com.snowflake.snowpark.functions.charindex", "link" : "com\/snowflake\/snowpark\/functions$.html#charindex(targetExpr:com.snowflake.snowpark.Column,sourceExpr:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "replace", "tail" : "(strExpr: Column, pattern: Column): Column", "member" : "com.snowflake.snowpark.functions.replace", "link" : "com\/snowflake\/snowpark\/functions$.html#replace(strExpr:com.snowflake.snowpark.Column,pattern:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "replace", "tail" : "(strExpr: Column, pattern: Column, replacement: Column): Column", "member" : "com.snowflake.snowpark.functions.replace", "link" : "com\/snowflake\/snowpark\/functions$.html#replace(strExpr:com.snowflake.snowpark.Column,pattern:com.snowflake.snowpark.Column,replacement:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "regexp_replace", "tail" : "(strExpr: Column, pattern: Column, replacement: Column): Column", "member" : "com.snowflake.snowpark.functions.regexp_replace", "link" : "com\/snowflake\/snowpark\/functions$.html#regexp_replace(strExpr:com.snowflake.snowpark.Column,pattern:com.snowflake.snowpark.Column,replacement:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "regexp_replace", "tail" : "(strExpr: Column, pattern: Column): Column", "member" : "com.snowflake.snowpark.functions.regexp_replace", "link" : "com\/snowflake\/snowpark\/functions$.html#regexp_replace(strExpr:com.snowflake.snowpark.Column,pattern:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "regexp_count", "tail" : "(strExpr: Column, pattern: Column): Column", "member" : "com.snowflake.snowpark.functions.regexp_count", "link" : "com\/snowflake\/snowpark\/functions$.html#regexp_count(strExpr:com.snowflake.snowpark.Column,pattern:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "regexp_count", "tail" : "(strExpr: Column, pattern: Column, position: Column, parameters: Column): Column", "member" : "com.snowflake.snowpark.functions.regexp_count", "link" : "com\/snowflake\/snowpark\/functions$.html#regexp_count(strExpr:com.snowflake.snowpark.Column,pattern:com.snowflake.snowpark.Column,position:com.snowflake.snowpark.Column,parameters:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "right", "tail" : "(strExpr: Column, lengthExpr: Column): Column", "member" : "com.snowflake.snowpark.functions.right", "link" : "com\/snowflake\/snowpark\/functions$.html#right(strExpr:com.snowflake.snowpark.Column,lengthExpr:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "left", "tail" : "(strExpr: Column, lengthExpr: Column): Column", "member" : "com.snowflake.snowpark.functions.left", "link" : "com\/snowflake\/snowpark\/functions$.html#left(strExpr:com.snowflake.snowpark.Column,lengthExpr:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "insert", "tail" : "(baseExpr: Column, position: Column, length: Column, insertExpr: Column): Column", "member" : "com.snowflake.snowpark.functions.insert", "link" : "com\/snowflake\/snowpark\/functions$.html#insert(baseExpr:com.snowflake.snowpark.Column,position:com.snowflake.snowpark.Column,length:com.snowflake.snowpark.Column,insertExpr:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "endswith", "tail" : "(expr: Column, str: Column): Column", "member" : "com.snowflake.snowpark.functions.endswith", "link" : "com\/snowflake\/snowpark\/functions$.html#endswith(expr:com.snowflake.snowpark.Column,str:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "arrays_overlap", "tail" : "(a1: Column, a2: Column): Column", "member" : "com.snowflake.snowpark.functions.arrays_overlap", "link" : "com\/snowflake\/snowpark\/functions$.html#arrays_overlap(a1:com.snowflake.snowpark.Column,a2:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "concat", "tail" : "(exprs: Column*): Column", "member" : "com.snowflake.snowpark.functions.concat", "link" : "com\/snowflake\/snowpark\/functions$.html#concat(exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "date_trunc", "tail" : "(format: String, timestamp: Column): Column", "member" : "com.snowflake.snowpark.functions.date_trunc", "link" : "com\/snowflake\/snowpark\/functions$.html#date_trunc(format:String,timestamp:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "trunc", "tail" : "(expr: Column, scale: Column): Column", "member" : "com.snowflake.snowpark.functions.trunc", "link" : "com\/snowflake\/snowpark\/functions$.html#trunc(expr:com.snowflake.snowpark.Column,scale:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "datediff", "tail" : "(part: String, col1: Column, col2: Column): Column", "member" : "com.snowflake.snowpark.functions.datediff", "link" : "com\/snowflake\/snowpark\/functions$.html#datediff(part:String,col1:com.snowflake.snowpark.Column,col2:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "dateadd", "tail" : "(part: String, value: Column, expr: Column): Column", "member" : "com.snowflake.snowpark.functions.dateadd", "link" : "com\/snowflake\/snowpark\/functions$.html#dateadd(part:String,value:com.snowflake.snowpark.Column,expr:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "monthname", "tail" : "(expr: Column): Column", "member" : "com.snowflake.snowpark.functions.monthname", "link" : "com\/snowflake\/snowpark\/functions$.html#monthname(expr:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "dayname", "tail" : "(expr: Column): Column", "member" : "com.snowflake.snowpark.functions.dayname", "link" : "com\/snowflake\/snowpark\/functions$.html#dayname(expr:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_tz_from_parts", "tail" : "(year: Column, month: Column, day: Column, hour: Column, minute: Column, second: Column, nanosecond: Column, timeZone: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_tz_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_tz_from_parts(year:com.snowflake.snowpark.Column,month:com.snowflake.snowpark.Column,day:com.snowflake.snowpark.Column,hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column,nanosecond:com.snowflake.snowpark.Column,timeZone:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_tz_from_parts", "tail" : "(year: Column, month: Column, day: Column, hour: Column, minute: Column, second: Column, nanosecond: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_tz_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_tz_from_parts(year:com.snowflake.snowpark.Column,month:com.snowflake.snowpark.Column,day:com.snowflake.snowpark.Column,hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column,nanosecond:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_tz_from_parts", "tail" : "(year: Column, month: Column, day: Column, hour: Column, minute: Column, second: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_tz_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_tz_from_parts(year:com.snowflake.snowpark.Column,month:com.snowflake.snowpark.Column,day:com.snowflake.snowpark.Column,hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_ntz_from_parts", "tail" : "(dateExpr: Column, timeExpr: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_ntz_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_ntz_from_parts(dateExpr:com.snowflake.snowpark.Column,timeExpr:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_ntz_from_parts", "tail" : "(year: Column, month: Column, day: Column, hour: Column, minute: Column, second: Column, nanosecond: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_ntz_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_ntz_from_parts(year:com.snowflake.snowpark.Column,month:com.snowflake.snowpark.Column,day:com.snowflake.snowpark.Column,hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column,nanosecond:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_ntz_from_parts", "tail" : "(year: Column, month: Column, day: Column, hour: Column, minute: Column, second: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_ntz_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_ntz_from_parts(year:com.snowflake.snowpark.Column,month:com.snowflake.snowpark.Column,day:com.snowflake.snowpark.Column,hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_ltz_from_parts", "tail" : "(year: Column, month: Column, day: Column, hour: Column, minute: Column, second: Column, nanosecond: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_ltz_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_ltz_from_parts(year:com.snowflake.snowpark.Column,month:com.snowflake.snowpark.Column,day:com.snowflake.snowpark.Column,hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column,nanosecond:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_ltz_from_parts", "tail" : "(year: Column, month: Column, day: Column, hour: Column, minute: Column, second: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_ltz_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_ltz_from_parts(year:com.snowflake.snowpark.Column,month:com.snowflake.snowpark.Column,day:com.snowflake.snowpark.Column,hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_from_parts", "tail" : "(dateExpr: Column, timeExpr: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_from_parts(dateExpr:com.snowflake.snowpark.Column,timeExpr:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_from_parts", "tail" : "(year: Column, month: Column, day: Column, hour: Column, minute: Column, second: Column, nanosecond: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_from_parts(year:com.snowflake.snowpark.Column,month:com.snowflake.snowpark.Column,day:com.snowflake.snowpark.Column,hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column,nanosecond:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "timestamp_from_parts", "tail" : "(year: Column, month: Column, day: Column, hour: Column, minute: Column, second: Column): Column", "member" : "com.snowflake.snowpark.functions.timestamp_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#timestamp_from_parts(year:com.snowflake.snowpark.Column,month:com.snowflake.snowpark.Column,day:com.snowflake.snowpark.Column,hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "time_from_parts", "tail" : "(hour: Column, minute: Column, second: Column): Column", "member" : "com.snowflake.snowpark.functions.time_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#time_from_parts(hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "time_from_parts", "tail" : "(hour: Column, minute: Column, second: Column, nanoseconds: Column): Column", "member" : "com.snowflake.snowpark.functions.time_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#time_from_parts(hour:com.snowflake.snowpark.Column,minute:com.snowflake.snowpark.Column,second:com.snowflake.snowpark.Column,nanoseconds:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "date_from_parts", "tail" : "(year: Column, month: Column, day: Column): Column", "member" : "com.snowflake.snowpark.functions.date_from_parts", "link" : "com\/snowflake\/snowpark\/functions$.html#date_from_parts(year:com.snowflake.snowpark.Column,month:com.snowflake.snowpark.Column,day:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "to_date", "tail" : "(e: Column, fmt: Column): Column", "member" : "com.snowflake.snowpark.functions.to_date", "link" : "com\/snowflake\/snowpark\/functions$.html#to_date(e:com.snowflake.snowpark.Column,fmt:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "to_date", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.to_date", "link" : "com\/snowflake\/snowpark\/functions$.html#to_date(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "to_timestamp", "tail" : "(s: Column, fmt: Column): Column", "member" : "com.snowflake.snowpark.functions.to_timestamp", "link" : "com\/snowflake\/snowpark\/functions$.html#to_timestamp(s:com.snowflake.snowpark.Column,fmt:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "to_timestamp", "tail" : "(s: Column): Column", "member" : "com.snowflake.snowpark.functions.to_timestamp", "link" : "com\/snowflake\/snowpark\/functions$.html#to_timestamp(s:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "weekofyear", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.weekofyear", "link" : "com\/snowflake\/snowpark\/functions$.html#weekofyear(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "second", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.second", "link" : "com\/snowflake\/snowpark\/functions$.html#second(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "previous_day", "tail" : "(date: Column, dayOfWeek: Column): Column", "member" : "com.snowflake.snowpark.functions.previous_day", "link" : "com\/snowflake\/snowpark\/functions$.html#previous_day(date:com.snowflake.snowpark.Column,dayOfWeek:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "next_day", "tail" : "(date: Column, dayOfWeek: Column): Column", "member" : "com.snowflake.snowpark.functions.next_day", "link" : "com\/snowflake\/snowpark\/functions$.html#next_day(date:com.snowflake.snowpark.Column,dayOfWeek:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "minute", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.minute", "link" : "com\/snowflake\/snowpark\/functions$.html#minute(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "last_day", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.last_day", "link" : "com\/snowflake\/snowpark\/functions$.html#last_day(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "hour", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.hour", "link" : "com\/snowflake\/snowpark\/functions$.html#hour(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "dayofyear", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.dayofyear", "link" : "com\/snowflake\/snowpark\/functions$.html#dayofyear(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "dayofmonth", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.dayofmonth", "link" : "com\/snowflake\/snowpark\/functions$.html#dayofmonth(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "dayofweek", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.dayofweek", "link" : "com\/snowflake\/snowpark\/functions$.html#dayofweek(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "month", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.month", "link" : "com\/snowflake\/snowpark\/functions$.html#month(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "quarter", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.quarter", "link" : "com\/snowflake\/snowpark\/functions$.html#quarter(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "year", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.year", "link" : "com\/snowflake\/snowpark\/functions$.html#year(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "convert_timezone", "tail" : "(targetTimeZone: Column, sourceTimestamp: Column): Column", "member" : "com.snowflake.snowpark.functions.convert_timezone", "link" : "com\/snowflake\/snowpark\/functions$.html#convert_timezone(targetTimeZone:com.snowflake.snowpark.Column,sourceTimestamp:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "convert_timezone", "tail" : "(sourceTimeZone: Column, targetTimeZone: Column, sourceTimestampNTZ: Column): Column", "member" : "com.snowflake.snowpark.functions.convert_timezone", "link" : "com\/snowflake\/snowpark\/functions$.html#convert_timezone(sourceTimeZone:com.snowflake.snowpark.Column,targetTimeZone:com.snowflake.snowpark.Column,sourceTimestampNTZ:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sysdate", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.sysdate", "link" : "com\/snowflake\/snowpark\/functions$.html#sysdate():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_warehouse", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_warehouse", "link" : "com\/snowflake\/snowpark\/functions$.html#current_warehouse():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_schemas", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_schemas", "link" : "com\/snowflake\/snowpark\/functions$.html#current_schemas():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_schema", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_schema", "link" : "com\/snowflake\/snowpark\/functions$.html#current_schema():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_database", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_database", "link" : "com\/snowflake\/snowpark\/functions$.html#current_database():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_user", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_user", "link" : "com\/snowflake\/snowpark\/functions$.html#current_user():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_statement", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_statement", "link" : "com\/snowflake\/snowpark\/functions$.html#current_statement():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_session", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_session", "link" : "com\/snowflake\/snowpark\/functions$.html#current_session():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_available_roles", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_available_roles", "link" : "com\/snowflake\/snowpark\/functions$.html#current_available_roles():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_role", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_role", "link" : "com\/snowflake\/snowpark\/functions$.html#current_role():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_account", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_account", "link" : "com\/snowflake\/snowpark\/functions$.html#current_account():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_version", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_version", "link" : "com\/snowflake\/snowpark\/functions$.html#current_version():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_time", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_time", "link" : "com\/snowflake\/snowpark\/functions$.html#current_time():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_region", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_region", "link" : "com\/snowflake\/snowpark\/functions$.html#current_region():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_timestamp", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_timestamp", "link" : "com\/snowflake\/snowpark\/functions$.html#current_timestamp():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "current_date", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.current_date", "link" : "com\/snowflake\/snowpark\/functions$.html#current_date():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "add_months", "tail" : "(startDate: Column, numMonths: Column): Column", "member" : "com.snowflake.snowpark.functions.add_months", "link" : "com\/snowflake\/snowpark\/functions$.html#add_months(startDate:com.snowflake.snowpark.Column,numMonths:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "char", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.char", "link" : "com\/snowflake\/snowpark\/functions$.html#char(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "startswith", "tail" : "(col: Column, str: Column): Column", "member" : "com.snowflake.snowpark.functions.startswith", "link" : "com\/snowflake\/snowpark\/functions$.html#startswith(col:com.snowflake.snowpark.Column,str:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "contains", "tail" : "(col: Column, str: Column): Column", "member" : "com.snowflake.snowpark.functions.contains", "link" : "com\/snowflake\/snowpark\/functions$.html#contains(col:com.snowflake.snowpark.Column,str:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "upper", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.upper", "link" : "com\/snowflake\/snowpark\/functions$.html#upper(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "trim", "tail" : "(e: Column, trimString: Column): Column", "member" : "com.snowflake.snowpark.functions.trim", "link" : "com\/snowflake\/snowpark\/functions$.html#trim(e:com.snowflake.snowpark.Column,trimString:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "translate", "tail" : "(src: Column, matchingString: Column, replaceString: Column): Column", "member" : "com.snowflake.snowpark.functions.translate", "link" : "com\/snowflake\/snowpark\/functions$.html#translate(src:com.snowflake.snowpark.Column,matchingString:com.snowflake.snowpark.Column,replaceString:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "substring", "tail" : "(str: Column, pos: Column, len: Column): Column", "member" : "com.snowflake.snowpark.functions.substring", "link" : "com\/snowflake\/snowpark\/functions$.html#substring(str:com.snowflake.snowpark.Column,pos:com.snowflake.snowpark.Column,len:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "split", "tail" : "(str: Column, pattern: Column): Column", "member" : "com.snowflake.snowpark.functions.split", "link" : "com\/snowflake\/snowpark\/functions$.html#split(str:com.snowflake.snowpark.Column,pattern:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "soundex", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.soundex", "link" : "com\/snowflake\/snowpark\/functions$.html#soundex(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "rtrim", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.rtrim", "link" : "com\/snowflake\/snowpark\/functions$.html#rtrim(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "rtrim", "tail" : "(e: Column, trimString: Column): Column", "member" : "com.snowflake.snowpark.functions.rtrim", "link" : "com\/snowflake\/snowpark\/functions$.html#rtrim(e:com.snowflake.snowpark.Column,trimString:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "repeat", "tail" : "(str: Column, n: Column): Column", "member" : "com.snowflake.snowpark.functions.repeat", "link" : "com\/snowflake\/snowpark\/functions$.html#repeat(str:com.snowflake.snowpark.Column,n:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "rpad", "tail" : "(str: Column, len: Column, pad: Column): Column", "member" : "com.snowflake.snowpark.functions.rpad", "link" : "com\/snowflake\/snowpark\/functions$.html#rpad(str:com.snowflake.snowpark.Column,len:com.snowflake.snowpark.Column,pad:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "ltrim", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.ltrim", "link" : "com\/snowflake\/snowpark\/functions$.html#ltrim(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "ltrim", "tail" : "(e: Column, trimString: Column): Column", "member" : "com.snowflake.snowpark.functions.ltrim", "link" : "com\/snowflake\/snowpark\/functions$.html#ltrim(e:com.snowflake.snowpark.Column,trimString:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lpad", "tail" : "(str: Column, len: Column, pad: Column): Column", "member" : "com.snowflake.snowpark.functions.lpad", "link" : "com\/snowflake\/snowpark\/functions$.html#lpad(str:com.snowflake.snowpark.Column,len:com.snowflake.snowpark.Column,pad:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lower", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.lower", "link" : "com\/snowflake\/snowpark\/functions$.html#lower(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "length", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.length", "link" : "com\/snowflake\/snowpark\/functions$.html#length(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "initcap", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.initcap", "link" : "com\/snowflake\/snowpark\/functions$.html#initcap(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "concat_ws", "tail" : "(separator: Column, exprs: Column*): Column", "member" : "com.snowflake.snowpark.functions.concat_ws", "link" : "com\/snowflake\/snowpark\/functions$.html#concat_ws(separator:com.snowflake.snowpark.Column,exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "ascii", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.ascii", "link" : "com\/snowflake\/snowpark\/functions$.html#ascii(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "hash", "tail" : "(cols: Column*): Column", "member" : "com.snowflake.snowpark.functions.hash", "link" : "com\/snowflake\/snowpark\/functions$.html#hash(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sha2", "tail" : "(e: Column, numBits: Int): Column", "member" : "com.snowflake.snowpark.functions.sha2", "link" : "com\/snowflake\/snowpark\/functions$.html#sha2(e:com.snowflake.snowpark.Column,numBits:Int):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sha1", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.sha1", "link" : "com\/snowflake\/snowpark\/functions$.html#sha1(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "md5", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.md5", "link" : "com\/snowflake\/snowpark\/functions$.html#md5(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "radians", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.radians", "link" : "com\/snowflake\/snowpark\/functions$.html#radians(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "degrees", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.degrees", "link" : "com\/snowflake\/snowpark\/functions$.html#degrees(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "tanh", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.tanh", "link" : "com\/snowflake\/snowpark\/functions$.html#tanh(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "tan", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.tan", "link" : "com\/snowflake\/snowpark\/functions$.html#tan(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sinh", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.sinh", "link" : "com\/snowflake\/snowpark\/functions$.html#sinh(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sin", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.sin", "link" : "com\/snowflake\/snowpark\/functions$.html#sin(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "bitshiftright", "tail" : "(e: Column, numBits: Column): Column", "member" : "com.snowflake.snowpark.functions.bitshiftright", "link" : "com\/snowflake\/snowpark\/functions$.html#bitshiftright(e:com.snowflake.snowpark.Column,numBits:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "bitshiftleft", "tail" : "(e: Column, numBits: Column): Column", "member" : "com.snowflake.snowpark.functions.bitshiftleft", "link" : "com\/snowflake\/snowpark\/functions$.html#bitshiftleft(e:com.snowflake.snowpark.Column,numBits:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "round", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.round", "link" : "com\/snowflake\/snowpark\/functions$.html#round(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "round", "tail" : "(e: Column, scale: Column): Column", "member" : "com.snowflake.snowpark.functions.round", "link" : "com\/snowflake\/snowpark\/functions$.html#round(e:com.snowflake.snowpark.Column,scale:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "pow", "tail" : "(l: Column, r: Column): Column", "member" : "com.snowflake.snowpark.functions.pow", "link" : "com\/snowflake\/snowpark\/functions$.html#pow(l:com.snowflake.snowpark.Column,r:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "log", "tail" : "(base: Column, a: Column): Column", "member" : "com.snowflake.snowpark.functions.log", "link" : "com\/snowflake\/snowpark\/functions$.html#log(base:com.snowflake.snowpark.Column,a:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "least", "tail" : "(exprs: Column*): Column", "member" : "com.snowflake.snowpark.functions.least", "link" : "com\/snowflake\/snowpark\/functions$.html#least(exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "greatest", "tail" : "(exprs: Column*): Column", "member" : "com.snowflake.snowpark.functions.greatest", "link" : "com\/snowflake\/snowpark\/functions$.html#greatest(exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "floor", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.floor", "link" : "com\/snowflake\/snowpark\/functions$.html#floor(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "factorial", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.factorial", "link" : "com\/snowflake\/snowpark\/functions$.html#factorial(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "exp", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.exp", "link" : "com\/snowflake\/snowpark\/functions$.html#exp(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "cosh", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.cosh", "link" : "com\/snowflake\/snowpark\/functions$.html#cosh(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "cos", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.cos", "link" : "com\/snowflake\/snowpark\/functions$.html#cos(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "ceil", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.ceil", "link" : "com\/snowflake\/snowpark\/functions$.html#ceil(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "atan2", "tail" : "(y: Column, x: Column): Column", "member" : "com.snowflake.snowpark.functions.atan2", "link" : "com\/snowflake\/snowpark\/functions$.html#atan2(y:com.snowflake.snowpark.Column,x:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "atan", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.atan", "link" : "com\/snowflake\/snowpark\/functions$.html#atan(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "asin", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.asin", "link" : "com\/snowflake\/snowpark\/functions$.html#asin(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "acos", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.acos", "link" : "com\/snowflake\/snowpark\/functions$.html#acos(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "abs", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.abs", "link" : "com\/snowflake\/snowpark\/functions$.html#abs(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sqrt", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.sqrt", "link" : "com\/snowflake\/snowpark\/functions$.html#sqrt(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "div0", "tail" : "(dividend: Column, divisor: Column): Column", "member" : "com.snowflake.snowpark.functions.div0", "link" : "com\/snowflake\/snowpark\/functions$.html#div0(dividend:com.snowflake.snowpark.Column,divisor:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "to_decimal", "tail" : "(expr: Column, precision: Int, scale: Int): Column", "member" : "com.snowflake.snowpark.functions.to_decimal", "link" : "com\/snowflake\/snowpark\/functions$.html#to_decimal(expr:com.snowflake.snowpark.Column,precision:Int,scale:Int):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "bitnot", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.bitnot", "link" : "com\/snowflake\/snowpark\/functions$.html#bitnot(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "random", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.random", "link" : "com\/snowflake\/snowpark\/functions$.html#random():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "random", "tail" : "(seed: Long): Column", "member" : "com.snowflake.snowpark.functions.random", "link" : "com\/snowflake\/snowpark\/functions$.html#random(seed:Long):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "not", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.not", "link" : "com\/snowflake\/snowpark\/functions$.html#not(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "negate", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.negate", "link" : "com\/snowflake\/snowpark\/functions$.html#negate(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "is_null", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.is_null", "link" : "com\/snowflake\/snowpark\/functions$.html#is_null(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "equal_nan", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.equal_nan", "link" : "com\/snowflake\/snowpark\/functions$.html#equal_nan(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "coalesce", "tail" : "(e: Column*): Column", "member" : "com.snowflake.snowpark.functions.coalesce", "link" : "com\/snowflake\/snowpark\/functions$.html#coalesce(e:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "row_number", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.row_number", "link" : "com\/snowflake\/snowpark\/functions$.html#row_number():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "rank", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.rank", "link" : "com\/snowflake\/snowpark\/functions$.html#rank():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "percent_rank", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.percent_rank", "link" : "com\/snowflake\/snowpark\/functions$.html#percent_rank():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "ntile", "tail" : "(n: Column): Column", "member" : "com.snowflake.snowpark.functions.ntile", "link" : "com\/snowflake\/snowpark\/functions$.html#ntile(n:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lead", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.lead", "link" : "com\/snowflake\/snowpark\/functions$.html#lead(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lead", "tail" : "(e: Column, offset: Int): Column", "member" : "com.snowflake.snowpark.functions.lead", "link" : "com\/snowflake\/snowpark\/functions$.html#lead(e:com.snowflake.snowpark.Column,offset:Int):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lead", "tail" : "(e: Column, offset: Int, defaultValue: Column): Column", "member" : "com.snowflake.snowpark.functions.lead", "link" : "com\/snowflake\/snowpark\/functions$.html#lead(e:com.snowflake.snowpark.Column,offset:Int,defaultValue:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lag", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.lag", "link" : "com\/snowflake\/snowpark\/functions$.html#lag(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lag", "tail" : "(e: Column, offset: Int): Column", "member" : "com.snowflake.snowpark.functions.lag", "link" : "com\/snowflake\/snowpark\/functions$.html#lag(e:com.snowflake.snowpark.Column,offset:Int):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lag", "tail" : "(e: Column, offset: Int, defaultValue: Column): Column", "member" : "com.snowflake.snowpark.functions.lag", "link" : "com\/snowflake\/snowpark\/functions$.html#lag(e:com.snowflake.snowpark.Column,offset:Int,defaultValue:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "dense_rank", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.dense_rank", "link" : "com\/snowflake\/snowpark\/functions$.html#dense_rank():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "cume_dist", "tail" : "(): Column", "member" : "com.snowflake.snowpark.functions.cume_dist", "link" : "com\/snowflake\/snowpark\/functions$.html#cume_dist():com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "approx_percentile_combine", "tail" : "(state: Column): Column", "member" : "com.snowflake.snowpark.functions.approx_percentile_combine", "link" : "com\/snowflake\/snowpark\/functions$.html#approx_percentile_combine(state:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "approx_percentile_estimate", "tail" : "(state: Column, percentile: Double): Column", "member" : "com.snowflake.snowpark.functions.approx_percentile_estimate", "link" : "com\/snowflake\/snowpark\/functions$.html#approx_percentile_estimate(state:com.snowflake.snowpark.Column,percentile:Double):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "approx_percentile_accumulate", "tail" : "(col: Column): Column", "member" : "com.snowflake.snowpark.functions.approx_percentile_accumulate", "link" : "com\/snowflake\/snowpark\/functions$.html#approx_percentile_accumulate(col:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "approx_percentile", "tail" : "(col: Column, percentile: Double): Column", "member" : "com.snowflake.snowpark.functions.approx_percentile", "link" : "com\/snowflake\/snowpark\/functions$.html#approx_percentile(col:com.snowflake.snowpark.Column,percentile:Double):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "var_pop", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.var_pop", "link" : "com\/snowflake\/snowpark\/functions$.html#var_pop(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "var_samp", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.var_samp", "link" : "com\/snowflake\/snowpark\/functions$.html#var_samp(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "variance", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.variance", "link" : "com\/snowflake\/snowpark\/functions$.html#variance(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sum_distinct", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.sum_distinct", "link" : "com\/snowflake\/snowpark\/functions$.html#sum_distinct(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sum", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.functions.sum", "link" : "com\/snowflake\/snowpark\/functions$.html#sum(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sum", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.sum", "link" : "com\/snowflake\/snowpark\/functions$.html#sum(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "stddev_pop", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.stddev_pop", "link" : "com\/snowflake\/snowpark\/functions$.html#stddev_pop(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "stddev_samp", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.stddev_samp", "link" : "com\/snowflake\/snowpark\/functions$.html#stddev_samp(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "stddev", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.stddev", "link" : "com\/snowflake\/snowpark\/functions$.html#stddev(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "skew", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.skew", "link" : "com\/snowflake\/snowpark\/functions$.html#skew(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "min", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.min", "link" : "com\/snowflake\/snowpark\/functions$.html#min(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "median", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.median", "link" : "com\/snowflake\/snowpark\/functions$.html#median(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "mean", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.mean", "link" : "com\/snowflake\/snowpark\/functions$.html#mean(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "any_value", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.any_value", "link" : "com\/snowflake\/snowpark\/functions$.html#any_value(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "max", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.max", "link" : "com\/snowflake\/snowpark\/functions$.html#max(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "kurtosis", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.kurtosis", "link" : "com\/snowflake\/snowpark\/functions$.html#kurtosis(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "grouping_id", "tail" : "(cols: Column*): Column", "member" : "com.snowflake.snowpark.functions.grouping_id", "link" : "com\/snowflake\/snowpark\/functions$.html#grouping_id(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "grouping", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.grouping", "link" : "com\/snowflake\/snowpark\/functions$.html#grouping(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "covar_samp", "tail" : "(column1: Column, column2: Column): Column", "member" : "com.snowflake.snowpark.functions.covar_samp", "link" : "com\/snowflake\/snowpark\/functions$.html#covar_samp(column1:com.snowflake.snowpark.Column,column2:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "covar_pop", "tail" : "(column1: Column, column2: Column): Column", "member" : "com.snowflake.snowpark.functions.covar_pop", "link" : "com\/snowflake\/snowpark\/functions$.html#covar_pop(column1:com.snowflake.snowpark.Column,column2:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "count_distinct", "tail" : "(expr: Column, exprs: Column*): Column", "member" : "com.snowflake.snowpark.functions.count_distinct", "link" : "com\/snowflake\/snowpark\/functions$.html#count_distinct(expr:com.snowflake.snowpark.Column,exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "count", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.count", "link" : "com\/snowflake\/snowpark\/functions$.html#count(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "corr", "tail" : "(column1: Column, column2: Column): Column", "member" : "com.snowflake.snowpark.functions.corr", "link" : "com\/snowflake\/snowpark\/functions$.html#corr(column1:com.snowflake.snowpark.Column,column2:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "avg", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.avg", "link" : "com\/snowflake\/snowpark\/functions$.html#avg(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "approx_count_distinct", "tail" : "(e: Column): Column", "member" : "com.snowflake.snowpark.functions.approx_count_distinct", "link" : "com\/snowflake\/snowpark\/functions$.html#approx_count_distinct(e:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sqlExpr", "tail" : "(sqlText: String): Column", "member" : "com.snowflake.snowpark.functions.sqlExpr", "link" : "com\/snowflake\/snowpark\/functions$.html#sqlExpr(sqlText:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "typedLit", "tail" : "(literal: T)(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Column", "member" : "com.snowflake.snowpark.functions.typedLit", "link" : "com\/snowflake\/snowpark\/functions$.html#typedLit[T](literal:T)(implicitevidence$1:reflect.runtime.universe.TypeTag[T]):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "lit", "tail" : "(literal: Any): Column", "member" : "com.snowflake.snowpark.functions.lit", "link" : "com\/snowflake\/snowpark\/functions$.html#lit(literal:Any):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "toScalar", "tail" : "(df: DataFrame): Column", "member" : "com.snowflake.snowpark.functions.toScalar", "link" : "com\/snowflake\/snowpark\/functions$.html#toScalar(df:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "col", "tail" : "(df: DataFrame): Column", "member" : "com.snowflake.snowpark.functions.col", "link" : "com\/snowflake\/snowpark\/functions$.html#col(df:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "column", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.functions.column", "link" : "com\/snowflake\/snowpark\/functions$.html#column(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "col", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.functions.col", "link" : "com\/snowflake\/snowpark\/functions$.html#col(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/functions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/functions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/functions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/functions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/functions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/functions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/functions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/functions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/functions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/functions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/functions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/functions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/functions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/functions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/functions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/functions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/functions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/functions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/functions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.GetResult", "shortDescription" : "Represents the results of downloading a file from a stage location to the local file system.", "members_case class" : [{"member" : "com.snowflake.snowpark.GetResult#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "com.snowflake.snowpark.GetResult.message", "link" : "com\/snowflake\/snowpark\/GetResult.html#message:String", "kind" : "val"}, {"label" : "encryption", "tail" : ": String", "member" : "com.snowflake.snowpark.GetResult.encryption", "link" : "com\/snowflake\/snowpark\/GetResult.html#encryption:String", "kind" : "val"}, {"label" : "status", "tail" : ": String", "member" : "com.snowflake.snowpark.GetResult.status", "link" : "com\/snowflake\/snowpark\/GetResult.html#status:String", "kind" : "val"}, {"label" : "sizeBytes", "tail" : ": Long", "member" : "com.snowflake.snowpark.GetResult.sizeBytes", "link" : "com\/snowflake\/snowpark\/GetResult.html#sizeBytes:Long", "kind" : "val"}, {"label" : "fileName", "tail" : ": String", "member" : "com.snowflake.snowpark.GetResult.fileName", "link" : "com\/snowflake\/snowpark\/GetResult.html#fileName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/GetResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/GetResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/GetResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/GetResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/GetResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/GetResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/GetResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/GetResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/GetResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/GetResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/GetResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/GetResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/GetResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/GetResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/GetResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/GetResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/GetResult.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.GroupingSets", "shortDescription" : "Constructors of GroupingSets object.", "object" : "com\/snowflake\/snowpark\/GroupingSets$.html", "members_object" : [{"label" : "apply", "tail" : "(set: Set[Column], sets: Set[Column]*): GroupingSets", "member" : "com.snowflake.snowpark.GroupingSets.apply", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#apply(set:Set[com.snowflake.snowpark.Column],sets:Set[com.snowflake.snowpark.Column]*):com.snowflake.snowpark.GroupingSets", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/GroupingSets$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "com.snowflake.snowpark.GroupingSets#<init>", "error" : "unsupported entity"}, {"label" : "sets", "tail" : ": Seq[Set[Column]]", "member" : "com.snowflake.snowpark.GroupingSets.sets", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#sets:Seq[Set[com.snowflake.snowpark.Column]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/GroupingSets.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/GroupingSets.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/GroupingSets.html", "kind" : "object"}, {"name" : "com.snowflake.snowpark.HasCachedResult", "shortDescription" : "A DataFrame that returns cached data.", "members_class" : [{"label" : "cacheResult", "tail" : "(): HasCachedResult", "member" : "com.snowflake.snowpark.HasCachedResult.cacheResult", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#cacheResult():com.snowflake.snowpark.HasCachedResult", "kind" : "def"}, {"label" : "withPlan", "tail" : "(plan: LogicalPlan): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withPlan", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#withPlan(plan:com.snowflake.snowpark.internal.analyzer.LogicalPlan):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "disambiguate", "tail" : "(lhs: DataFrame, rhs: DataFrame, joinType: JoinType, usingColumns: Seq[String]): (DataFrame, DataFrame)", "member" : "com.snowflake.snowpark.DataFrame.disambiguate", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#disambiguate(lhs:com.snowflake.snowpark.DataFrame,rhs:com.snowflake.snowpark.DataFrame,joinType:com.snowflake.snowpark.internal.analyzer.JoinType,usingColumns:Seq[String]):(com.snowflake.snowpark.DataFrame,com.snowflake.snowpark.DataFrame)", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column, path: String, outer: Boolean, recursive: Boolean, mode: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.flatten", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#flatten(input:com.snowflake.snowpark.Column,path:String,outer:Boolean,recursive:Boolean,mode:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.flatten", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#flatten(input:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "randomSplit", "tail" : "(weights: Array[Double]): Array[DataFrame]", "member" : "com.snowflake.snowpark.DataFrame.randomSplit", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#randomSplit(weights:Array[Double]):Array[com.snowflake.snowpark.DataFrame]", "kind" : "def"}, {"label" : "sample", "tail" : "(probabilityFraction: Double): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sample", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#sample(probabilityFraction:Double):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sample", "tail" : "(num: Long): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sample", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#sample(num:Long):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "stat", "tail" : ": DataFrameStatFunctions", "member" : "com.snowflake.snowpark.DataFrame.stat", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#stat:com.snowflake.snowpark.DataFrameStatFunctions", "kind" : "lazy val"}, {"label" : "na", "tail" : ": DataFrameNaFunctions", "member" : "com.snowflake.snowpark.DataFrame.na", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#na:com.snowflake.snowpark.DataFrameNaFunctions", "kind" : "lazy val"}, {"label" : "first", "tail" : "(n: Int): Array[Row]", "member" : "com.snowflake.snowpark.DataFrame.first", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#first(n:Int):Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "first", "tail" : "(): Option[Row]", "member" : "com.snowflake.snowpark.DataFrame.first", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#first():Option[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(multipartIdentifier: List[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#createOrReplaceTempView(multipartIdentifier:java.util.List[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(multipartIdentifier: Seq[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#createOrReplaceTempView(multipartIdentifier:Seq[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(viewName: String): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#createOrReplaceTempView(viewName:String):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(multipartIdentifier: List[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#createOrReplaceView(multipartIdentifier:java.util.List[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(multipartIdentifier: Seq[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#createOrReplaceView(multipartIdentifier:Seq[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(viewName: String): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#createOrReplaceView(viewName:String):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(n: Int, maxWidth: Int): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#show(n:Int,maxWidth:Int):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(n: Int): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#show(n:Int):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#show():Unit", "kind" : "def"}, {"label" : "async", "tail" : "(): DataFrameAsyncActor", "member" : "com.snowflake.snowpark.DataFrame.async", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#async:com.snowflake.snowpark.DataFrameAsyncActor", "kind" : "def"}, {"label" : "write", "tail" : "(): DataFrameWriter", "member" : "com.snowflake.snowpark.DataFrame.write", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#write:com.snowflake.snowpark.DataFrameWriter", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "com.snowflake.snowpark.DataFrame.count", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#count():Long", "kind" : "def"}, {"label" : "toLocalIterator", "tail" : "(): Iterator[Row]", "member" : "com.snowflake.snowpark.DataFrame.toLocalIterator", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#toLocalIterator:Iterator[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "collect", "tail" : "(): Array[Row]", "member" : "com.snowflake.snowpark.DataFrame.collect", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#collect():Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "rename", "tail" : "(newName: String, col: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.rename", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#rename(newName:String,col:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "withColumns", "tail" : "(colNames: Seq[String], values: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withColumns", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#withColumns(colNames:Seq[String],values:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "withColumn", "tail" : "(colName: String, col: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withColumn", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#withColumn(colName:String,col:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "naturalJoin", "tail" : "(right: DataFrame, joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.naturalJoin", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#naturalJoin(right:com.snowflake.snowpark.DataFrame,joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "naturalJoin", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.naturalJoin", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#naturalJoin(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "crossJoin", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.crossJoin", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#crossJoin(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: Column, partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(func:com.snowflake.snowpark.Column,partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(func:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Map[String, Column], partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(func:com.snowflake.snowpark.TableFunction,args:Map[String,com.snowflake.snowpark.Column],partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Map[String, Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(func:com.snowflake.snowpark.TableFunction,args:Map[String,com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Seq[Column], partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(func:com.snowflake.snowpark.TableFunction,args:Seq[com.snowflake.snowpark.Column],partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(func:com.snowflake.snowpark.TableFunction,args:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, firstArg: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(func:com.snowflake.snowpark.TableFunction,firstArg:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, joinExprs: Column, joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(right:com.snowflake.snowpark.DataFrame,joinExprs:com.snowflake.snowpark.Column,joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, joinExprs: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(right:com.snowflake.snowpark.DataFrame,joinExprs:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumns: Seq[String], joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(right:com.snowflake.snowpark.DataFrame,usingColumns:Seq[String],joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumns: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(right:com.snowflake.snowpark.DataFrame,usingColumns:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumn: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(right:com.snowflake.snowpark.DataFrame,usingColumn:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#join(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "except", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.except", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#except(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.intersect", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#intersect(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionAllByName", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionAllByName", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#unionAllByName(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionByName", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionByName", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#unionByName(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionAll", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionAll", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#unionAll(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "union", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.union", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#union(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "limit", "tail" : "(n: Int): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.limit", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#limit(n:Int):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "pivot", "tail" : "(pivotColumn: Column, values: Seq[Any]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.pivot", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#pivot(pivotColumn:com.snowflake.snowpark.Column,values:Seq[Any]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "pivot", "tail" : "(pivotColumn: String, values: Seq[Any]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.pivot", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#pivot(pivotColumn:String,values:Seq[Any]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "dropDuplicates", "tail" : "(colNames: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.dropDuplicates", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#dropDuplicates(colNames:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "distinct", "tail" : "(): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.distinct", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#distinct():com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#cube(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#cube(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#cube(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#cube[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$6:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#cube(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupByGroupingSets", "tail" : "(groupingSets: Seq[GroupingSets]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupByGroupingSets", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#groupByGroupingSets(groupingSets:Seq[com.snowflake.snowpark.GroupingSets]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupByGroupingSets", "tail" : "(first: GroupingSets, remaining: GroupingSets*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupByGroupingSets", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#groupByGroupingSets(first:com.snowflake.snowpark.GroupingSets,remaining:com.snowflake.snowpark.GroupingSets*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Array[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#groupBy(cols:Array[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#groupBy(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#groupBy(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#groupBy(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#groupBy[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$5:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#groupBy():com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#groupBy(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Array[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#rollup(cols:Array[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#rollup(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#rollup(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#rollup(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#rollup[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$4:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#rollup(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#agg(exprs:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#agg[T](exprs:Seq[com.snowflake.snowpark.Column])(implicitevidence$3:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(expr: Column, exprs: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#agg(expr:com.snowflake.snowpark.Column,exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Seq[(String, String)]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#agg(exprs:Seq[(String,String)]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(expr: (String, String), exprs: (String, String)*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#agg(expr:(String,String),exprs:(String,String)*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "where", "tail" : "(condition: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.where", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#where(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "filter", "tail" : "(condition: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.filter", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#filter(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(cols: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#drop(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#drop[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$2:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#drop(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(colNames: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#drop(colNames:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(colNames: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#drop(colNames:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#drop(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#select(columns:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#select(columns:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#select(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#select(columns:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#select[T](columns:Seq[com.snowflake.snowpark.Column])(implicitevidence$1:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#select(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "alias", "tail" : "(alias: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.alias", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#alias(alias:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "col", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.DataFrame.col", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#col(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "apply", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.DataFrame.apply", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#apply(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sort", "tail" : "(sortExprs: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#sort(sortExprs:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sort", "tail" : "(sortExprs: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#sort(sortExprs:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sort", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#sort(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(colNames: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#toDF(colNames:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(colNames: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#toDF(colNames:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#toDF(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "explain", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.DataFrame.explain", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#explain():Unit", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "com.snowflake.snowpark.DataFrame.schema", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#schema:com.snowflake.snowpark.types.StructType", "kind" : "lazy val"}, {"label" : "clone", "tail" : "(): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.clone", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#clone():com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/HasCachedResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/HasCachedResult.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.MatchedClauseBuilder", "shortDescription" : "Builder for a matched clause.", "members_class" : [{"label" : "delete", "tail" : "(): MergeBuilder", "member" : "com.snowflake.snowpark.MatchedClauseBuilder.delete", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#delete():com.snowflake.snowpark.MergeBuilder", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[Column, Column]): MergeBuilder", "member" : "com.snowflake.snowpark.MatchedClauseBuilder.update", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#update(assignments:Map[com.snowflake.snowpark.Column,com.snowflake.snowpark.Column]):com.snowflake.snowpark.MergeBuilder", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[String, Column])(arg0: ClassTag[T]): MergeBuilder", "member" : "com.snowflake.snowpark.MatchedClauseBuilder.update", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#update[T](assignments:Map[String,com.snowflake.snowpark.Column])(implicitevidence$2:scala.reflect.ClassTag[T]):com.snowflake.snowpark.MergeBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/MatchedClauseBuilder.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.MergeBuilder", "shortDescription" : "Builder for a merge action.", "members_class" : [{"label" : "async", "tail" : "(): MergeBuilderAsyncActor", "member" : "com.snowflake.snowpark.MergeBuilder.async", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#async:com.snowflake.snowpark.MergeBuilderAsyncActor", "kind" : "def"}, {"label" : "collect", "tail" : "(): MergeResult", "member" : "com.snowflake.snowpark.MergeBuilder.collect", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#collect():com.snowflake.snowpark.MergeResult", "kind" : "def"}, {"label" : "whenNotMatched", "tail" : "(condition: Column): NotMatchedClauseBuilder", "member" : "com.snowflake.snowpark.MergeBuilder.whenNotMatched", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#whenNotMatched(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.NotMatchedClauseBuilder", "kind" : "def"}, {"label" : "whenNotMatched", "tail" : "(): NotMatchedClauseBuilder", "member" : "com.snowflake.snowpark.MergeBuilder.whenNotMatched", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#whenNotMatched:com.snowflake.snowpark.NotMatchedClauseBuilder", "kind" : "def"}, {"label" : "whenMatched", "tail" : "(condition: Column): MatchedClauseBuilder", "member" : "com.snowflake.snowpark.MergeBuilder.whenMatched", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#whenMatched(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.MatchedClauseBuilder", "kind" : "def"}, {"label" : "whenMatched", "tail" : "(): MatchedClauseBuilder", "member" : "com.snowflake.snowpark.MergeBuilder.whenMatched", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#whenMatched:com.snowflake.snowpark.MatchedClauseBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/MergeBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/MergeBuilder.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.MergeBuilderAsyncActor", "shortDescription" : "Provides APIs to execute MergeBuilder actions asynchronously.", "members_class" : [{"label" : "collect", "tail" : "(): TypedAsyncJob[MergeResult]", "member" : "com.snowflake.snowpark.MergeBuilderAsyncActor.collect", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#collect():com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.MergeResult]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/MergeBuilderAsyncActor.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.MergeResult", "shortDescription" : "Result of merging a DataFrame into an Updatable DataFrame", "members_case class" : [{"member" : "com.snowflake.snowpark.MergeResult#<init>", "error" : "unsupported entity"}, {"label" : "rowsDeleted", "tail" : ": Long", "member" : "com.snowflake.snowpark.MergeResult.rowsDeleted", "link" : "com\/snowflake\/snowpark\/MergeResult.html#rowsDeleted:Long", "kind" : "val"}, {"label" : "rowsUpdated", "tail" : ": Long", "member" : "com.snowflake.snowpark.MergeResult.rowsUpdated", "link" : "com\/snowflake\/snowpark\/MergeResult.html#rowsUpdated:Long", "kind" : "val"}, {"label" : "rowsInserted", "tail" : ": Long", "member" : "com.snowflake.snowpark.MergeResult.rowsInserted", "link" : "com\/snowflake\/snowpark\/MergeResult.html#rowsInserted:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/MergeResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/MergeResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/MergeResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/MergeResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/MergeResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/MergeResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/MergeResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/MergeResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/MergeResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/MergeResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/MergeResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/MergeResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/MergeResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/MergeResult.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.MergeTypedAsyncJob", "shortDescription" : "Provides a way to track an asynchronously executed action in a MergeBuilder.", "members_class" : [{"label" : "getResult", "tail" : "(maxWaitTimeInSeconds: Int): MergeResult", "member" : "com.snowflake.snowpark.MergeTypedAsyncJob.getResult", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#getResult(maxWaitTimeInSeconds:Int):com.snowflake.snowpark.MergeResult", "kind" : "def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.AsyncJob.cancel", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#cancel():Unit", "kind" : "def"}, {"label" : "isDone", "tail" : "(): Boolean", "member" : "com.snowflake.snowpark.AsyncJob.isDone", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#isDone():Boolean", "kind" : "def"}, {"label" : "getRows", "tail" : "(maxWaitTimeInSeconds: Int): Array[Row]", "member" : "com.snowflake.snowpark.AsyncJob.getRows", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#getRows(maxWaitTimeInSeconds:Int):Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "getIterator", "tail" : "(maxWaitTimeInSeconds: Int): Iterator[Row]", "member" : "com.snowflake.snowpark.AsyncJob.getIterator", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#getIterator(maxWaitTimeInSeconds:Int):Iterator[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "getQueryId", "tail" : "(): String", "member" : "com.snowflake.snowpark.AsyncJob.getQueryId", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#getQueryId():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/MergeTypedAsyncJob.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.NotMatchedClauseBuilder", "shortDescription" : "Builder for a not matched clause.", "members_class" : [{"label" : "insert", "tail" : "(assignments: Map[Column, Column]): MergeBuilder", "member" : "com.snowflake.snowpark.NotMatchedClauseBuilder.insert", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#insert(assignments:Map[com.snowflake.snowpark.Column,com.snowflake.snowpark.Column]):com.snowflake.snowpark.MergeBuilder", "kind" : "def"}, {"label" : "insert", "tail" : "(assignments: Map[String, Column])(arg0: ClassTag[T]): MergeBuilder", "member" : "com.snowflake.snowpark.NotMatchedClauseBuilder.insert", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#insert[T](assignments:Map[String,com.snowflake.snowpark.Column])(implicitevidence$1:scala.reflect.ClassTag[T]):com.snowflake.snowpark.MergeBuilder", "kind" : "def"}, {"label" : "insert", "tail" : "(values: Seq[Column]): MergeBuilder", "member" : "com.snowflake.snowpark.NotMatchedClauseBuilder.insert", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#insert(values:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.MergeBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/NotMatchedClauseBuilder.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.PublicPreview", "shortDescription" : "", "members_class" : [{"member" : "com.snowflake.snowpark.PublicPreview#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/PublicPreview.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "annotationType", "tail" : "(): Class[_ <: Annotation]", "member" : "java.lang.annotation.Annotation.annotationType", "link" : "com\/snowflake\/snowpark\/PublicPreview.html#annotationType():Class[_<:java.lang.annotation.Annotation]", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/PublicPreview.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.PutResult", "shortDescription" : "Represents the results of uploading a local file to a stage location.", "members_case class" : [{"member" : "com.snowflake.snowpark.PutResult#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "com.snowflake.snowpark.PutResult.message", "link" : "com\/snowflake\/snowpark\/PutResult.html#message:String", "kind" : "val"}, {"label" : "encryption", "tail" : ": String", "member" : "com.snowflake.snowpark.PutResult.encryption", "link" : "com\/snowflake\/snowpark\/PutResult.html#encryption:String", "kind" : "val"}, {"label" : "status", "tail" : ": String", "member" : "com.snowflake.snowpark.PutResult.status", "link" : "com\/snowflake\/snowpark\/PutResult.html#status:String", "kind" : "val"}, {"label" : "targetCompression", "tail" : ": String", "member" : "com.snowflake.snowpark.PutResult.targetCompression", "link" : "com\/snowflake\/snowpark\/PutResult.html#targetCompression:String", "kind" : "val"}, {"label" : "sourceCompression", "tail" : ": String", "member" : "com.snowflake.snowpark.PutResult.sourceCompression", "link" : "com\/snowflake\/snowpark\/PutResult.html#sourceCompression:String", "kind" : "val"}, {"label" : "targetSizeBytes", "tail" : ": Long", "member" : "com.snowflake.snowpark.PutResult.targetSizeBytes", "link" : "com\/snowflake\/snowpark\/PutResult.html#targetSizeBytes:Long", "kind" : "val"}, {"label" : "sourceSizeBytes", "tail" : ": Long", "member" : "com.snowflake.snowpark.PutResult.sourceSizeBytes", "link" : "com\/snowflake\/snowpark\/PutResult.html#sourceSizeBytes:Long", "kind" : "val"}, {"label" : "targetFileName", "tail" : ": String", "member" : "com.snowflake.snowpark.PutResult.targetFileName", "link" : "com\/snowflake\/snowpark\/PutResult.html#targetFileName:String", "kind" : "val"}, {"label" : "sourceFileName", "tail" : ": String", "member" : "com.snowflake.snowpark.PutResult.sourceFileName", "link" : "com\/snowflake\/snowpark\/PutResult.html#sourceFileName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/PutResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/PutResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/PutResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/PutResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/PutResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/PutResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/PutResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/PutResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/PutResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/PutResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/PutResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/PutResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/PutResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/PutResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/PutResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/PutResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/PutResult.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.RelationalGroupedDataFrame", "shortDescription" : "Represents an underlying DataFrame with rows that are grouped bycommon values.", "members_class" : [{"label" : "builtin", "tail" : "(aggName: String)(cols: Column*): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.builtin", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#builtin(aggName:String)(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "count", "tail" : "(): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.count", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#count():com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "any_value", "tail" : "(cols: Column*): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.any_value", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#any_value(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "max", "tail" : "(cols: Column*): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.max", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#max(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "min", "tail" : "(cols: Column*): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.min", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#min(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "median", "tail" : "(cols: Column*): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.median", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#median(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sum", "tail" : "(cols: Column*): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.sum", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#sum(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "mean", "tail" : "(cols: Column*): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.mean", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#mean(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "avg", "tail" : "(cols: Column*): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.avg", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#avg(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Map[Column, String]): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.agg", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#agg(exprs:Map[com.snowflake.snowpark.Column,String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.agg", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#agg(exprs:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.agg", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#agg[T](exprs:Seq[com.snowflake.snowpark.Column])(implicitevidence$1:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(expr: Column, exprs: Column*): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.agg", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#agg(expr:com.snowflake.snowpark.Column,exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Seq[(Column, String)]): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.agg", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#agg(exprs:Seq[(com.snowflake.snowpark.Column,String)]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(expr: (Column, String), exprs: (Column, String)*): DataFrame", "member" : "com.snowflake.snowpark.RelationalGroupedDataFrame.agg", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#agg(expr:(com.snowflake.snowpark.Column,String),exprs:(com.snowflake.snowpark.Column,String)*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/RelationalGroupedDataFrame.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.Row", "shortDescription" : "", "object" : "com\/snowflake\/snowpark\/Row$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.Row.toString", "link" : "com\/snowflake\/snowpark\/Row.html#toString():String", "kind" : "def"}, {"label" : "getMapOfVariant", "tail" : "(index: Int): Map[String, Variant]", "member" : "com.snowflake.snowpark.Row.getMapOfVariant", "link" : "com\/snowflake\/snowpark\/Row.html#getMapOfVariant(index:Int):Map[String,com.snowflake.snowpark.types.Variant]", "kind" : "def"}, {"label" : "getSeqOfVariant", "tail" : "(index: Int): Seq[Variant]", "member" : "com.snowflake.snowpark.Row.getSeqOfVariant", "link" : "com\/snowflake\/snowpark\/Row.html#getSeqOfVariant(index:Int):Seq[com.snowflake.snowpark.types.Variant]", "kind" : "def"}, {"label" : "getGeometry", "tail" : "(index: Int): Geometry", "member" : "com.snowflake.snowpark.Row.getGeometry", "link" : "com\/snowflake\/snowpark\/Row.html#getGeometry(index:Int):com.snowflake.snowpark.types.Geometry", "kind" : "def"}, {"label" : "getGeography", "tail" : "(index: Int): Geography", "member" : "com.snowflake.snowpark.Row.getGeography", "link" : "com\/snowflake\/snowpark\/Row.html#getGeography(index:Int):com.snowflake.snowpark.types.Geography", "kind" : "def"}, {"label" : "getVariant", "tail" : "(index: Int): Variant", "member" : "com.snowflake.snowpark.Row.getVariant", "link" : "com\/snowflake\/snowpark\/Row.html#getVariant(index:Int):com.snowflake.snowpark.types.Variant", "kind" : "def"}, {"label" : "getTimestamp", "tail" : "(index: Int): Timestamp", "member" : "com.snowflake.snowpark.Row.getTimestamp", "link" : "com\/snowflake\/snowpark\/Row.html#getTimestamp(index:Int):java.sql.Timestamp", "kind" : "def"}, {"label" : "getTime", "tail" : "(index: Int): Time", "member" : "com.snowflake.snowpark.Row.getTime", "link" : "com\/snowflake\/snowpark\/Row.html#getTime(index:Int):java.sql.Time", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.snowflake.snowpark.Row.getDate", "link" : "com\/snowflake\/snowpark\/Row.html#getDate(index:Int):java.sql.Date", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.snowflake.snowpark.Row.getDecimal", "link" : "com\/snowflake\/snowpark\/Row.html#getDecimal(index:Int):java.math.BigDecimal", "kind" : "def"}, {"label" : "getBinary", "tail" : "(index: Int): Array[Byte]", "member" : "com.snowflake.snowpark.Row.getBinary", "link" : "com\/snowflake\/snowpark\/Row.html#getBinary(index:Int):Array[Byte]", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.snowflake.snowpark.Row.getString", "link" : "com\/snowflake\/snowpark\/Row.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.snowflake.snowpark.Row.getDouble", "link" : "com\/snowflake\/snowpark\/Row.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.snowflake.snowpark.Row.getFloat", "link" : "com\/snowflake\/snowpark\/Row.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.snowflake.snowpark.Row.getLong", "link" : "com\/snowflake\/snowpark\/Row.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Int", "member" : "com.snowflake.snowpark.Row.getInt", "link" : "com\/snowflake\/snowpark\/Row.html#getInt(index:Int):Int", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.snowflake.snowpark.Row.getShort", "link" : "com\/snowflake\/snowpark\/Row.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.snowflake.snowpark.Row.getByte", "link" : "com\/snowflake\/snowpark\/Row.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.snowflake.snowpark.Row.getBoolean", "link" : "com\/snowflake\/snowpark\/Row.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.snowflake.snowpark.Row.isNullAt", "link" : "com\/snowflake\/snowpark\/Row.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.snowflake.snowpark.Row.hashCode", "link" : "com\/snowflake\/snowpark\/Row.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.snowflake.snowpark.Row.equals", "link" : "com\/snowflake\/snowpark\/Row.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "com.snowflake.snowpark.Row.clone", "link" : "com\/snowflake\/snowpark\/Row.html#clone():AnyRef", "kind" : "def"}, {"label" : "copy", "tail" : "(): Row", "member" : "com.snowflake.snowpark.Row.copy", "link" : "com\/snowflake\/snowpark\/Row.html#copy():com.snowflake.snowpark.Row", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int): Any", "member" : "com.snowflake.snowpark.Row.get", "link" : "com\/snowflake\/snowpark\/Row.html#get(index:Int):Any", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): Any", "member" : "com.snowflake.snowpark.Row.apply", "link" : "com\/snowflake\/snowpark\/Row.html#apply(index:Int):Any", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.snowflake.snowpark.Row.length", "link" : "com\/snowflake\/snowpark\/Row.html#length:Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.snowflake.snowpark.Row.size", "link" : "com\/snowflake\/snowpark\/Row.html#size:Int", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Any]", "member" : "com.snowflake.snowpark.Row.toSeq", "link" : "com\/snowflake\/snowpark\/Row.html#toSeq:Seq[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/Row.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/Row.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/Row.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/Row.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/Row.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/Row.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/Row.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Row.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Row.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Row.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/Row.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/Row.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/Row.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/Row.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/Row.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromArray", "tail" : "(values: Array[Any]): Row", "member" : "com.snowflake.snowpark.Row.fromArray", "link" : "com\/snowflake\/snowpark\/Row$.html#fromArray(values:Array[Any]):com.snowflake.snowpark.Row", "kind" : "def"}, {"label" : "fromSeq", "tail" : "(values: Seq[Any]): Row", "member" : "com.snowflake.snowpark.Row.fromSeq", "link" : "com\/snowflake\/snowpark\/Row$.html#fromSeq(values:Seq[Any]):com.snowflake.snowpark.Row", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Any*): Row", "member" : "com.snowflake.snowpark.Row.apply", "link" : "com\/snowflake\/snowpark\/Row$.html#apply(values:Any*):com.snowflake.snowpark.Row", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/Row$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/Row$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/Row$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/Row$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/Row$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/Row$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/Row$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Row$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Row$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Row$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/Row$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/Row$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/Row$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/Row$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/Row$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/Row$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/Row$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/Row$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/Row$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/Row.html", "kind" : "object"}, {"name" : "com.snowflake.snowpark.SaveMode", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "com.snowflake.snowpark.SaveMode.toString", "link" : "com\/snowflake\/snowpark\/SaveMode.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/SaveMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/SaveMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/SaveMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/SaveMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/SaveMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/SaveMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/SaveMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SaveMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SaveMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SaveMode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/SaveMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/SaveMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/SaveMode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/SaveMode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/SaveMode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/SaveMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/SaveMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/SaveMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "SaveMode configures the behavior when data is written froma DataFrame to a data source using a DataFrameWriterinstance.", "object" : "com\/snowflake\/snowpark\/SaveMode$.html", "members_object" : [{"label" : "Ignore", "tail" : "", "member" : "com.snowflake.snowpark.SaveMode.Ignore", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#Ignore", "kind" : "object"}, {"label" : "ErrorIfExists", "tail" : "", "member" : "com.snowflake.snowpark.SaveMode.ErrorIfExists", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#ErrorIfExists", "kind" : "object"}, {"label" : "Overwrite", "tail" : "", "member" : "com.snowflake.snowpark.SaveMode.Overwrite", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#Overwrite", "kind" : "object"}, {"label" : "Append", "tail" : "", "member" : "com.snowflake.snowpark.SaveMode.Append", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#Append", "kind" : "object"}, {"label" : "apply", "tail" : "(mode: String): SaveMode", "member" : "com.snowflake.snowpark.SaveMode.apply", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#apply(mode:String):com.snowflake.snowpark.SaveMode", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/SaveMode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/SaveMode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/snowflake\/snowpark\/SaveMode.html", "kind" : "object"}, {"name" : "com.snowflake.snowpark.Session", "shortDescription" : "Establishes a connection with a Snowflake database and provides methods for creating DataFramesand accessing objects for working with files in stages.", "object" : "com\/snowflake\/snowpark\/Session$.html", "members_class" : [{"label" : "createAsyncJob", "tail" : "(queryID: String): AsyncJob", "member" : "com.snowflake.snowpark.Session.createAsyncJob", "link" : "com\/snowflake\/snowpark\/Session.html#createAsyncJob(queryID:String):com.snowflake.snowpark.AsyncJob", "kind" : "def"}, {"label" : "getSessionInfo", "tail" : "(): String", "member" : "com.snowflake.snowpark.Session.getSessionInfo", "link" : "com\/snowflake\/snowpark\/Session.html#getSessionInfo():String", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.Session.close", "link" : "com\/snowflake\/snowpark\/Session.html#close():Unit", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column, path: String, outer: Boolean, recursive: Boolean, mode: String): DataFrame", "member" : "com.snowflake.snowpark.Session.flatten", "link" : "com\/snowflake\/snowpark\/Session.html#flatten(input:com.snowflake.snowpark.Column,path:String,outer:Boolean,recursive:Boolean,mode:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column): DataFrame", "member" : "com.snowflake.snowpark.Session.flatten", "link" : "com\/snowflake\/snowpark\/Session.html#flatten(input:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "implicits", "tail" : "", "member" : "com.snowflake.snowpark.Session.implicits", "link" : "com\/snowflake\/snowpark\/Session.html#implicits", "kind" : "object"}, {"label" : "file", "tail" : ": FileOperation", "member" : "com.snowflake.snowpark.Session.file", "link" : "com\/snowflake\/snowpark\/Session.html#file:com.snowflake.snowpark.FileOperation", "kind" : "lazy val"}, {"label" : "sproc", "tail" : ": SProcRegistration", "member" : "com.snowflake.snowpark.Session.sproc", "link" : "com\/snowflake\/snowpark\/Session.html#sproc:com.snowflake.snowpark.SProcRegistration", "kind" : "lazy val"}, {"label" : "udtf", "tail" : ": UDTFRegistration", "member" : "com.snowflake.snowpark.Session.udtf", "link" : "com\/snowflake\/snowpark\/Session.html#udtf:com.snowflake.snowpark.UDTFRegistration", "kind" : "lazy val"}, {"label" : "udf", "tail" : ": UDFRegistration", "member" : "com.snowflake.snowpark.Session.udf", "link" : "com\/snowflake\/snowpark\/Session.html#udf:com.snowflake.snowpark.UDFRegistration", "kind" : "lazy val"}, {"label" : "getSessionStage", "tail" : "(): String", "member" : "com.snowflake.snowpark.Session.getSessionStage", "link" : "com\/snowflake\/snowpark\/Session.html#getSessionStage:String", "kind" : "def"}, {"label" : "getFullyQualifiedCurrentSchema", "tail" : "(): String", "member" : "com.snowflake.snowpark.Session.getFullyQualifiedCurrentSchema", "link" : "com\/snowflake\/snowpark\/Session.html#getFullyQualifiedCurrentSchema:String", "kind" : "def"}, {"label" : "getCurrentSchema", "tail" : "(): Option[String]", "member" : "com.snowflake.snowpark.Session.getCurrentSchema", "link" : "com\/snowflake\/snowpark\/Session.html#getCurrentSchema:Option[String]", "kind" : "def"}, {"label" : "getCurrentDatabase", "tail" : "(): Option[String]", "member" : "com.snowflake.snowpark.Session.getCurrentDatabase", "link" : "com\/snowflake\/snowpark\/Session.html#getCurrentDatabase:Option[String]", "kind" : "def"}, {"label" : "getDefaultSchema", "tail" : "(): Option[String]", "member" : "com.snowflake.snowpark.Session.getDefaultSchema", "link" : "com\/snowflake\/snowpark\/Session.html#getDefaultSchema:Option[String]", "kind" : "def"}, {"label" : "getDefaultDatabase", "tail" : "(): Option[String]", "member" : "com.snowflake.snowpark.Session.getDefaultDatabase", "link" : "com\/snowflake\/snowpark\/Session.html#getDefaultDatabase:Option[String]", "kind" : "def"}, {"label" : "read", "tail" : "(): DataFrameReader", "member" : "com.snowflake.snowpark.Session.read", "link" : "com\/snowflake\/snowpark\/Session.html#read:com.snowflake.snowpark.DataFrameReader", "kind" : "def"}, {"label" : "generator", "tail" : "(rowCount: Long, col: Column, cols: Column*): DataFrame", "member" : "com.snowflake.snowpark.Session.generator", "link" : "com\/snowflake\/snowpark\/Session.html#generator(rowCount:Long,col:com.snowflake.snowpark.Column,cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "generator", "tail" : "(rowCount: Long, columns: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.Session.generator", "link" : "com\/snowflake\/snowpark\/Session.html#generator(rowCount:Long,columns:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sql", "tail" : "(query: String): DataFrame", "member" : "com.snowflake.snowpark.Session.sql", "link" : "com\/snowflake\/snowpark\/Session.html#sql(query:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "range", "tail" : "(start: Long, end: Long): DataFrame", "member" : "com.snowflake.snowpark.Session.range", "link" : "com\/snowflake\/snowpark\/Session.html#range(start:Long,end:Long):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "range", "tail" : "(end: Long): DataFrame", "member" : "com.snowflake.snowpark.Session.range", "link" : "com\/snowflake\/snowpark\/Session.html#range(end:Long):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "range", "tail" : "(start: Long, end: Long, step: Long): DataFrame", "member" : "com.snowflake.snowpark.Session.range", "link" : "com\/snowflake\/snowpark\/Session.html#range(start:Long,end:Long,step:Long):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "createDataFrame", "tail" : "(data: Array[Row], schema: StructType): DataFrame", "member" : "com.snowflake.snowpark.Session.createDataFrame", "link" : "com\/snowflake\/snowpark\/Session.html#createDataFrame(data:Array[com.snowflake.snowpark.Row],schema:com.snowflake.snowpark.types.StructType):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "createDataFrame", "tail" : "(data: Seq[Row], schema: StructType): DataFrame", "member" : "com.snowflake.snowpark.Session.createDataFrame", "link" : "com\/snowflake\/snowpark\/Session.html#createDataFrame(data:Seq[com.snowflake.snowpark.Row],schema:com.snowflake.snowpark.types.StructType):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "createDataFrame", "tail" : "(data: Seq[T])(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): DataFrame", "member" : "com.snowflake.snowpark.Session.createDataFrame", "link" : "com\/snowflake\/snowpark\/Session.html#createDataFrame[T](data:Seq[T])(implicitevidence$1:reflect.runtime.universe.TypeTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "storedProcedure", "tail" : "(sp: StoredProcedure, args: Any*): DataFrame", "member" : "com.snowflake.snowpark.Session.storedProcedure", "link" : "com\/snowflake\/snowpark\/Session.html#storedProcedure(sp:com.snowflake.snowpark.StoredProcedure,args:Any*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "storedProcedure", "tail" : "(spName: String, args: Any*): DataFrame", "member" : "com.snowflake.snowpark.Session.storedProcedure", "link" : "com\/snowflake\/snowpark\/Session.html#storedProcedure(spName:String,args:Any*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "tableFunction", "tail" : "(func: Column): DataFrame", "member" : "com.snowflake.snowpark.Session.tableFunction", "link" : "com\/snowflake\/snowpark\/Session.html#tableFunction(func:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "tableFunction", "tail" : "(func: TableFunction, args: Map[String, Column]): DataFrame", "member" : "com.snowflake.snowpark.Session.tableFunction", "link" : "com\/snowflake\/snowpark\/Session.html#tableFunction(func:com.snowflake.snowpark.TableFunction,args:Map[String,com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "tableFunction", "tail" : "(func: TableFunction, args: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.Session.tableFunction", "link" : "com\/snowflake\/snowpark\/Session.html#tableFunction(func:com.snowflake.snowpark.TableFunction,args:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "tableFunction", "tail" : "(func: TableFunction, firstArg: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.Session.tableFunction", "link" : "com\/snowflake\/snowpark\/Session.html#tableFunction(func:com.snowflake.snowpark.TableFunction,firstArg:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "table", "tail" : "(multipartIdentifier: Array[String]): Updatable", "member" : "com.snowflake.snowpark.Session.table", "link" : "com\/snowflake\/snowpark\/Session.html#table(multipartIdentifier:Array[String]):com.snowflake.snowpark.Updatable", "kind" : "def"}, {"label" : "table", "tail" : "(multipartIdentifier: List[String]): Updatable", "member" : "com.snowflake.snowpark.Session.table", "link" : "com\/snowflake\/snowpark\/Session.html#table(multipartIdentifier:java.util.List[String]):com.snowflake.snowpark.Updatable", "kind" : "def"}, {"label" : "table", "tail" : "(multipartIdentifier: Seq[String]): Updatable", "member" : "com.snowflake.snowpark.Session.table", "link" : "com\/snowflake\/snowpark\/Session.html#table(multipartIdentifier:Seq[String]):com.snowflake.snowpark.Updatable", "kind" : "def"}, {"label" : "table", "tail" : "(name: String): Updatable", "member" : "com.snowflake.snowpark.Session.table", "link" : "com\/snowflake\/snowpark\/Session.html#table(name:String):com.snowflake.snowpark.Updatable", "kind" : "def"}, {"label" : "getQueryTag", "tail" : "(): Option[String]", "member" : "com.snowflake.snowpark.Session.getQueryTag", "link" : "com\/snowflake\/snowpark\/Session.html#getQueryTag():Option[String]", "kind" : "def"}, {"label" : "unsetQueryTag", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.Session.unsetQueryTag", "link" : "com\/snowflake\/snowpark\/Session.html#unsetQueryTag():Unit", "kind" : "def"}, {"label" : "setQueryTag", "tail" : "(queryTag: String): Unit", "member" : "com.snowflake.snowpark.Session.setQueryTag", "link" : "com\/snowflake\/snowpark\/Session.html#setQueryTag(queryTag:String):Unit", "kind" : "def"}, {"label" : "removeDependency", "tail" : "(path: String): Unit", "member" : "com.snowflake.snowpark.Session.removeDependency", "link" : "com\/snowflake\/snowpark\/Session.html#removeDependency(path:String):Unit", "kind" : "def"}, {"label" : "addDependency", "tail" : "(path: String): Unit", "member" : "com.snowflake.snowpark.Session.addDependency", "link" : "com\/snowflake\/snowpark\/Session.html#addDependency(path:String):Unit", "kind" : "def"}, {"label" : "jdbcConnection", "tail" : "(): Connection", "member" : "com.snowflake.snowpark.Session.jdbcConnection", "link" : "com\/snowflake\/snowpark\/Session.html#jdbcConnection:java.sql.Connection", "kind" : "def"}, {"label" : "getDependenciesAsJavaSet", "tail" : "(): Set[URI]", "member" : "com.snowflake.snowpark.Session.getDependenciesAsJavaSet", "link" : "com\/snowflake\/snowpark\/Session.html#getDependenciesAsJavaSet:java.util.Set[java.net.URI]", "kind" : "def"}, {"label" : "getDependencies", "tail" : "(): Set[URI]", "member" : "com.snowflake.snowpark.Session.getDependencies", "link" : "com\/snowflake\/snowpark\/Session.html#getDependencies:scala.collection.Set[java.net.URI]", "kind" : "def"}, {"label" : "cancelAll", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.Session.cancelAll", "link" : "com\/snowflake\/snowpark\/Session.html#cancelAll():Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/Session.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/Session.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/Session.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/Session.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/Session.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/Session.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/Session.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/Session.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/Session.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/Session.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/Session.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/Session.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/Session.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/Session.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/Session.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/Session.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/Session.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/Session.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Session.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Session.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Session.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/Session.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/Session.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/Session.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/Session.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/Session.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/Session.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/Session.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/Session.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/Session.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "SessionBuilder", "tail" : "", "member" : "com.snowflake.snowpark.Session.SessionBuilder", "link" : "com\/snowflake\/snowpark\/Session$.html#SessionBuilderextendsAnyRef", "kind" : "class"}, {"label" : "builder", "tail" : "(): SessionBuilder", "member" : "com.snowflake.snowpark.Session.builder", "link" : "com\/snowflake\/snowpark\/Session$.html#builder:com.snowflake.snowpark.Session.SessionBuilder", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/Session$.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/Session$.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/Session$.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/Session$.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/Session$.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/Session$.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/Session$.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/Session$.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/Session$.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/Session$.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/Session$.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/Session$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/Session$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/Session$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/Session$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/Session$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/Session$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/Session$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Session$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Session$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Session$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/Session$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/Session$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/Session$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/Session$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/Session$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/Session$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/Session$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/Session$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/Session$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/Session.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.SnowparkClientException", "shortDescription" : "Represents a Snowpark client side exception.", "members_class" : [{"label" : "telemetryMessage", "tail" : ": String", "member" : "com.snowflake.snowpark.SnowparkClientException.telemetryMessage", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#telemetryMessage:String", "kind" : "val"}, {"label" : "errorCode", "tail" : ": String", "member" : "com.snowflake.snowpark.SnowparkClientException.errorCode", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#errorCode:String", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.snowflake.snowpark.SnowparkClientException.message", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#message:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/SnowparkClientException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/SnowparkClientException.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.SProcRegistration", "shortDescription" : "Provides methods to register a SProc (Stored Procedure) in the Snowflake database.", "members_class" : [{"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11, a12: A12, a13: A13, a14: A14, a15: A15, a16: A16, a17: A17, a18: A18, a19: A19, a20: A20, a21: A21)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11,a12:A12,a13:A13,a14:A14,a15:A15,a16:A16,a17:A17,a18:A18,a19:A19,a20:A20,a21:A21)(implicitevidence$991:reflect.runtime.universe.TypeTag[RT],implicitevidence$992:reflect.runtime.universe.TypeTag[A1],implicitevidence$993:reflect.runtime.universe.TypeTag[A2],implicitevidence$994:reflect.runtime.universe.TypeTag[A3],implicitevidence$995:reflect.runtime.universe.TypeTag[A4],implicitevidence$996:reflect.runtime.universe.TypeTag[A5],implicitevidence$997:reflect.runtime.universe.TypeTag[A6],implicitevidence$998:reflect.runtime.universe.TypeTag[A7],implicitevidence$999:reflect.runtime.universe.TypeTag[A8],implicitevidence$1000:reflect.runtime.universe.TypeTag[A9],implicitevidence$1001:reflect.runtime.universe.TypeTag[A10],implicitevidence$1002:reflect.runtime.universe.TypeTag[A11],implicitevidence$1003:reflect.runtime.universe.TypeTag[A12],implicitevidence$1004:reflect.runtime.universe.TypeTag[A13],implicitevidence$1005:reflect.runtime.universe.TypeTag[A14],implicitevidence$1006:reflect.runtime.universe.TypeTag[A15],implicitevidence$1007:reflect.runtime.universe.TypeTag[A16],implicitevidence$1008:reflect.runtime.universe.TypeTag[A17],implicitevidence$1009:reflect.runtime.universe.TypeTag[A18],implicitevidence$1010:reflect.runtime.universe.TypeTag[A19],implicitevidence$1011:reflect.runtime.universe.TypeTag[A20],implicitevidence$1012:reflect.runtime.universe.TypeTag[A21]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11, a12: A12, a13: A13, a14: A14, a15: A15, a16: A16, a17: A17, a18: A18, a19: A19, a20: A20)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11,a12:A12,a13:A13,a14:A14,a15:A15,a16:A16,a17:A17,a18:A18,a19:A19,a20:A20)(implicitevidence$970:reflect.runtime.universe.TypeTag[RT],implicitevidence$971:reflect.runtime.universe.TypeTag[A1],implicitevidence$972:reflect.runtime.universe.TypeTag[A2],implicitevidence$973:reflect.runtime.universe.TypeTag[A3],implicitevidence$974:reflect.runtime.universe.TypeTag[A4],implicitevidence$975:reflect.runtime.universe.TypeTag[A5],implicitevidence$976:reflect.runtime.universe.TypeTag[A6],implicitevidence$977:reflect.runtime.universe.TypeTag[A7],implicitevidence$978:reflect.runtime.universe.TypeTag[A8],implicitevidence$979:reflect.runtime.universe.TypeTag[A9],implicitevidence$980:reflect.runtime.universe.TypeTag[A10],implicitevidence$981:reflect.runtime.universe.TypeTag[A11],implicitevidence$982:reflect.runtime.universe.TypeTag[A12],implicitevidence$983:reflect.runtime.universe.TypeTag[A13],implicitevidence$984:reflect.runtime.universe.TypeTag[A14],implicitevidence$985:reflect.runtime.universe.TypeTag[A15],implicitevidence$986:reflect.runtime.universe.TypeTag[A16],implicitevidence$987:reflect.runtime.universe.TypeTag[A17],implicitevidence$988:reflect.runtime.universe.TypeTag[A18],implicitevidence$989:reflect.runtime.universe.TypeTag[A19],implicitevidence$990:reflect.runtime.universe.TypeTag[A20]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11, a12: A12, a13: A13, a14: A14, a15: A15, a16: A16, a17: A17, a18: A18, a19: A19)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11,a12:A12,a13:A13,a14:A14,a15:A15,a16:A16,a17:A17,a18:A18,a19:A19)(implicitevidence$950:reflect.runtime.universe.TypeTag[RT],implicitevidence$951:reflect.runtime.universe.TypeTag[A1],implicitevidence$952:reflect.runtime.universe.TypeTag[A2],implicitevidence$953:reflect.runtime.universe.TypeTag[A3],implicitevidence$954:reflect.runtime.universe.TypeTag[A4],implicitevidence$955:reflect.runtime.universe.TypeTag[A5],implicitevidence$956:reflect.runtime.universe.TypeTag[A6],implicitevidence$957:reflect.runtime.universe.TypeTag[A7],implicitevidence$958:reflect.runtime.universe.TypeTag[A8],implicitevidence$959:reflect.runtime.universe.TypeTag[A9],implicitevidence$960:reflect.runtime.universe.TypeTag[A10],implicitevidence$961:reflect.runtime.universe.TypeTag[A11],implicitevidence$962:reflect.runtime.universe.TypeTag[A12],implicitevidence$963:reflect.runtime.universe.TypeTag[A13],implicitevidence$964:reflect.runtime.universe.TypeTag[A14],implicitevidence$965:reflect.runtime.universe.TypeTag[A15],implicitevidence$966:reflect.runtime.universe.TypeTag[A16],implicitevidence$967:reflect.runtime.universe.TypeTag[A17],implicitevidence$968:reflect.runtime.universe.TypeTag[A18],implicitevidence$969:reflect.runtime.universe.TypeTag[A19]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11, a12: A12, a13: A13, a14: A14, a15: A15, a16: A16, a17: A17, a18: A18)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11,a12:A12,a13:A13,a14:A14,a15:A15,a16:A16,a17:A17,a18:A18)(implicitevidence$931:reflect.runtime.universe.TypeTag[RT],implicitevidence$932:reflect.runtime.universe.TypeTag[A1],implicitevidence$933:reflect.runtime.universe.TypeTag[A2],implicitevidence$934:reflect.runtime.universe.TypeTag[A3],implicitevidence$935:reflect.runtime.universe.TypeTag[A4],implicitevidence$936:reflect.runtime.universe.TypeTag[A5],implicitevidence$937:reflect.runtime.universe.TypeTag[A6],implicitevidence$938:reflect.runtime.universe.TypeTag[A7],implicitevidence$939:reflect.runtime.universe.TypeTag[A8],implicitevidence$940:reflect.runtime.universe.TypeTag[A9],implicitevidence$941:reflect.runtime.universe.TypeTag[A10],implicitevidence$942:reflect.runtime.universe.TypeTag[A11],implicitevidence$943:reflect.runtime.universe.TypeTag[A12],implicitevidence$944:reflect.runtime.universe.TypeTag[A13],implicitevidence$945:reflect.runtime.universe.TypeTag[A14],implicitevidence$946:reflect.runtime.universe.TypeTag[A15],implicitevidence$947:reflect.runtime.universe.TypeTag[A16],implicitevidence$948:reflect.runtime.universe.TypeTag[A17],implicitevidence$949:reflect.runtime.universe.TypeTag[A18]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11, a12: A12, a13: A13, a14: A14, a15: A15, a16: A16, a17: A17)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11,a12:A12,a13:A13,a14:A14,a15:A15,a16:A16,a17:A17)(implicitevidence$913:reflect.runtime.universe.TypeTag[RT],implicitevidence$914:reflect.runtime.universe.TypeTag[A1],implicitevidence$915:reflect.runtime.universe.TypeTag[A2],implicitevidence$916:reflect.runtime.universe.TypeTag[A3],implicitevidence$917:reflect.runtime.universe.TypeTag[A4],implicitevidence$918:reflect.runtime.universe.TypeTag[A5],implicitevidence$919:reflect.runtime.universe.TypeTag[A6],implicitevidence$920:reflect.runtime.universe.TypeTag[A7],implicitevidence$921:reflect.runtime.universe.TypeTag[A8],implicitevidence$922:reflect.runtime.universe.TypeTag[A9],implicitevidence$923:reflect.runtime.universe.TypeTag[A10],implicitevidence$924:reflect.runtime.universe.TypeTag[A11],implicitevidence$925:reflect.runtime.universe.TypeTag[A12],implicitevidence$926:reflect.runtime.universe.TypeTag[A13],implicitevidence$927:reflect.runtime.universe.TypeTag[A14],implicitevidence$928:reflect.runtime.universe.TypeTag[A15],implicitevidence$929:reflect.runtime.universe.TypeTag[A16],implicitevidence$930:reflect.runtime.universe.TypeTag[A17]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11, a12: A12, a13: A13, a14: A14, a15: A15, a16: A16)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11,a12:A12,a13:A13,a14:A14,a15:A15,a16:A16)(implicitevidence$896:reflect.runtime.universe.TypeTag[RT],implicitevidence$897:reflect.runtime.universe.TypeTag[A1],implicitevidence$898:reflect.runtime.universe.TypeTag[A2],implicitevidence$899:reflect.runtime.universe.TypeTag[A3],implicitevidence$900:reflect.runtime.universe.TypeTag[A4],implicitevidence$901:reflect.runtime.universe.TypeTag[A5],implicitevidence$902:reflect.runtime.universe.TypeTag[A6],implicitevidence$903:reflect.runtime.universe.TypeTag[A7],implicitevidence$904:reflect.runtime.universe.TypeTag[A8],implicitevidence$905:reflect.runtime.universe.TypeTag[A9],implicitevidence$906:reflect.runtime.universe.TypeTag[A10],implicitevidence$907:reflect.runtime.universe.TypeTag[A11],implicitevidence$908:reflect.runtime.universe.TypeTag[A12],implicitevidence$909:reflect.runtime.universe.TypeTag[A13],implicitevidence$910:reflect.runtime.universe.TypeTag[A14],implicitevidence$911:reflect.runtime.universe.TypeTag[A15],implicitevidence$912:reflect.runtime.universe.TypeTag[A16]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11, a12: A12, a13: A13, a14: A14, a15: A15)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11,a12:A12,a13:A13,a14:A14,a15:A15)(implicitevidence$880:reflect.runtime.universe.TypeTag[RT],implicitevidence$881:reflect.runtime.universe.TypeTag[A1],implicitevidence$882:reflect.runtime.universe.TypeTag[A2],implicitevidence$883:reflect.runtime.universe.TypeTag[A3],implicitevidence$884:reflect.runtime.universe.TypeTag[A4],implicitevidence$885:reflect.runtime.universe.TypeTag[A5],implicitevidence$886:reflect.runtime.universe.TypeTag[A6],implicitevidence$887:reflect.runtime.universe.TypeTag[A7],implicitevidence$888:reflect.runtime.universe.TypeTag[A8],implicitevidence$889:reflect.runtime.universe.TypeTag[A9],implicitevidence$890:reflect.runtime.universe.TypeTag[A10],implicitevidence$891:reflect.runtime.universe.TypeTag[A11],implicitevidence$892:reflect.runtime.universe.TypeTag[A12],implicitevidence$893:reflect.runtime.universe.TypeTag[A13],implicitevidence$894:reflect.runtime.universe.TypeTag[A14],implicitevidence$895:reflect.runtime.universe.TypeTag[A15]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11, a12: A12, a13: A13, a14: A14)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11,a12:A12,a13:A13,a14:A14)(implicitevidence$865:reflect.runtime.universe.TypeTag[RT],implicitevidence$866:reflect.runtime.universe.TypeTag[A1],implicitevidence$867:reflect.runtime.universe.TypeTag[A2],implicitevidence$868:reflect.runtime.universe.TypeTag[A3],implicitevidence$869:reflect.runtime.universe.TypeTag[A4],implicitevidence$870:reflect.runtime.universe.TypeTag[A5],implicitevidence$871:reflect.runtime.universe.TypeTag[A6],implicitevidence$872:reflect.runtime.universe.TypeTag[A7],implicitevidence$873:reflect.runtime.universe.TypeTag[A8],implicitevidence$874:reflect.runtime.universe.TypeTag[A9],implicitevidence$875:reflect.runtime.universe.TypeTag[A10],implicitevidence$876:reflect.runtime.universe.TypeTag[A11],implicitevidence$877:reflect.runtime.universe.TypeTag[A12],implicitevidence$878:reflect.runtime.universe.TypeTag[A13],implicitevidence$879:reflect.runtime.universe.TypeTag[A14]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11, a12: A12, a13: A13)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11,a12:A12,a13:A13)(implicitevidence$851:reflect.runtime.universe.TypeTag[RT],implicitevidence$852:reflect.runtime.universe.TypeTag[A1],implicitevidence$853:reflect.runtime.universe.TypeTag[A2],implicitevidence$854:reflect.runtime.universe.TypeTag[A3],implicitevidence$855:reflect.runtime.universe.TypeTag[A4],implicitevidence$856:reflect.runtime.universe.TypeTag[A5],implicitevidence$857:reflect.runtime.universe.TypeTag[A6],implicitevidence$858:reflect.runtime.universe.TypeTag[A7],implicitevidence$859:reflect.runtime.universe.TypeTag[A8],implicitevidence$860:reflect.runtime.universe.TypeTag[A9],implicitevidence$861:reflect.runtime.universe.TypeTag[A10],implicitevidence$862:reflect.runtime.universe.TypeTag[A11],implicitevidence$863:reflect.runtime.universe.TypeTag[A12],implicitevidence$864:reflect.runtime.universe.TypeTag[A13]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11, a12: A12)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11,a12:A12)(implicitevidence$838:reflect.runtime.universe.TypeTag[RT],implicitevidence$839:reflect.runtime.universe.TypeTag[A1],implicitevidence$840:reflect.runtime.universe.TypeTag[A2],implicitevidence$841:reflect.runtime.universe.TypeTag[A3],implicitevidence$842:reflect.runtime.universe.TypeTag[A4],implicitevidence$843:reflect.runtime.universe.TypeTag[A5],implicitevidence$844:reflect.runtime.universe.TypeTag[A6],implicitevidence$845:reflect.runtime.universe.TypeTag[A7],implicitevidence$846:reflect.runtime.universe.TypeTag[A8],implicitevidence$847:reflect.runtime.universe.TypeTag[A9],implicitevidence$848:reflect.runtime.universe.TypeTag[A10],implicitevidence$849:reflect.runtime.universe.TypeTag[A11],implicitevidence$850:reflect.runtime.universe.TypeTag[A12]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10, a11: A11)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10,a11:A11)(implicitevidence$826:reflect.runtime.universe.TypeTag[RT],implicitevidence$827:reflect.runtime.universe.TypeTag[A1],implicitevidence$828:reflect.runtime.universe.TypeTag[A2],implicitevidence$829:reflect.runtime.universe.TypeTag[A3],implicitevidence$830:reflect.runtime.universe.TypeTag[A4],implicitevidence$831:reflect.runtime.universe.TypeTag[A5],implicitevidence$832:reflect.runtime.universe.TypeTag[A6],implicitevidence$833:reflect.runtime.universe.TypeTag[A7],implicitevidence$834:reflect.runtime.universe.TypeTag[A8],implicitevidence$835:reflect.runtime.universe.TypeTag[A9],implicitevidence$836:reflect.runtime.universe.TypeTag[A10],implicitevidence$837:reflect.runtime.universe.TypeTag[A11]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9,a10:A10)(implicitevidence$815:reflect.runtime.universe.TypeTag[RT],implicitevidence$816:reflect.runtime.universe.TypeTag[A1],implicitevidence$817:reflect.runtime.universe.TypeTag[A2],implicitevidence$818:reflect.runtime.universe.TypeTag[A3],implicitevidence$819:reflect.runtime.universe.TypeTag[A4],implicitevidence$820:reflect.runtime.universe.TypeTag[A5],implicitevidence$821:reflect.runtime.universe.TypeTag[A6],implicitevidence$822:reflect.runtime.universe.TypeTag[A7],implicitevidence$823:reflect.runtime.universe.TypeTag[A8],implicitevidence$824:reflect.runtime.universe.TypeTag[A9],implicitevidence$825:reflect.runtime.universe.TypeTag[A10]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8,a9:A9)(implicitevidence$805:reflect.runtime.universe.TypeTag[RT],implicitevidence$806:reflect.runtime.universe.TypeTag[A1],implicitevidence$807:reflect.runtime.universe.TypeTag[A2],implicitevidence$808:reflect.runtime.universe.TypeTag[A3],implicitevidence$809:reflect.runtime.universe.TypeTag[A4],implicitevidence$810:reflect.runtime.universe.TypeTag[A5],implicitevidence$811:reflect.runtime.universe.TypeTag[A6],implicitevidence$812:reflect.runtime.universe.TypeTag[A7],implicitevidence$813:reflect.runtime.universe.TypeTag[A8],implicitevidence$814:reflect.runtime.universe.TypeTag[A9]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7,A8](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7,a8:A8)(implicitevidence$796:reflect.runtime.universe.TypeTag[RT],implicitevidence$797:reflect.runtime.universe.TypeTag[A1],implicitevidence$798:reflect.runtime.universe.TypeTag[A2],implicitevidence$799:reflect.runtime.universe.TypeTag[A3],implicitevidence$800:reflect.runtime.universe.TypeTag[A4],implicitevidence$801:reflect.runtime.universe.TypeTag[A5],implicitevidence$802:reflect.runtime.universe.TypeTag[A6],implicitevidence$803:reflect.runtime.universe.TypeTag[A7],implicitevidence$804:reflect.runtime.universe.TypeTag[A8]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6,A7](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6,a7:A7)(implicitevidence$788:reflect.runtime.universe.TypeTag[RT],implicitevidence$789:reflect.runtime.universe.TypeTag[A1],implicitevidence$790:reflect.runtime.universe.TypeTag[A2],implicitevidence$791:reflect.runtime.universe.TypeTag[A3],implicitevidence$792:reflect.runtime.universe.TypeTag[A4],implicitevidence$793:reflect.runtime.universe.TypeTag[A5],implicitevidence$794:reflect.runtime.universe.TypeTag[A6],implicitevidence$795:reflect.runtime.universe.TypeTag[A7]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5,A6](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5,a6:A6)(implicitevidence$781:reflect.runtime.universe.TypeTag[RT],implicitevidence$782:reflect.runtime.universe.TypeTag[A1],implicitevidence$783:reflect.runtime.universe.TypeTag[A2],implicitevidence$784:reflect.runtime.universe.TypeTag[A3],implicitevidence$785:reflect.runtime.universe.TypeTag[A4],implicitevidence$786:reflect.runtime.universe.TypeTag[A5],implicitevidence$787:reflect.runtime.universe.TypeTag[A6]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4, A5) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4,A5](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5)=>RT,a1:A1,a2:A2,a3:A3,a4:A4,a5:A5)(implicitevidence$775:reflect.runtime.universe.TypeTag[RT],implicitevidence$776:reflect.runtime.universe.TypeTag[A1],implicitevidence$777:reflect.runtime.universe.TypeTag[A2],implicitevidence$778:reflect.runtime.universe.TypeTag[A3],implicitevidence$779:reflect.runtime.universe.TypeTag[A4],implicitevidence$780:reflect.runtime.universe.TypeTag[A5]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3, A4) ⇒ RT, a1: A1, a2: A2, a3: A3, a4: A4)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3,A4](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4)=>RT,a1:A1,a2:A2,a3:A3,a4:A4)(implicitevidence$770:reflect.runtime.universe.TypeTag[RT],implicitevidence$771:reflect.runtime.universe.TypeTag[A1],implicitevidence$772:reflect.runtime.universe.TypeTag[A2],implicitevidence$773:reflect.runtime.universe.TypeTag[A3],implicitevidence$774:reflect.runtime.universe.TypeTag[A4]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2, A3) ⇒ RT, a1: A1, a2: A2, a3: A3)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2,A3](sp:(com.snowflake.snowpark.Session,A1,A2,A3)=>RT,a1:A1,a2:A2,a3:A3)(implicitevidence$766:reflect.runtime.universe.TypeTag[RT],implicitevidence$767:reflect.runtime.universe.TypeTag[A1],implicitevidence$768:reflect.runtime.universe.TypeTag[A2],implicitevidence$769:reflect.runtime.universe.TypeTag[A3]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1, A2) ⇒ RT, a1: A1, a2: A2)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1,A2](sp:(com.snowflake.snowpark.Session,A1,A2)=>RT,a1:A1,a2:A2)(implicitevidence$763:reflect.runtime.universe.TypeTag[RT],implicitevidence$764:reflect.runtime.universe.TypeTag[A1],implicitevidence$765:reflect.runtime.universe.TypeTag[A2]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session, A1) ⇒ RT, a1: A1)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT,A1](sp:(com.snowflake.snowpark.Session,A1)=>RT,a1:A1)(implicitevidence$761:reflect.runtime.universe.TypeTag[RT],implicitevidence$762:reflect.runtime.universe.TypeTag[A1]):RT", "kind" : "def"}, {"label" : "runLocally", "tail" : "(sp: (Session) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT]): RT", "member" : "com.snowflake.snowpark.SProcRegistration.runLocally", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#runLocally[RT](sp:com.snowflake.snowpark.Session=>RT)(implicitevidence$760:reflect.runtime.universe.TypeTag[RT]):RT", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>RT)(implicitevidence$738:reflect.runtime.universe.TypeTag[RT],implicitevidence$739:reflect.runtime.universe.TypeTag[A1],implicitevidence$740:reflect.runtime.universe.TypeTag[A2],implicitevidence$741:reflect.runtime.universe.TypeTag[A3],implicitevidence$742:reflect.runtime.universe.TypeTag[A4],implicitevidence$743:reflect.runtime.universe.TypeTag[A5],implicitevidence$744:reflect.runtime.universe.TypeTag[A6],implicitevidence$745:reflect.runtime.universe.TypeTag[A7],implicitevidence$746:reflect.runtime.universe.TypeTag[A8],implicitevidence$747:reflect.runtime.universe.TypeTag[A9],implicitevidence$748:reflect.runtime.universe.TypeTag[A10],implicitevidence$749:reflect.runtime.universe.TypeTag[A11],implicitevidence$750:reflect.runtime.universe.TypeTag[A12],implicitevidence$751:reflect.runtime.universe.TypeTag[A13],implicitevidence$752:reflect.runtime.universe.TypeTag[A14],implicitevidence$753:reflect.runtime.universe.TypeTag[A15],implicitevidence$754:reflect.runtime.universe.TypeTag[A16],implicitevidence$755:reflect.runtime.universe.TypeTag[A17],implicitevidence$756:reflect.runtime.universe.TypeTag[A18],implicitevidence$757:reflect.runtime.universe.TypeTag[A19],implicitevidence$758:reflect.runtime.universe.TypeTag[A20],implicitevidence$759:reflect.runtime.universe.TypeTag[A21]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>RT)(implicitevidence$717:reflect.runtime.universe.TypeTag[RT],implicitevidence$718:reflect.runtime.universe.TypeTag[A1],implicitevidence$719:reflect.runtime.universe.TypeTag[A2],implicitevidence$720:reflect.runtime.universe.TypeTag[A3],implicitevidence$721:reflect.runtime.universe.TypeTag[A4],implicitevidence$722:reflect.runtime.universe.TypeTag[A5],implicitevidence$723:reflect.runtime.universe.TypeTag[A6],implicitevidence$724:reflect.runtime.universe.TypeTag[A7],implicitevidence$725:reflect.runtime.universe.TypeTag[A8],implicitevidence$726:reflect.runtime.universe.TypeTag[A9],implicitevidence$727:reflect.runtime.universe.TypeTag[A10],implicitevidence$728:reflect.runtime.universe.TypeTag[A11],implicitevidence$729:reflect.runtime.universe.TypeTag[A12],implicitevidence$730:reflect.runtime.universe.TypeTag[A13],implicitevidence$731:reflect.runtime.universe.TypeTag[A14],implicitevidence$732:reflect.runtime.universe.TypeTag[A15],implicitevidence$733:reflect.runtime.universe.TypeTag[A16],implicitevidence$734:reflect.runtime.universe.TypeTag[A17],implicitevidence$735:reflect.runtime.universe.TypeTag[A18],implicitevidence$736:reflect.runtime.universe.TypeTag[A19],implicitevidence$737:reflect.runtime.universe.TypeTag[A20]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>RT)(implicitevidence$697:reflect.runtime.universe.TypeTag[RT],implicitevidence$698:reflect.runtime.universe.TypeTag[A1],implicitevidence$699:reflect.runtime.universe.TypeTag[A2],implicitevidence$700:reflect.runtime.universe.TypeTag[A3],implicitevidence$701:reflect.runtime.universe.TypeTag[A4],implicitevidence$702:reflect.runtime.universe.TypeTag[A5],implicitevidence$703:reflect.runtime.universe.TypeTag[A6],implicitevidence$704:reflect.runtime.universe.TypeTag[A7],implicitevidence$705:reflect.runtime.universe.TypeTag[A8],implicitevidence$706:reflect.runtime.universe.TypeTag[A9],implicitevidence$707:reflect.runtime.universe.TypeTag[A10],implicitevidence$708:reflect.runtime.universe.TypeTag[A11],implicitevidence$709:reflect.runtime.universe.TypeTag[A12],implicitevidence$710:reflect.runtime.universe.TypeTag[A13],implicitevidence$711:reflect.runtime.universe.TypeTag[A14],implicitevidence$712:reflect.runtime.universe.TypeTag[A15],implicitevidence$713:reflect.runtime.universe.TypeTag[A16],implicitevidence$714:reflect.runtime.universe.TypeTag[A17],implicitevidence$715:reflect.runtime.universe.TypeTag[A18],implicitevidence$716:reflect.runtime.universe.TypeTag[A19]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>RT)(implicitevidence$678:reflect.runtime.universe.TypeTag[RT],implicitevidence$679:reflect.runtime.universe.TypeTag[A1],implicitevidence$680:reflect.runtime.universe.TypeTag[A2],implicitevidence$681:reflect.runtime.universe.TypeTag[A3],implicitevidence$682:reflect.runtime.universe.TypeTag[A4],implicitevidence$683:reflect.runtime.universe.TypeTag[A5],implicitevidence$684:reflect.runtime.universe.TypeTag[A6],implicitevidence$685:reflect.runtime.universe.TypeTag[A7],implicitevidence$686:reflect.runtime.universe.TypeTag[A8],implicitevidence$687:reflect.runtime.universe.TypeTag[A9],implicitevidence$688:reflect.runtime.universe.TypeTag[A10],implicitevidence$689:reflect.runtime.universe.TypeTag[A11],implicitevidence$690:reflect.runtime.universe.TypeTag[A12],implicitevidence$691:reflect.runtime.universe.TypeTag[A13],implicitevidence$692:reflect.runtime.universe.TypeTag[A14],implicitevidence$693:reflect.runtime.universe.TypeTag[A15],implicitevidence$694:reflect.runtime.universe.TypeTag[A16],implicitevidence$695:reflect.runtime.universe.TypeTag[A17],implicitevidence$696:reflect.runtime.universe.TypeTag[A18]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>RT)(implicitevidence$660:reflect.runtime.universe.TypeTag[RT],implicitevidence$661:reflect.runtime.universe.TypeTag[A1],implicitevidence$662:reflect.runtime.universe.TypeTag[A2],implicitevidence$663:reflect.runtime.universe.TypeTag[A3],implicitevidence$664:reflect.runtime.universe.TypeTag[A4],implicitevidence$665:reflect.runtime.universe.TypeTag[A5],implicitevidence$666:reflect.runtime.universe.TypeTag[A6],implicitevidence$667:reflect.runtime.universe.TypeTag[A7],implicitevidence$668:reflect.runtime.universe.TypeTag[A8],implicitevidence$669:reflect.runtime.universe.TypeTag[A9],implicitevidence$670:reflect.runtime.universe.TypeTag[A10],implicitevidence$671:reflect.runtime.universe.TypeTag[A11],implicitevidence$672:reflect.runtime.universe.TypeTag[A12],implicitevidence$673:reflect.runtime.universe.TypeTag[A13],implicitevidence$674:reflect.runtime.universe.TypeTag[A14],implicitevidence$675:reflect.runtime.universe.TypeTag[A15],implicitevidence$676:reflect.runtime.universe.TypeTag[A16],implicitevidence$677:reflect.runtime.universe.TypeTag[A17]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>RT)(implicitevidence$643:reflect.runtime.universe.TypeTag[RT],implicitevidence$644:reflect.runtime.universe.TypeTag[A1],implicitevidence$645:reflect.runtime.universe.TypeTag[A2],implicitevidence$646:reflect.runtime.universe.TypeTag[A3],implicitevidence$647:reflect.runtime.universe.TypeTag[A4],implicitevidence$648:reflect.runtime.universe.TypeTag[A5],implicitevidence$649:reflect.runtime.universe.TypeTag[A6],implicitevidence$650:reflect.runtime.universe.TypeTag[A7],implicitevidence$651:reflect.runtime.universe.TypeTag[A8],implicitevidence$652:reflect.runtime.universe.TypeTag[A9],implicitevidence$653:reflect.runtime.universe.TypeTag[A10],implicitevidence$654:reflect.runtime.universe.TypeTag[A11],implicitevidence$655:reflect.runtime.universe.TypeTag[A12],implicitevidence$656:reflect.runtime.universe.TypeTag[A13],implicitevidence$657:reflect.runtime.universe.TypeTag[A14],implicitevidence$658:reflect.runtime.universe.TypeTag[A15],implicitevidence$659:reflect.runtime.universe.TypeTag[A16]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>RT)(implicitevidence$627:reflect.runtime.universe.TypeTag[RT],implicitevidence$628:reflect.runtime.universe.TypeTag[A1],implicitevidence$629:reflect.runtime.universe.TypeTag[A2],implicitevidence$630:reflect.runtime.universe.TypeTag[A3],implicitevidence$631:reflect.runtime.universe.TypeTag[A4],implicitevidence$632:reflect.runtime.universe.TypeTag[A5],implicitevidence$633:reflect.runtime.universe.TypeTag[A6],implicitevidence$634:reflect.runtime.universe.TypeTag[A7],implicitevidence$635:reflect.runtime.universe.TypeTag[A8],implicitevidence$636:reflect.runtime.universe.TypeTag[A9],implicitevidence$637:reflect.runtime.universe.TypeTag[A10],implicitevidence$638:reflect.runtime.universe.TypeTag[A11],implicitevidence$639:reflect.runtime.universe.TypeTag[A12],implicitevidence$640:reflect.runtime.universe.TypeTag[A13],implicitevidence$641:reflect.runtime.universe.TypeTag[A14],implicitevidence$642:reflect.runtime.universe.TypeTag[A15]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>RT)(implicitevidence$612:reflect.runtime.universe.TypeTag[RT],implicitevidence$613:reflect.runtime.universe.TypeTag[A1],implicitevidence$614:reflect.runtime.universe.TypeTag[A2],implicitevidence$615:reflect.runtime.universe.TypeTag[A3],implicitevidence$616:reflect.runtime.universe.TypeTag[A4],implicitevidence$617:reflect.runtime.universe.TypeTag[A5],implicitevidence$618:reflect.runtime.universe.TypeTag[A6],implicitevidence$619:reflect.runtime.universe.TypeTag[A7],implicitevidence$620:reflect.runtime.universe.TypeTag[A8],implicitevidence$621:reflect.runtime.universe.TypeTag[A9],implicitevidence$622:reflect.runtime.universe.TypeTag[A10],implicitevidence$623:reflect.runtime.universe.TypeTag[A11],implicitevidence$624:reflect.runtime.universe.TypeTag[A12],implicitevidence$625:reflect.runtime.universe.TypeTag[A13],implicitevidence$626:reflect.runtime.universe.TypeTag[A14]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>RT)(implicitevidence$598:reflect.runtime.universe.TypeTag[RT],implicitevidence$599:reflect.runtime.universe.TypeTag[A1],implicitevidence$600:reflect.runtime.universe.TypeTag[A2],implicitevidence$601:reflect.runtime.universe.TypeTag[A3],implicitevidence$602:reflect.runtime.universe.TypeTag[A4],implicitevidence$603:reflect.runtime.universe.TypeTag[A5],implicitevidence$604:reflect.runtime.universe.TypeTag[A6],implicitevidence$605:reflect.runtime.universe.TypeTag[A7],implicitevidence$606:reflect.runtime.universe.TypeTag[A8],implicitevidence$607:reflect.runtime.universe.TypeTag[A9],implicitevidence$608:reflect.runtime.universe.TypeTag[A10],implicitevidence$609:reflect.runtime.universe.TypeTag[A11],implicitevidence$610:reflect.runtime.universe.TypeTag[A12],implicitevidence$611:reflect.runtime.universe.TypeTag[A13]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>RT)(implicitevidence$585:reflect.runtime.universe.TypeTag[RT],implicitevidence$586:reflect.runtime.universe.TypeTag[A1],implicitevidence$587:reflect.runtime.universe.TypeTag[A2],implicitevidence$588:reflect.runtime.universe.TypeTag[A3],implicitevidence$589:reflect.runtime.universe.TypeTag[A4],implicitevidence$590:reflect.runtime.universe.TypeTag[A5],implicitevidence$591:reflect.runtime.universe.TypeTag[A6],implicitevidence$592:reflect.runtime.universe.TypeTag[A7],implicitevidence$593:reflect.runtime.universe.TypeTag[A8],implicitevidence$594:reflect.runtime.universe.TypeTag[A9],implicitevidence$595:reflect.runtime.universe.TypeTag[A10],implicitevidence$596:reflect.runtime.universe.TypeTag[A11],implicitevidence$597:reflect.runtime.universe.TypeTag[A12]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>RT)(implicitevidence$573:reflect.runtime.universe.TypeTag[RT],implicitevidence$574:reflect.runtime.universe.TypeTag[A1],implicitevidence$575:reflect.runtime.universe.TypeTag[A2],implicitevidence$576:reflect.runtime.universe.TypeTag[A3],implicitevidence$577:reflect.runtime.universe.TypeTag[A4],implicitevidence$578:reflect.runtime.universe.TypeTag[A5],implicitevidence$579:reflect.runtime.universe.TypeTag[A6],implicitevidence$580:reflect.runtime.universe.TypeTag[A7],implicitevidence$581:reflect.runtime.universe.TypeTag[A8],implicitevidence$582:reflect.runtime.universe.TypeTag[A9],implicitevidence$583:reflect.runtime.universe.TypeTag[A10],implicitevidence$584:reflect.runtime.universe.TypeTag[A11]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>RT)(implicitevidence$562:reflect.runtime.universe.TypeTag[RT],implicitevidence$563:reflect.runtime.universe.TypeTag[A1],implicitevidence$564:reflect.runtime.universe.TypeTag[A2],implicitevidence$565:reflect.runtime.universe.TypeTag[A3],implicitevidence$566:reflect.runtime.universe.TypeTag[A4],implicitevidence$567:reflect.runtime.universe.TypeTag[A5],implicitevidence$568:reflect.runtime.universe.TypeTag[A6],implicitevidence$569:reflect.runtime.universe.TypeTag[A7],implicitevidence$570:reflect.runtime.universe.TypeTag[A8],implicitevidence$571:reflect.runtime.universe.TypeTag[A9],implicitevidence$572:reflect.runtime.universe.TypeTag[A10]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>RT)(implicitevidence$552:reflect.runtime.universe.TypeTag[RT],implicitevidence$553:reflect.runtime.universe.TypeTag[A1],implicitevidence$554:reflect.runtime.universe.TypeTag[A2],implicitevidence$555:reflect.runtime.universe.TypeTag[A3],implicitevidence$556:reflect.runtime.universe.TypeTag[A4],implicitevidence$557:reflect.runtime.universe.TypeTag[A5],implicitevidence$558:reflect.runtime.universe.TypeTag[A6],implicitevidence$559:reflect.runtime.universe.TypeTag[A7],implicitevidence$560:reflect.runtime.universe.TypeTag[A8],implicitevidence$561:reflect.runtime.universe.TypeTag[A9]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8)=>RT)(implicitevidence$543:reflect.runtime.universe.TypeTag[RT],implicitevidence$544:reflect.runtime.universe.TypeTag[A1],implicitevidence$545:reflect.runtime.universe.TypeTag[A2],implicitevidence$546:reflect.runtime.universe.TypeTag[A3],implicitevidence$547:reflect.runtime.universe.TypeTag[A4],implicitevidence$548:reflect.runtime.universe.TypeTag[A5],implicitevidence$549:reflect.runtime.universe.TypeTag[A6],implicitevidence$550:reflect.runtime.universe.TypeTag[A7],implicitevidence$551:reflect.runtime.universe.TypeTag[A8]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7)=>RT)(implicitevidence$535:reflect.runtime.universe.TypeTag[RT],implicitevidence$536:reflect.runtime.universe.TypeTag[A1],implicitevidence$537:reflect.runtime.universe.TypeTag[A2],implicitevidence$538:reflect.runtime.universe.TypeTag[A3],implicitevidence$539:reflect.runtime.universe.TypeTag[A4],implicitevidence$540:reflect.runtime.universe.TypeTag[A5],implicitevidence$541:reflect.runtime.universe.TypeTag[A6],implicitevidence$542:reflect.runtime.universe.TypeTag[A7]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6)=>RT)(implicitevidence$528:reflect.runtime.universe.TypeTag[RT],implicitevidence$529:reflect.runtime.universe.TypeTag[A1],implicitevidence$530:reflect.runtime.universe.TypeTag[A2],implicitevidence$531:reflect.runtime.universe.TypeTag[A3],implicitevidence$532:reflect.runtime.universe.TypeTag[A4],implicitevidence$533:reflect.runtime.universe.TypeTag[A5],implicitevidence$534:reflect.runtime.universe.TypeTag[A6]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5)=>RT)(implicitevidence$522:reflect.runtime.universe.TypeTag[RT],implicitevidence$523:reflect.runtime.universe.TypeTag[A1],implicitevidence$524:reflect.runtime.universe.TypeTag[A2],implicitevidence$525:reflect.runtime.universe.TypeTag[A3],implicitevidence$526:reflect.runtime.universe.TypeTag[A4],implicitevidence$527:reflect.runtime.universe.TypeTag[A5]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4)=>RT)(implicitevidence$517:reflect.runtime.universe.TypeTag[RT],implicitevidence$518:reflect.runtime.universe.TypeTag[A1],implicitevidence$519:reflect.runtime.universe.TypeTag[A2],implicitevidence$520:reflect.runtime.universe.TypeTag[A3],implicitevidence$521:reflect.runtime.universe.TypeTag[A4]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2, A3) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3)=>RT)(implicitevidence$513:reflect.runtime.universe.TypeTag[RT],implicitevidence$514:reflect.runtime.universe.TypeTag[A1],implicitevidence$515:reflect.runtime.universe.TypeTag[A2],implicitevidence$516:reflect.runtime.universe.TypeTag[A3]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1, A2) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2](name:String,sp:(com.snowflake.snowpark.Session,A1,A2)=>RT)(implicitevidence$510:reflect.runtime.universe.TypeTag[RT],implicitevidence$511:reflect.runtime.universe.TypeTag[A1],implicitevidence$512:reflect.runtime.universe.TypeTag[A2]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session, A1) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1](name:String,sp:(com.snowflake.snowpark.Session,A1)=>RT)(implicitevidence$508:reflect.runtime.universe.TypeTag[RT],implicitevidence$509:reflect.runtime.universe.TypeTag[A1]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, sp: (Session) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT](name:String,sp:com.snowflake.snowpark.Session=>RT)(implicitevidence$507:reflect.runtime.universe.TypeTag[RT]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>RT)(implicitevidence$485:reflect.runtime.universe.TypeTag[RT],implicitevidence$486:reflect.runtime.universe.TypeTag[A1],implicitevidence$487:reflect.runtime.universe.TypeTag[A2],implicitevidence$488:reflect.runtime.universe.TypeTag[A3],implicitevidence$489:reflect.runtime.universe.TypeTag[A4],implicitevidence$490:reflect.runtime.universe.TypeTag[A5],implicitevidence$491:reflect.runtime.universe.TypeTag[A6],implicitevidence$492:reflect.runtime.universe.TypeTag[A7],implicitevidence$493:reflect.runtime.universe.TypeTag[A8],implicitevidence$494:reflect.runtime.universe.TypeTag[A9],implicitevidence$495:reflect.runtime.universe.TypeTag[A10],implicitevidence$496:reflect.runtime.universe.TypeTag[A11],implicitevidence$497:reflect.runtime.universe.TypeTag[A12],implicitevidence$498:reflect.runtime.universe.TypeTag[A13],implicitevidence$499:reflect.runtime.universe.TypeTag[A14],implicitevidence$500:reflect.runtime.universe.TypeTag[A15],implicitevidence$501:reflect.runtime.universe.TypeTag[A16],implicitevidence$502:reflect.runtime.universe.TypeTag[A17],implicitevidence$503:reflect.runtime.universe.TypeTag[A18],implicitevidence$504:reflect.runtime.universe.TypeTag[A19],implicitevidence$505:reflect.runtime.universe.TypeTag[A20],implicitevidence$506:reflect.runtime.universe.TypeTag[A21]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>RT)(implicitevidence$464:reflect.runtime.universe.TypeTag[RT],implicitevidence$465:reflect.runtime.universe.TypeTag[A1],implicitevidence$466:reflect.runtime.universe.TypeTag[A2],implicitevidence$467:reflect.runtime.universe.TypeTag[A3],implicitevidence$468:reflect.runtime.universe.TypeTag[A4],implicitevidence$469:reflect.runtime.universe.TypeTag[A5],implicitevidence$470:reflect.runtime.universe.TypeTag[A6],implicitevidence$471:reflect.runtime.universe.TypeTag[A7],implicitevidence$472:reflect.runtime.universe.TypeTag[A8],implicitevidence$473:reflect.runtime.universe.TypeTag[A9],implicitevidence$474:reflect.runtime.universe.TypeTag[A10],implicitevidence$475:reflect.runtime.universe.TypeTag[A11],implicitevidence$476:reflect.runtime.universe.TypeTag[A12],implicitevidence$477:reflect.runtime.universe.TypeTag[A13],implicitevidence$478:reflect.runtime.universe.TypeTag[A14],implicitevidence$479:reflect.runtime.universe.TypeTag[A15],implicitevidence$480:reflect.runtime.universe.TypeTag[A16],implicitevidence$481:reflect.runtime.universe.TypeTag[A17],implicitevidence$482:reflect.runtime.universe.TypeTag[A18],implicitevidence$483:reflect.runtime.universe.TypeTag[A19],implicitevidence$484:reflect.runtime.universe.TypeTag[A20]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>RT)(implicitevidence$444:reflect.runtime.universe.TypeTag[RT],implicitevidence$445:reflect.runtime.universe.TypeTag[A1],implicitevidence$446:reflect.runtime.universe.TypeTag[A2],implicitevidence$447:reflect.runtime.universe.TypeTag[A3],implicitevidence$448:reflect.runtime.universe.TypeTag[A4],implicitevidence$449:reflect.runtime.universe.TypeTag[A5],implicitevidence$450:reflect.runtime.universe.TypeTag[A6],implicitevidence$451:reflect.runtime.universe.TypeTag[A7],implicitevidence$452:reflect.runtime.universe.TypeTag[A8],implicitevidence$453:reflect.runtime.universe.TypeTag[A9],implicitevidence$454:reflect.runtime.universe.TypeTag[A10],implicitevidence$455:reflect.runtime.universe.TypeTag[A11],implicitevidence$456:reflect.runtime.universe.TypeTag[A12],implicitevidence$457:reflect.runtime.universe.TypeTag[A13],implicitevidence$458:reflect.runtime.universe.TypeTag[A14],implicitevidence$459:reflect.runtime.universe.TypeTag[A15],implicitevidence$460:reflect.runtime.universe.TypeTag[A16],implicitevidence$461:reflect.runtime.universe.TypeTag[A17],implicitevidence$462:reflect.runtime.universe.TypeTag[A18],implicitevidence$463:reflect.runtime.universe.TypeTag[A19]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>RT)(implicitevidence$425:reflect.runtime.universe.TypeTag[RT],implicitevidence$426:reflect.runtime.universe.TypeTag[A1],implicitevidence$427:reflect.runtime.universe.TypeTag[A2],implicitevidence$428:reflect.runtime.universe.TypeTag[A3],implicitevidence$429:reflect.runtime.universe.TypeTag[A4],implicitevidence$430:reflect.runtime.universe.TypeTag[A5],implicitevidence$431:reflect.runtime.universe.TypeTag[A6],implicitevidence$432:reflect.runtime.universe.TypeTag[A7],implicitevidence$433:reflect.runtime.universe.TypeTag[A8],implicitevidence$434:reflect.runtime.universe.TypeTag[A9],implicitevidence$435:reflect.runtime.universe.TypeTag[A10],implicitevidence$436:reflect.runtime.universe.TypeTag[A11],implicitevidence$437:reflect.runtime.universe.TypeTag[A12],implicitevidence$438:reflect.runtime.universe.TypeTag[A13],implicitevidence$439:reflect.runtime.universe.TypeTag[A14],implicitevidence$440:reflect.runtime.universe.TypeTag[A15],implicitevidence$441:reflect.runtime.universe.TypeTag[A16],implicitevidence$442:reflect.runtime.universe.TypeTag[A17],implicitevidence$443:reflect.runtime.universe.TypeTag[A18]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>RT)(implicitevidence$407:reflect.runtime.universe.TypeTag[RT],implicitevidence$408:reflect.runtime.universe.TypeTag[A1],implicitevidence$409:reflect.runtime.universe.TypeTag[A2],implicitevidence$410:reflect.runtime.universe.TypeTag[A3],implicitevidence$411:reflect.runtime.universe.TypeTag[A4],implicitevidence$412:reflect.runtime.universe.TypeTag[A5],implicitevidence$413:reflect.runtime.universe.TypeTag[A6],implicitevidence$414:reflect.runtime.universe.TypeTag[A7],implicitevidence$415:reflect.runtime.universe.TypeTag[A8],implicitevidence$416:reflect.runtime.universe.TypeTag[A9],implicitevidence$417:reflect.runtime.universe.TypeTag[A10],implicitevidence$418:reflect.runtime.universe.TypeTag[A11],implicitevidence$419:reflect.runtime.universe.TypeTag[A12],implicitevidence$420:reflect.runtime.universe.TypeTag[A13],implicitevidence$421:reflect.runtime.universe.TypeTag[A14],implicitevidence$422:reflect.runtime.universe.TypeTag[A15],implicitevidence$423:reflect.runtime.universe.TypeTag[A16],implicitevidence$424:reflect.runtime.universe.TypeTag[A17]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>RT)(implicitevidence$390:reflect.runtime.universe.TypeTag[RT],implicitevidence$391:reflect.runtime.universe.TypeTag[A1],implicitevidence$392:reflect.runtime.universe.TypeTag[A2],implicitevidence$393:reflect.runtime.universe.TypeTag[A3],implicitevidence$394:reflect.runtime.universe.TypeTag[A4],implicitevidence$395:reflect.runtime.universe.TypeTag[A5],implicitevidence$396:reflect.runtime.universe.TypeTag[A6],implicitevidence$397:reflect.runtime.universe.TypeTag[A7],implicitevidence$398:reflect.runtime.universe.TypeTag[A8],implicitevidence$399:reflect.runtime.universe.TypeTag[A9],implicitevidence$400:reflect.runtime.universe.TypeTag[A10],implicitevidence$401:reflect.runtime.universe.TypeTag[A11],implicitevidence$402:reflect.runtime.universe.TypeTag[A12],implicitevidence$403:reflect.runtime.universe.TypeTag[A13],implicitevidence$404:reflect.runtime.universe.TypeTag[A14],implicitevidence$405:reflect.runtime.universe.TypeTag[A15],implicitevidence$406:reflect.runtime.universe.TypeTag[A16]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>RT)(implicitevidence$374:reflect.runtime.universe.TypeTag[RT],implicitevidence$375:reflect.runtime.universe.TypeTag[A1],implicitevidence$376:reflect.runtime.universe.TypeTag[A2],implicitevidence$377:reflect.runtime.universe.TypeTag[A3],implicitevidence$378:reflect.runtime.universe.TypeTag[A4],implicitevidence$379:reflect.runtime.universe.TypeTag[A5],implicitevidence$380:reflect.runtime.universe.TypeTag[A6],implicitevidence$381:reflect.runtime.universe.TypeTag[A7],implicitevidence$382:reflect.runtime.universe.TypeTag[A8],implicitevidence$383:reflect.runtime.universe.TypeTag[A9],implicitevidence$384:reflect.runtime.universe.TypeTag[A10],implicitevidence$385:reflect.runtime.universe.TypeTag[A11],implicitevidence$386:reflect.runtime.universe.TypeTag[A12],implicitevidence$387:reflect.runtime.universe.TypeTag[A13],implicitevidence$388:reflect.runtime.universe.TypeTag[A14],implicitevidence$389:reflect.runtime.universe.TypeTag[A15]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>RT)(implicitevidence$359:reflect.runtime.universe.TypeTag[RT],implicitevidence$360:reflect.runtime.universe.TypeTag[A1],implicitevidence$361:reflect.runtime.universe.TypeTag[A2],implicitevidence$362:reflect.runtime.universe.TypeTag[A3],implicitevidence$363:reflect.runtime.universe.TypeTag[A4],implicitevidence$364:reflect.runtime.universe.TypeTag[A5],implicitevidence$365:reflect.runtime.universe.TypeTag[A6],implicitevidence$366:reflect.runtime.universe.TypeTag[A7],implicitevidence$367:reflect.runtime.universe.TypeTag[A8],implicitevidence$368:reflect.runtime.universe.TypeTag[A9],implicitevidence$369:reflect.runtime.universe.TypeTag[A10],implicitevidence$370:reflect.runtime.universe.TypeTag[A11],implicitevidence$371:reflect.runtime.universe.TypeTag[A12],implicitevidence$372:reflect.runtime.universe.TypeTag[A13],implicitevidence$373:reflect.runtime.universe.TypeTag[A14]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>RT)(implicitevidence$345:reflect.runtime.universe.TypeTag[RT],implicitevidence$346:reflect.runtime.universe.TypeTag[A1],implicitevidence$347:reflect.runtime.universe.TypeTag[A2],implicitevidence$348:reflect.runtime.universe.TypeTag[A3],implicitevidence$349:reflect.runtime.universe.TypeTag[A4],implicitevidence$350:reflect.runtime.universe.TypeTag[A5],implicitevidence$351:reflect.runtime.universe.TypeTag[A6],implicitevidence$352:reflect.runtime.universe.TypeTag[A7],implicitevidence$353:reflect.runtime.universe.TypeTag[A8],implicitevidence$354:reflect.runtime.universe.TypeTag[A9],implicitevidence$355:reflect.runtime.universe.TypeTag[A10],implicitevidence$356:reflect.runtime.universe.TypeTag[A11],implicitevidence$357:reflect.runtime.universe.TypeTag[A12],implicitevidence$358:reflect.runtime.universe.TypeTag[A13]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>RT)(implicitevidence$332:reflect.runtime.universe.TypeTag[RT],implicitevidence$333:reflect.runtime.universe.TypeTag[A1],implicitevidence$334:reflect.runtime.universe.TypeTag[A2],implicitevidence$335:reflect.runtime.universe.TypeTag[A3],implicitevidence$336:reflect.runtime.universe.TypeTag[A4],implicitevidence$337:reflect.runtime.universe.TypeTag[A5],implicitevidence$338:reflect.runtime.universe.TypeTag[A6],implicitevidence$339:reflect.runtime.universe.TypeTag[A7],implicitevidence$340:reflect.runtime.universe.TypeTag[A8],implicitevidence$341:reflect.runtime.universe.TypeTag[A9],implicitevidence$342:reflect.runtime.universe.TypeTag[A10],implicitevidence$343:reflect.runtime.universe.TypeTag[A11],implicitevidence$344:reflect.runtime.universe.TypeTag[A12]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>RT)(implicitevidence$320:reflect.runtime.universe.TypeTag[RT],implicitevidence$321:reflect.runtime.universe.TypeTag[A1],implicitevidence$322:reflect.runtime.universe.TypeTag[A2],implicitevidence$323:reflect.runtime.universe.TypeTag[A3],implicitevidence$324:reflect.runtime.universe.TypeTag[A4],implicitevidence$325:reflect.runtime.universe.TypeTag[A5],implicitevidence$326:reflect.runtime.universe.TypeTag[A6],implicitevidence$327:reflect.runtime.universe.TypeTag[A7],implicitevidence$328:reflect.runtime.universe.TypeTag[A8],implicitevidence$329:reflect.runtime.universe.TypeTag[A9],implicitevidence$330:reflect.runtime.universe.TypeTag[A10],implicitevidence$331:reflect.runtime.universe.TypeTag[A11]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>RT)(implicitevidence$309:reflect.runtime.universe.TypeTag[RT],implicitevidence$310:reflect.runtime.universe.TypeTag[A1],implicitevidence$311:reflect.runtime.universe.TypeTag[A2],implicitevidence$312:reflect.runtime.universe.TypeTag[A3],implicitevidence$313:reflect.runtime.universe.TypeTag[A4],implicitevidence$314:reflect.runtime.universe.TypeTag[A5],implicitevidence$315:reflect.runtime.universe.TypeTag[A6],implicitevidence$316:reflect.runtime.universe.TypeTag[A7],implicitevidence$317:reflect.runtime.universe.TypeTag[A8],implicitevidence$318:reflect.runtime.universe.TypeTag[A9],implicitevidence$319:reflect.runtime.universe.TypeTag[A10]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>RT)(implicitevidence$299:reflect.runtime.universe.TypeTag[RT],implicitevidence$300:reflect.runtime.universe.TypeTag[A1],implicitevidence$301:reflect.runtime.universe.TypeTag[A2],implicitevidence$302:reflect.runtime.universe.TypeTag[A3],implicitevidence$303:reflect.runtime.universe.TypeTag[A4],implicitevidence$304:reflect.runtime.universe.TypeTag[A5],implicitevidence$305:reflect.runtime.universe.TypeTag[A6],implicitevidence$306:reflect.runtime.universe.TypeTag[A7],implicitevidence$307:reflect.runtime.universe.TypeTag[A8],implicitevidence$308:reflect.runtime.universe.TypeTag[A9]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8)=>RT)(implicitevidence$290:reflect.runtime.universe.TypeTag[RT],implicitevidence$291:reflect.runtime.universe.TypeTag[A1],implicitevidence$292:reflect.runtime.universe.TypeTag[A2],implicitevidence$293:reflect.runtime.universe.TypeTag[A3],implicitevidence$294:reflect.runtime.universe.TypeTag[A4],implicitevidence$295:reflect.runtime.universe.TypeTag[A5],implicitevidence$296:reflect.runtime.universe.TypeTag[A6],implicitevidence$297:reflect.runtime.universe.TypeTag[A7],implicitevidence$298:reflect.runtime.universe.TypeTag[A8]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6, A7) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7)=>RT)(implicitevidence$282:reflect.runtime.universe.TypeTag[RT],implicitevidence$283:reflect.runtime.universe.TypeTag[A1],implicitevidence$284:reflect.runtime.universe.TypeTag[A2],implicitevidence$285:reflect.runtime.universe.TypeTag[A3],implicitevidence$286:reflect.runtime.universe.TypeTag[A4],implicitevidence$287:reflect.runtime.universe.TypeTag[A5],implicitevidence$288:reflect.runtime.universe.TypeTag[A6],implicitevidence$289:reflect.runtime.universe.TypeTag[A7]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5, A6) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6)=>RT)(implicitevidence$275:reflect.runtime.universe.TypeTag[RT],implicitevidence$276:reflect.runtime.universe.TypeTag[A1],implicitevidence$277:reflect.runtime.universe.TypeTag[A2],implicitevidence$278:reflect.runtime.universe.TypeTag[A3],implicitevidence$279:reflect.runtime.universe.TypeTag[A4],implicitevidence$280:reflect.runtime.universe.TypeTag[A5],implicitevidence$281:reflect.runtime.universe.TypeTag[A6]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4, A5) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5)=>RT)(implicitevidence$269:reflect.runtime.universe.TypeTag[RT],implicitevidence$270:reflect.runtime.universe.TypeTag[A1],implicitevidence$271:reflect.runtime.universe.TypeTag[A2],implicitevidence$272:reflect.runtime.universe.TypeTag[A3],implicitevidence$273:reflect.runtime.universe.TypeTag[A4],implicitevidence$274:reflect.runtime.universe.TypeTag[A5]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3, A4) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3,A4](sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4)=>RT)(implicitevidence$264:reflect.runtime.universe.TypeTag[RT],implicitevidence$265:reflect.runtime.universe.TypeTag[A1],implicitevidence$266:reflect.runtime.universe.TypeTag[A2],implicitevidence$267:reflect.runtime.universe.TypeTag[A3],implicitevidence$268:reflect.runtime.universe.TypeTag[A4]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2, A3) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2,A3](sp:(com.snowflake.snowpark.Session,A1,A2,A3)=>RT)(implicitevidence$260:reflect.runtime.universe.TypeTag[RT],implicitevidence$261:reflect.runtime.universe.TypeTag[A1],implicitevidence$262:reflect.runtime.universe.TypeTag[A2],implicitevidence$263:reflect.runtime.universe.TypeTag[A3]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1, A2) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1,A2](sp:(com.snowflake.snowpark.Session,A1,A2)=>RT)(implicitevidence$257:reflect.runtime.universe.TypeTag[RT],implicitevidence$258:reflect.runtime.universe.TypeTag[A1],implicitevidence$259:reflect.runtime.universe.TypeTag[A2]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session, A1) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT,A1](sp:(com.snowflake.snowpark.Session,A1)=>RT)(implicitevidence$255:reflect.runtime.universe.TypeTag[RT],implicitevidence$256:reflect.runtime.universe.TypeTag[A1]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(sp: (Session) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerTemporary[RT](sp:com.snowflake.snowpark.Session=>RT)(implicitevidence$254:reflect.runtime.universe.TypeTag[RT]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$232:reflect.runtime.universe.TypeTag[RT],implicitevidence$233:reflect.runtime.universe.TypeTag[A1],implicitevidence$234:reflect.runtime.universe.TypeTag[A2],implicitevidence$235:reflect.runtime.universe.TypeTag[A3],implicitevidence$236:reflect.runtime.universe.TypeTag[A4],implicitevidence$237:reflect.runtime.universe.TypeTag[A5],implicitevidence$238:reflect.runtime.universe.TypeTag[A6],implicitevidence$239:reflect.runtime.universe.TypeTag[A7],implicitevidence$240:reflect.runtime.universe.TypeTag[A8],implicitevidence$241:reflect.runtime.universe.TypeTag[A9],implicitevidence$242:reflect.runtime.universe.TypeTag[A10],implicitevidence$243:reflect.runtime.universe.TypeTag[A11],implicitevidence$244:reflect.runtime.universe.TypeTag[A12],implicitevidence$245:reflect.runtime.universe.TypeTag[A13],implicitevidence$246:reflect.runtime.universe.TypeTag[A14],implicitevidence$247:reflect.runtime.universe.TypeTag[A15],implicitevidence$248:reflect.runtime.universe.TypeTag[A16],implicitevidence$249:reflect.runtime.universe.TypeTag[A17],implicitevidence$250:reflect.runtime.universe.TypeTag[A18],implicitevidence$251:reflect.runtime.universe.TypeTag[A19],implicitevidence$252:reflect.runtime.universe.TypeTag[A20],implicitevidence$253:reflect.runtime.universe.TypeTag[A21]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$211:reflect.runtime.universe.TypeTag[RT],implicitevidence$212:reflect.runtime.universe.TypeTag[A1],implicitevidence$213:reflect.runtime.universe.TypeTag[A2],implicitevidence$214:reflect.runtime.universe.TypeTag[A3],implicitevidence$215:reflect.runtime.universe.TypeTag[A4],implicitevidence$216:reflect.runtime.universe.TypeTag[A5],implicitevidence$217:reflect.runtime.universe.TypeTag[A6],implicitevidence$218:reflect.runtime.universe.TypeTag[A7],implicitevidence$219:reflect.runtime.universe.TypeTag[A8],implicitevidence$220:reflect.runtime.universe.TypeTag[A9],implicitevidence$221:reflect.runtime.universe.TypeTag[A10],implicitevidence$222:reflect.runtime.universe.TypeTag[A11],implicitevidence$223:reflect.runtime.universe.TypeTag[A12],implicitevidence$224:reflect.runtime.universe.TypeTag[A13],implicitevidence$225:reflect.runtime.universe.TypeTag[A14],implicitevidence$226:reflect.runtime.universe.TypeTag[A15],implicitevidence$227:reflect.runtime.universe.TypeTag[A16],implicitevidence$228:reflect.runtime.universe.TypeTag[A17],implicitevidence$229:reflect.runtime.universe.TypeTag[A18],implicitevidence$230:reflect.runtime.universe.TypeTag[A19],implicitevidence$231:reflect.runtime.universe.TypeTag[A20]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$191:reflect.runtime.universe.TypeTag[RT],implicitevidence$192:reflect.runtime.universe.TypeTag[A1],implicitevidence$193:reflect.runtime.universe.TypeTag[A2],implicitevidence$194:reflect.runtime.universe.TypeTag[A3],implicitevidence$195:reflect.runtime.universe.TypeTag[A4],implicitevidence$196:reflect.runtime.universe.TypeTag[A5],implicitevidence$197:reflect.runtime.universe.TypeTag[A6],implicitevidence$198:reflect.runtime.universe.TypeTag[A7],implicitevidence$199:reflect.runtime.universe.TypeTag[A8],implicitevidence$200:reflect.runtime.universe.TypeTag[A9],implicitevidence$201:reflect.runtime.universe.TypeTag[A10],implicitevidence$202:reflect.runtime.universe.TypeTag[A11],implicitevidence$203:reflect.runtime.universe.TypeTag[A12],implicitevidence$204:reflect.runtime.universe.TypeTag[A13],implicitevidence$205:reflect.runtime.universe.TypeTag[A14],implicitevidence$206:reflect.runtime.universe.TypeTag[A15],implicitevidence$207:reflect.runtime.universe.TypeTag[A16],implicitevidence$208:reflect.runtime.universe.TypeTag[A17],implicitevidence$209:reflect.runtime.universe.TypeTag[A18],implicitevidence$210:reflect.runtime.universe.TypeTag[A19]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$172:reflect.runtime.universe.TypeTag[RT],implicitevidence$173:reflect.runtime.universe.TypeTag[A1],implicitevidence$174:reflect.runtime.universe.TypeTag[A2],implicitevidence$175:reflect.runtime.universe.TypeTag[A3],implicitevidence$176:reflect.runtime.universe.TypeTag[A4],implicitevidence$177:reflect.runtime.universe.TypeTag[A5],implicitevidence$178:reflect.runtime.universe.TypeTag[A6],implicitevidence$179:reflect.runtime.universe.TypeTag[A7],implicitevidence$180:reflect.runtime.universe.TypeTag[A8],implicitevidence$181:reflect.runtime.universe.TypeTag[A9],implicitevidence$182:reflect.runtime.universe.TypeTag[A10],implicitevidence$183:reflect.runtime.universe.TypeTag[A11],implicitevidence$184:reflect.runtime.universe.TypeTag[A12],implicitevidence$185:reflect.runtime.universe.TypeTag[A13],implicitevidence$186:reflect.runtime.universe.TypeTag[A14],implicitevidence$187:reflect.runtime.universe.TypeTag[A15],implicitevidence$188:reflect.runtime.universe.TypeTag[A16],implicitevidence$189:reflect.runtime.universe.TypeTag[A17],implicitevidence$190:reflect.runtime.universe.TypeTag[A18]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$154:reflect.runtime.universe.TypeTag[RT],implicitevidence$155:reflect.runtime.universe.TypeTag[A1],implicitevidence$156:reflect.runtime.universe.TypeTag[A2],implicitevidence$157:reflect.runtime.universe.TypeTag[A3],implicitevidence$158:reflect.runtime.universe.TypeTag[A4],implicitevidence$159:reflect.runtime.universe.TypeTag[A5],implicitevidence$160:reflect.runtime.universe.TypeTag[A6],implicitevidence$161:reflect.runtime.universe.TypeTag[A7],implicitevidence$162:reflect.runtime.universe.TypeTag[A8],implicitevidence$163:reflect.runtime.universe.TypeTag[A9],implicitevidence$164:reflect.runtime.universe.TypeTag[A10],implicitevidence$165:reflect.runtime.universe.TypeTag[A11],implicitevidence$166:reflect.runtime.universe.TypeTag[A12],implicitevidence$167:reflect.runtime.universe.TypeTag[A13],implicitevidence$168:reflect.runtime.universe.TypeTag[A14],implicitevidence$169:reflect.runtime.universe.TypeTag[A15],implicitevidence$170:reflect.runtime.universe.TypeTag[A16],implicitevidence$171:reflect.runtime.universe.TypeTag[A17]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$137:reflect.runtime.universe.TypeTag[RT],implicitevidence$138:reflect.runtime.universe.TypeTag[A1],implicitevidence$139:reflect.runtime.universe.TypeTag[A2],implicitevidence$140:reflect.runtime.universe.TypeTag[A3],implicitevidence$141:reflect.runtime.universe.TypeTag[A4],implicitevidence$142:reflect.runtime.universe.TypeTag[A5],implicitevidence$143:reflect.runtime.universe.TypeTag[A6],implicitevidence$144:reflect.runtime.universe.TypeTag[A7],implicitevidence$145:reflect.runtime.universe.TypeTag[A8],implicitevidence$146:reflect.runtime.universe.TypeTag[A9],implicitevidence$147:reflect.runtime.universe.TypeTag[A10],implicitevidence$148:reflect.runtime.universe.TypeTag[A11],implicitevidence$149:reflect.runtime.universe.TypeTag[A12],implicitevidence$150:reflect.runtime.universe.TypeTag[A13],implicitevidence$151:reflect.runtime.universe.TypeTag[A14],implicitevidence$152:reflect.runtime.universe.TypeTag[A15],implicitevidence$153:reflect.runtime.universe.TypeTag[A16]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$121:reflect.runtime.universe.TypeTag[RT],implicitevidence$122:reflect.runtime.universe.TypeTag[A1],implicitevidence$123:reflect.runtime.universe.TypeTag[A2],implicitevidence$124:reflect.runtime.universe.TypeTag[A3],implicitevidence$125:reflect.runtime.universe.TypeTag[A4],implicitevidence$126:reflect.runtime.universe.TypeTag[A5],implicitevidence$127:reflect.runtime.universe.TypeTag[A6],implicitevidence$128:reflect.runtime.universe.TypeTag[A7],implicitevidence$129:reflect.runtime.universe.TypeTag[A8],implicitevidence$130:reflect.runtime.universe.TypeTag[A9],implicitevidence$131:reflect.runtime.universe.TypeTag[A10],implicitevidence$132:reflect.runtime.universe.TypeTag[A11],implicitevidence$133:reflect.runtime.universe.TypeTag[A12],implicitevidence$134:reflect.runtime.universe.TypeTag[A13],implicitevidence$135:reflect.runtime.universe.TypeTag[A14],implicitevidence$136:reflect.runtime.universe.TypeTag[A15]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$106:reflect.runtime.universe.TypeTag[RT],implicitevidence$107:reflect.runtime.universe.TypeTag[A1],implicitevidence$108:reflect.runtime.universe.TypeTag[A2],implicitevidence$109:reflect.runtime.universe.TypeTag[A3],implicitevidence$110:reflect.runtime.universe.TypeTag[A4],implicitevidence$111:reflect.runtime.universe.TypeTag[A5],implicitevidence$112:reflect.runtime.universe.TypeTag[A6],implicitevidence$113:reflect.runtime.universe.TypeTag[A7],implicitevidence$114:reflect.runtime.universe.TypeTag[A8],implicitevidence$115:reflect.runtime.universe.TypeTag[A9],implicitevidence$116:reflect.runtime.universe.TypeTag[A10],implicitevidence$117:reflect.runtime.universe.TypeTag[A11],implicitevidence$118:reflect.runtime.universe.TypeTag[A12],implicitevidence$119:reflect.runtime.universe.TypeTag[A13],implicitevidence$120:reflect.runtime.universe.TypeTag[A14]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$92:reflect.runtime.universe.TypeTag[RT],implicitevidence$93:reflect.runtime.universe.TypeTag[A1],implicitevidence$94:reflect.runtime.universe.TypeTag[A2],implicitevidence$95:reflect.runtime.universe.TypeTag[A3],implicitevidence$96:reflect.runtime.universe.TypeTag[A4],implicitevidence$97:reflect.runtime.universe.TypeTag[A5],implicitevidence$98:reflect.runtime.universe.TypeTag[A6],implicitevidence$99:reflect.runtime.universe.TypeTag[A7],implicitevidence$100:reflect.runtime.universe.TypeTag[A8],implicitevidence$101:reflect.runtime.universe.TypeTag[A9],implicitevidence$102:reflect.runtime.universe.TypeTag[A10],implicitevidence$103:reflect.runtime.universe.TypeTag[A11],implicitevidence$104:reflect.runtime.universe.TypeTag[A12],implicitevidence$105:reflect.runtime.universe.TypeTag[A13]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$79:reflect.runtime.universe.TypeTag[RT],implicitevidence$80:reflect.runtime.universe.TypeTag[A1],implicitevidence$81:reflect.runtime.universe.TypeTag[A2],implicitevidence$82:reflect.runtime.universe.TypeTag[A3],implicitevidence$83:reflect.runtime.universe.TypeTag[A4],implicitevidence$84:reflect.runtime.universe.TypeTag[A5],implicitevidence$85:reflect.runtime.universe.TypeTag[A6],implicitevidence$86:reflect.runtime.universe.TypeTag[A7],implicitevidence$87:reflect.runtime.universe.TypeTag[A8],implicitevidence$88:reflect.runtime.universe.TypeTag[A9],implicitevidence$89:reflect.runtime.universe.TypeTag[A10],implicitevidence$90:reflect.runtime.universe.TypeTag[A11],implicitevidence$91:reflect.runtime.universe.TypeTag[A12]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$67:reflect.runtime.universe.TypeTag[RT],implicitevidence$68:reflect.runtime.universe.TypeTag[A1],implicitevidence$69:reflect.runtime.universe.TypeTag[A2],implicitevidence$70:reflect.runtime.universe.TypeTag[A3],implicitevidence$71:reflect.runtime.universe.TypeTag[A4],implicitevidence$72:reflect.runtime.universe.TypeTag[A5],implicitevidence$73:reflect.runtime.universe.TypeTag[A6],implicitevidence$74:reflect.runtime.universe.TypeTag[A7],implicitevidence$75:reflect.runtime.universe.TypeTag[A8],implicitevidence$76:reflect.runtime.universe.TypeTag[A9],implicitevidence$77:reflect.runtime.universe.TypeTag[A10],implicitevidence$78:reflect.runtime.universe.TypeTag[A11]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$56:reflect.runtime.universe.TypeTag[RT],implicitevidence$57:reflect.runtime.universe.TypeTag[A1],implicitevidence$58:reflect.runtime.universe.TypeTag[A2],implicitevidence$59:reflect.runtime.universe.TypeTag[A3],implicitevidence$60:reflect.runtime.universe.TypeTag[A4],implicitevidence$61:reflect.runtime.universe.TypeTag[A5],implicitevidence$62:reflect.runtime.universe.TypeTag[A6],implicitevidence$63:reflect.runtime.universe.TypeTag[A7],implicitevidence$64:reflect.runtime.universe.TypeTag[A8],implicitevidence$65:reflect.runtime.universe.TypeTag[A9],implicitevidence$66:reflect.runtime.universe.TypeTag[A10]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$46:reflect.runtime.universe.TypeTag[RT],implicitevidence$47:reflect.runtime.universe.TypeTag[A1],implicitevidence$48:reflect.runtime.universe.TypeTag[A2],implicitevidence$49:reflect.runtime.universe.TypeTag[A3],implicitevidence$50:reflect.runtime.universe.TypeTag[A4],implicitevidence$51:reflect.runtime.universe.TypeTag[A5],implicitevidence$52:reflect.runtime.universe.TypeTag[A6],implicitevidence$53:reflect.runtime.universe.TypeTag[A7],implicitevidence$54:reflect.runtime.universe.TypeTag[A8],implicitevidence$55:reflect.runtime.universe.TypeTag[A9]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7, A8) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7,A8)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$37:reflect.runtime.universe.TypeTag[RT],implicitevidence$38:reflect.runtime.universe.TypeTag[A1],implicitevidence$39:reflect.runtime.universe.TypeTag[A2],implicitevidence$40:reflect.runtime.universe.TypeTag[A3],implicitevidence$41:reflect.runtime.universe.TypeTag[A4],implicitevidence$42:reflect.runtime.universe.TypeTag[A5],implicitevidence$43:reflect.runtime.universe.TypeTag[A6],implicitevidence$44:reflect.runtime.universe.TypeTag[A7],implicitevidence$45:reflect.runtime.universe.TypeTag[A8]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6, A7) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6,A7)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$29:reflect.runtime.universe.TypeTag[RT],implicitevidence$30:reflect.runtime.universe.TypeTag[A1],implicitevidence$31:reflect.runtime.universe.TypeTag[A2],implicitevidence$32:reflect.runtime.universe.TypeTag[A3],implicitevidence$33:reflect.runtime.universe.TypeTag[A4],implicitevidence$34:reflect.runtime.universe.TypeTag[A5],implicitevidence$35:reflect.runtime.universe.TypeTag[A6],implicitevidence$36:reflect.runtime.universe.TypeTag[A7]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5, A6) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5,A6)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$22:reflect.runtime.universe.TypeTag[RT],implicitevidence$23:reflect.runtime.universe.TypeTag[A1],implicitevidence$24:reflect.runtime.universe.TypeTag[A2],implicitevidence$25:reflect.runtime.universe.TypeTag[A3],implicitevidence$26:reflect.runtime.universe.TypeTag[A4],implicitevidence$27:reflect.runtime.universe.TypeTag[A5],implicitevidence$28:reflect.runtime.universe.TypeTag[A6]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4, A5) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4,A5)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$16:reflect.runtime.universe.TypeTag[RT],implicitevidence$17:reflect.runtime.universe.TypeTag[A1],implicitevidence$18:reflect.runtime.universe.TypeTag[A2],implicitevidence$19:reflect.runtime.universe.TypeTag[A3],implicitevidence$20:reflect.runtime.universe.TypeTag[A4],implicitevidence$21:reflect.runtime.universe.TypeTag[A5]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3, A4) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3,A4](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3,A4)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$11:reflect.runtime.universe.TypeTag[RT],implicitevidence$12:reflect.runtime.universe.TypeTag[A1],implicitevidence$13:reflect.runtime.universe.TypeTag[A2],implicitevidence$14:reflect.runtime.universe.TypeTag[A3],implicitevidence$15:reflect.runtime.universe.TypeTag[A4]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2, A3) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2,A3](name:String,sp:(com.snowflake.snowpark.Session,A1,A2,A3)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$7:reflect.runtime.universe.TypeTag[RT],implicitevidence$8:reflect.runtime.universe.TypeTag[A1],implicitevidence$9:reflect.runtime.universe.TypeTag[A2],implicitevidence$10:reflect.runtime.universe.TypeTag[A3]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1, A2) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1,A2](name:String,sp:(com.snowflake.snowpark.Session,A1,A2)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$4:reflect.runtime.universe.TypeTag[RT],implicitevidence$5:reflect.runtime.universe.TypeTag[A1],implicitevidence$6:reflect.runtime.universe.TypeTag[A2]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session, A1) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT,A1](name:String,sp:(com.snowflake.snowpark.Session,A1)=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$2:reflect.runtime.universe.TypeTag[RT],implicitevidence$3:reflect.runtime.universe.TypeTag[A1]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, sp: (Session) ⇒ RT, stageLocation: String, isCallerMode: Boolean)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT]): StoredProcedure", "member" : "com.snowflake.snowpark.SProcRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#registerPermanent[RT](name:String,sp:com.snowflake.snowpark.Session=>RT,stageLocation:String,isCallerMode:Boolean)(implicitevidence$1:reflect.runtime.universe.TypeTag[RT]):com.snowflake.snowpark.StoredProcedure", "kind" : "def"}, {"member" : "com.snowflake.snowpark.SProcRegistration#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/SProcRegistration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/SProcRegistration.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.StoredProcedure", "shortDescription" : "The reference to a Stored Procedure which can be created bySession.sproc.register methods, and used in Session.storedProceduremethod.", "members_case class" : [{"label" : "name", "tail" : ": Option[String]", "member" : "com.snowflake.snowpark.StoredProcedure.name", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#name:Option[String]", "kind" : "val"}, {"label" : "sp", "tail" : ": AnyRef", "member" : "com.snowflake.snowpark.StoredProcedure.sp", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#sp:AnyRef", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/StoredProcedure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/StoredProcedure.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.TableFunction", "shortDescription" : "Looks up table functions by funcName and returns tableFunction objectwhich can be used in DataFrame.join and Session.tableFunction methods.", "members_case class" : [{"label" : "apply", "tail" : "(args: Map[String, Column]): Column", "member" : "com.snowflake.snowpark.TableFunction.apply", "link" : "com\/snowflake\/snowpark\/TableFunction.html#apply(args:Map[String,com.snowflake.snowpark.Column]):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "apply", "tail" : "(args: Column*): Column", "member" : "com.snowflake.snowpark.TableFunction.apply", "link" : "com\/snowflake\/snowpark\/TableFunction.html#apply(args:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"member" : "com.snowflake.snowpark.TableFunction#<init>", "error" : "unsupported entity"}, {"label" : "funcName", "tail" : ": String", "member" : "com.snowflake.snowpark.TableFunction.funcName", "link" : "com\/snowflake\/snowpark\/TableFunction.html#funcName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/TableFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/TableFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/TableFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/TableFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/TableFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/TableFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/TableFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/TableFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/TableFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/TableFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/TableFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/TableFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/TableFunction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/TableFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/TableFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/TableFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/TableFunction.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.tableFunctions", "shortDescription" : "Provides utility functions that generate table function expressions that can bepassed to DataFrame join method and Session tableFunction method.", "object" : "com\/snowflake\/snowpark\/tableFunctions$.html", "members_object" : [{"label" : "explode", "tail" : "(input: Column): Column", "member" : "com.snowflake.snowpark.tableFunctions.explode", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#explode(input:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column, path: String, outer: Boolean, recursive: Boolean, mode: String): Column", "member" : "com.snowflake.snowpark.tableFunctions.flatten", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#flatten(input:com.snowflake.snowpark.Column,path:String,outer:Boolean,recursive:Boolean,mode:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column): Column", "member" : "com.snowflake.snowpark.tableFunctions.flatten", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#flatten(input:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "flatten", "tail" : ": TableFunction", "member" : "com.snowflake.snowpark.tableFunctions.flatten", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#flatten:com.snowflake.snowpark.TableFunction", "kind" : "lazy val"}, {"label" : "split_to_table", "tail" : "(str: Column, delimiter: String): Column", "member" : "com.snowflake.snowpark.tableFunctions.split_to_table", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#split_to_table(str:com.snowflake.snowpark.Column,delimiter:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "split_to_table", "tail" : ": TableFunction", "member" : "com.snowflake.snowpark.tableFunctions.split_to_table", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#split_to_table:com.snowflake.snowpark.TableFunction", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/tableFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.TypedAsyncJob", "shortDescription" : "Provides a way to track an asynchronously executed action in a DataFrame.", "members_class" : [{"label" : "getResult", "tail" : "(maxWaitTimeInSeconds: Int): T", "member" : "com.snowflake.snowpark.TypedAsyncJob.getResult", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#getResult(maxWaitTimeInSeconds:Int):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.AsyncJob.cancel", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#cancel():Unit", "kind" : "def"}, {"label" : "isDone", "tail" : "(): Boolean", "member" : "com.snowflake.snowpark.AsyncJob.isDone", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#isDone():Boolean", "kind" : "def"}, {"label" : "getRows", "tail" : "(maxWaitTimeInSeconds: Int): Array[Row]", "member" : "com.snowflake.snowpark.AsyncJob.getRows", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#getRows(maxWaitTimeInSeconds:Int):Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "getIterator", "tail" : "(maxWaitTimeInSeconds: Int): Iterator[Row]", "member" : "com.snowflake.snowpark.AsyncJob.getIterator", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#getIterator(maxWaitTimeInSeconds:Int):Iterator[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "getQueryId", "tail" : "(): String", "member" : "com.snowflake.snowpark.AsyncJob.getQueryId", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#getQueryId():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/TypedAsyncJob.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/TypedAsyncJob.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.UDFRegistration", "shortDescription" : "Provides methods to register lambdas and functions as UDFs in the Snowflake database.", "members_class" : [{"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21], arg22: scala.reflect.api.JavaUniverse.TypeTag[A22]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22)=>RT,stageLocation:String)(implicitevidence$806:reflect.runtime.universe.TypeTag[RT],implicitevidence$807:reflect.runtime.universe.TypeTag[A1],implicitevidence$808:reflect.runtime.universe.TypeTag[A2],implicitevidence$809:reflect.runtime.universe.TypeTag[A3],implicitevidence$810:reflect.runtime.universe.TypeTag[A4],implicitevidence$811:reflect.runtime.universe.TypeTag[A5],implicitevidence$812:reflect.runtime.universe.TypeTag[A6],implicitevidence$813:reflect.runtime.universe.TypeTag[A7],implicitevidence$814:reflect.runtime.universe.TypeTag[A8],implicitevidence$815:reflect.runtime.universe.TypeTag[A9],implicitevidence$816:reflect.runtime.universe.TypeTag[A10],implicitevidence$817:reflect.runtime.universe.TypeTag[A11],implicitevidence$818:reflect.runtime.universe.TypeTag[A12],implicitevidence$819:reflect.runtime.universe.TypeTag[A13],implicitevidence$820:reflect.runtime.universe.TypeTag[A14],implicitevidence$821:reflect.runtime.universe.TypeTag[A15],implicitevidence$822:reflect.runtime.universe.TypeTag[A16],implicitevidence$823:reflect.runtime.universe.TypeTag[A17],implicitevidence$824:reflect.runtime.universe.TypeTag[A18],implicitevidence$825:reflect.runtime.universe.TypeTag[A19],implicitevidence$826:reflect.runtime.universe.TypeTag[A20],implicitevidence$827:reflect.runtime.universe.TypeTag[A21],implicitevidence$828:reflect.runtime.universe.TypeTag[A22]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>RT,stageLocation:String)(implicitevidence$784:reflect.runtime.universe.TypeTag[RT],implicitevidence$785:reflect.runtime.universe.TypeTag[A1],implicitevidence$786:reflect.runtime.universe.TypeTag[A2],implicitevidence$787:reflect.runtime.universe.TypeTag[A3],implicitevidence$788:reflect.runtime.universe.TypeTag[A4],implicitevidence$789:reflect.runtime.universe.TypeTag[A5],implicitevidence$790:reflect.runtime.universe.TypeTag[A6],implicitevidence$791:reflect.runtime.universe.TypeTag[A7],implicitevidence$792:reflect.runtime.universe.TypeTag[A8],implicitevidence$793:reflect.runtime.universe.TypeTag[A9],implicitevidence$794:reflect.runtime.universe.TypeTag[A10],implicitevidence$795:reflect.runtime.universe.TypeTag[A11],implicitevidence$796:reflect.runtime.universe.TypeTag[A12],implicitevidence$797:reflect.runtime.universe.TypeTag[A13],implicitevidence$798:reflect.runtime.universe.TypeTag[A14],implicitevidence$799:reflect.runtime.universe.TypeTag[A15],implicitevidence$800:reflect.runtime.universe.TypeTag[A16],implicitevidence$801:reflect.runtime.universe.TypeTag[A17],implicitevidence$802:reflect.runtime.universe.TypeTag[A18],implicitevidence$803:reflect.runtime.universe.TypeTag[A19],implicitevidence$804:reflect.runtime.universe.TypeTag[A20],implicitevidence$805:reflect.runtime.universe.TypeTag[A21]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>RT,stageLocation:String)(implicitevidence$763:reflect.runtime.universe.TypeTag[RT],implicitevidence$764:reflect.runtime.universe.TypeTag[A1],implicitevidence$765:reflect.runtime.universe.TypeTag[A2],implicitevidence$766:reflect.runtime.universe.TypeTag[A3],implicitevidence$767:reflect.runtime.universe.TypeTag[A4],implicitevidence$768:reflect.runtime.universe.TypeTag[A5],implicitevidence$769:reflect.runtime.universe.TypeTag[A6],implicitevidence$770:reflect.runtime.universe.TypeTag[A7],implicitevidence$771:reflect.runtime.universe.TypeTag[A8],implicitevidence$772:reflect.runtime.universe.TypeTag[A9],implicitevidence$773:reflect.runtime.universe.TypeTag[A10],implicitevidence$774:reflect.runtime.universe.TypeTag[A11],implicitevidence$775:reflect.runtime.universe.TypeTag[A12],implicitevidence$776:reflect.runtime.universe.TypeTag[A13],implicitevidence$777:reflect.runtime.universe.TypeTag[A14],implicitevidence$778:reflect.runtime.universe.TypeTag[A15],implicitevidence$779:reflect.runtime.universe.TypeTag[A16],implicitevidence$780:reflect.runtime.universe.TypeTag[A17],implicitevidence$781:reflect.runtime.universe.TypeTag[A18],implicitevidence$782:reflect.runtime.universe.TypeTag[A19],implicitevidence$783:reflect.runtime.universe.TypeTag[A20]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>RT,stageLocation:String)(implicitevidence$743:reflect.runtime.universe.TypeTag[RT],implicitevidence$744:reflect.runtime.universe.TypeTag[A1],implicitevidence$745:reflect.runtime.universe.TypeTag[A2],implicitevidence$746:reflect.runtime.universe.TypeTag[A3],implicitevidence$747:reflect.runtime.universe.TypeTag[A4],implicitevidence$748:reflect.runtime.universe.TypeTag[A5],implicitevidence$749:reflect.runtime.universe.TypeTag[A6],implicitevidence$750:reflect.runtime.universe.TypeTag[A7],implicitevidence$751:reflect.runtime.universe.TypeTag[A8],implicitevidence$752:reflect.runtime.universe.TypeTag[A9],implicitevidence$753:reflect.runtime.universe.TypeTag[A10],implicitevidence$754:reflect.runtime.universe.TypeTag[A11],implicitevidence$755:reflect.runtime.universe.TypeTag[A12],implicitevidence$756:reflect.runtime.universe.TypeTag[A13],implicitevidence$757:reflect.runtime.universe.TypeTag[A14],implicitevidence$758:reflect.runtime.universe.TypeTag[A15],implicitevidence$759:reflect.runtime.universe.TypeTag[A16],implicitevidence$760:reflect.runtime.universe.TypeTag[A17],implicitevidence$761:reflect.runtime.universe.TypeTag[A18],implicitevidence$762:reflect.runtime.universe.TypeTag[A19]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>RT,stageLocation:String)(implicitevidence$724:reflect.runtime.universe.TypeTag[RT],implicitevidence$725:reflect.runtime.universe.TypeTag[A1],implicitevidence$726:reflect.runtime.universe.TypeTag[A2],implicitevidence$727:reflect.runtime.universe.TypeTag[A3],implicitevidence$728:reflect.runtime.universe.TypeTag[A4],implicitevidence$729:reflect.runtime.universe.TypeTag[A5],implicitevidence$730:reflect.runtime.universe.TypeTag[A6],implicitevidence$731:reflect.runtime.universe.TypeTag[A7],implicitevidence$732:reflect.runtime.universe.TypeTag[A8],implicitevidence$733:reflect.runtime.universe.TypeTag[A9],implicitevidence$734:reflect.runtime.universe.TypeTag[A10],implicitevidence$735:reflect.runtime.universe.TypeTag[A11],implicitevidence$736:reflect.runtime.universe.TypeTag[A12],implicitevidence$737:reflect.runtime.universe.TypeTag[A13],implicitevidence$738:reflect.runtime.universe.TypeTag[A14],implicitevidence$739:reflect.runtime.universe.TypeTag[A15],implicitevidence$740:reflect.runtime.universe.TypeTag[A16],implicitevidence$741:reflect.runtime.universe.TypeTag[A17],implicitevidence$742:reflect.runtime.universe.TypeTag[A18]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>RT,stageLocation:String)(implicitevidence$706:reflect.runtime.universe.TypeTag[RT],implicitevidence$707:reflect.runtime.universe.TypeTag[A1],implicitevidence$708:reflect.runtime.universe.TypeTag[A2],implicitevidence$709:reflect.runtime.universe.TypeTag[A3],implicitevidence$710:reflect.runtime.universe.TypeTag[A4],implicitevidence$711:reflect.runtime.universe.TypeTag[A5],implicitevidence$712:reflect.runtime.universe.TypeTag[A6],implicitevidence$713:reflect.runtime.universe.TypeTag[A7],implicitevidence$714:reflect.runtime.universe.TypeTag[A8],implicitevidence$715:reflect.runtime.universe.TypeTag[A9],implicitevidence$716:reflect.runtime.universe.TypeTag[A10],implicitevidence$717:reflect.runtime.universe.TypeTag[A11],implicitevidence$718:reflect.runtime.universe.TypeTag[A12],implicitevidence$719:reflect.runtime.universe.TypeTag[A13],implicitevidence$720:reflect.runtime.universe.TypeTag[A14],implicitevidence$721:reflect.runtime.universe.TypeTag[A15],implicitevidence$722:reflect.runtime.universe.TypeTag[A16],implicitevidence$723:reflect.runtime.universe.TypeTag[A17]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>RT,stageLocation:String)(implicitevidence$689:reflect.runtime.universe.TypeTag[RT],implicitevidence$690:reflect.runtime.universe.TypeTag[A1],implicitevidence$691:reflect.runtime.universe.TypeTag[A2],implicitevidence$692:reflect.runtime.universe.TypeTag[A3],implicitevidence$693:reflect.runtime.universe.TypeTag[A4],implicitevidence$694:reflect.runtime.universe.TypeTag[A5],implicitevidence$695:reflect.runtime.universe.TypeTag[A6],implicitevidence$696:reflect.runtime.universe.TypeTag[A7],implicitevidence$697:reflect.runtime.universe.TypeTag[A8],implicitevidence$698:reflect.runtime.universe.TypeTag[A9],implicitevidence$699:reflect.runtime.universe.TypeTag[A10],implicitevidence$700:reflect.runtime.universe.TypeTag[A11],implicitevidence$701:reflect.runtime.universe.TypeTag[A12],implicitevidence$702:reflect.runtime.universe.TypeTag[A13],implicitevidence$703:reflect.runtime.universe.TypeTag[A14],implicitevidence$704:reflect.runtime.universe.TypeTag[A15],implicitevidence$705:reflect.runtime.universe.TypeTag[A16]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>RT,stageLocation:String)(implicitevidence$673:reflect.runtime.universe.TypeTag[RT],implicitevidence$674:reflect.runtime.universe.TypeTag[A1],implicitevidence$675:reflect.runtime.universe.TypeTag[A2],implicitevidence$676:reflect.runtime.universe.TypeTag[A3],implicitevidence$677:reflect.runtime.universe.TypeTag[A4],implicitevidence$678:reflect.runtime.universe.TypeTag[A5],implicitevidence$679:reflect.runtime.universe.TypeTag[A6],implicitevidence$680:reflect.runtime.universe.TypeTag[A7],implicitevidence$681:reflect.runtime.universe.TypeTag[A8],implicitevidence$682:reflect.runtime.universe.TypeTag[A9],implicitevidence$683:reflect.runtime.universe.TypeTag[A10],implicitevidence$684:reflect.runtime.universe.TypeTag[A11],implicitevidence$685:reflect.runtime.universe.TypeTag[A12],implicitevidence$686:reflect.runtime.universe.TypeTag[A13],implicitevidence$687:reflect.runtime.universe.TypeTag[A14],implicitevidence$688:reflect.runtime.universe.TypeTag[A15]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>RT,stageLocation:String)(implicitevidence$658:reflect.runtime.universe.TypeTag[RT],implicitevidence$659:reflect.runtime.universe.TypeTag[A1],implicitevidence$660:reflect.runtime.universe.TypeTag[A2],implicitevidence$661:reflect.runtime.universe.TypeTag[A3],implicitevidence$662:reflect.runtime.universe.TypeTag[A4],implicitevidence$663:reflect.runtime.universe.TypeTag[A5],implicitevidence$664:reflect.runtime.universe.TypeTag[A6],implicitevidence$665:reflect.runtime.universe.TypeTag[A7],implicitevidence$666:reflect.runtime.universe.TypeTag[A8],implicitevidence$667:reflect.runtime.universe.TypeTag[A9],implicitevidence$668:reflect.runtime.universe.TypeTag[A10],implicitevidence$669:reflect.runtime.universe.TypeTag[A11],implicitevidence$670:reflect.runtime.universe.TypeTag[A12],implicitevidence$671:reflect.runtime.universe.TypeTag[A13],implicitevidence$672:reflect.runtime.universe.TypeTag[A14]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>RT,stageLocation:String)(implicitevidence$644:reflect.runtime.universe.TypeTag[RT],implicitevidence$645:reflect.runtime.universe.TypeTag[A1],implicitevidence$646:reflect.runtime.universe.TypeTag[A2],implicitevidence$647:reflect.runtime.universe.TypeTag[A3],implicitevidence$648:reflect.runtime.universe.TypeTag[A4],implicitevidence$649:reflect.runtime.universe.TypeTag[A5],implicitevidence$650:reflect.runtime.universe.TypeTag[A6],implicitevidence$651:reflect.runtime.universe.TypeTag[A7],implicitevidence$652:reflect.runtime.universe.TypeTag[A8],implicitevidence$653:reflect.runtime.universe.TypeTag[A9],implicitevidence$654:reflect.runtime.universe.TypeTag[A10],implicitevidence$655:reflect.runtime.universe.TypeTag[A11],implicitevidence$656:reflect.runtime.universe.TypeTag[A12],implicitevidence$657:reflect.runtime.universe.TypeTag[A13]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>RT,stageLocation:String)(implicitevidence$631:reflect.runtime.universe.TypeTag[RT],implicitevidence$632:reflect.runtime.universe.TypeTag[A1],implicitevidence$633:reflect.runtime.universe.TypeTag[A2],implicitevidence$634:reflect.runtime.universe.TypeTag[A3],implicitevidence$635:reflect.runtime.universe.TypeTag[A4],implicitevidence$636:reflect.runtime.universe.TypeTag[A5],implicitevidence$637:reflect.runtime.universe.TypeTag[A6],implicitevidence$638:reflect.runtime.universe.TypeTag[A7],implicitevidence$639:reflect.runtime.universe.TypeTag[A8],implicitevidence$640:reflect.runtime.universe.TypeTag[A9],implicitevidence$641:reflect.runtime.universe.TypeTag[A10],implicitevidence$642:reflect.runtime.universe.TypeTag[A11],implicitevidence$643:reflect.runtime.universe.TypeTag[A12]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>RT,stageLocation:String)(implicitevidence$619:reflect.runtime.universe.TypeTag[RT],implicitevidence$620:reflect.runtime.universe.TypeTag[A1],implicitevidence$621:reflect.runtime.universe.TypeTag[A2],implicitevidence$622:reflect.runtime.universe.TypeTag[A3],implicitevidence$623:reflect.runtime.universe.TypeTag[A4],implicitevidence$624:reflect.runtime.universe.TypeTag[A5],implicitevidence$625:reflect.runtime.universe.TypeTag[A6],implicitevidence$626:reflect.runtime.universe.TypeTag[A7],implicitevidence$627:reflect.runtime.universe.TypeTag[A8],implicitevidence$628:reflect.runtime.universe.TypeTag[A9],implicitevidence$629:reflect.runtime.universe.TypeTag[A10],implicitevidence$630:reflect.runtime.universe.TypeTag[A11]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>RT,stageLocation:String)(implicitevidence$608:reflect.runtime.universe.TypeTag[RT],implicitevidence$609:reflect.runtime.universe.TypeTag[A1],implicitevidence$610:reflect.runtime.universe.TypeTag[A2],implicitevidence$611:reflect.runtime.universe.TypeTag[A3],implicitevidence$612:reflect.runtime.universe.TypeTag[A4],implicitevidence$613:reflect.runtime.universe.TypeTag[A5],implicitevidence$614:reflect.runtime.universe.TypeTag[A6],implicitevidence$615:reflect.runtime.universe.TypeTag[A7],implicitevidence$616:reflect.runtime.universe.TypeTag[A8],implicitevidence$617:reflect.runtime.universe.TypeTag[A9],implicitevidence$618:reflect.runtime.universe.TypeTag[A10]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>RT,stageLocation:String)(implicitevidence$598:reflect.runtime.universe.TypeTag[RT],implicitevidence$599:reflect.runtime.universe.TypeTag[A1],implicitevidence$600:reflect.runtime.universe.TypeTag[A2],implicitevidence$601:reflect.runtime.universe.TypeTag[A3],implicitevidence$602:reflect.runtime.universe.TypeTag[A4],implicitevidence$603:reflect.runtime.universe.TypeTag[A5],implicitevidence$604:reflect.runtime.universe.TypeTag[A6],implicitevidence$605:reflect.runtime.universe.TypeTag[A7],implicitevidence$606:reflect.runtime.universe.TypeTag[A8],implicitevidence$607:reflect.runtime.universe.TypeTag[A9]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7,A8](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8)=>RT,stageLocation:String)(implicitevidence$589:reflect.runtime.universe.TypeTag[RT],implicitevidence$590:reflect.runtime.universe.TypeTag[A1],implicitevidence$591:reflect.runtime.universe.TypeTag[A2],implicitevidence$592:reflect.runtime.universe.TypeTag[A3],implicitevidence$593:reflect.runtime.universe.TypeTag[A4],implicitevidence$594:reflect.runtime.universe.TypeTag[A5],implicitevidence$595:reflect.runtime.universe.TypeTag[A6],implicitevidence$596:reflect.runtime.universe.TypeTag[A7],implicitevidence$597:reflect.runtime.universe.TypeTag[A8]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6,A7](name:String,func:(A1,A2,A3,A4,A5,A6,A7)=>RT,stageLocation:String)(implicitevidence$581:reflect.runtime.universe.TypeTag[RT],implicitevidence$582:reflect.runtime.universe.TypeTag[A1],implicitevidence$583:reflect.runtime.universe.TypeTag[A2],implicitevidence$584:reflect.runtime.universe.TypeTag[A3],implicitevidence$585:reflect.runtime.universe.TypeTag[A4],implicitevidence$586:reflect.runtime.universe.TypeTag[A5],implicitevidence$587:reflect.runtime.universe.TypeTag[A6],implicitevidence$588:reflect.runtime.universe.TypeTag[A7]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5,A6](name:String,func:(A1,A2,A3,A4,A5,A6)=>RT,stageLocation:String)(implicitevidence$574:reflect.runtime.universe.TypeTag[RT],implicitevidence$575:reflect.runtime.universe.TypeTag[A1],implicitevidence$576:reflect.runtime.universe.TypeTag[A2],implicitevidence$577:reflect.runtime.universe.TypeTag[A3],implicitevidence$578:reflect.runtime.universe.TypeTag[A4],implicitevidence$579:reflect.runtime.universe.TypeTag[A5],implicitevidence$580:reflect.runtime.universe.TypeTag[A6]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4, A5) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4,A5](name:String,func:(A1,A2,A3,A4,A5)=>RT,stageLocation:String)(implicitevidence$568:reflect.runtime.universe.TypeTag[RT],implicitevidence$569:reflect.runtime.universe.TypeTag[A1],implicitevidence$570:reflect.runtime.universe.TypeTag[A2],implicitevidence$571:reflect.runtime.universe.TypeTag[A3],implicitevidence$572:reflect.runtime.universe.TypeTag[A4],implicitevidence$573:reflect.runtime.universe.TypeTag[A5]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3, A4) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3,A4](name:String,func:(A1,A2,A3,A4)=>RT,stageLocation:String)(implicitevidence$563:reflect.runtime.universe.TypeTag[RT],implicitevidence$564:reflect.runtime.universe.TypeTag[A1],implicitevidence$565:reflect.runtime.universe.TypeTag[A2],implicitevidence$566:reflect.runtime.universe.TypeTag[A3],implicitevidence$567:reflect.runtime.universe.TypeTag[A4]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2, A3) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2,A3](name:String,func:(A1,A2,A3)=>RT,stageLocation:String)(implicitevidence$559:reflect.runtime.universe.TypeTag[RT],implicitevidence$560:reflect.runtime.universe.TypeTag[A1],implicitevidence$561:reflect.runtime.universe.TypeTag[A2],implicitevidence$562:reflect.runtime.universe.TypeTag[A3]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1, A2) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1,A2](name:String,func:(A1,A2)=>RT,stageLocation:String)(implicitevidence$556:reflect.runtime.universe.TypeTag[RT],implicitevidence$557:reflect.runtime.universe.TypeTag[A1],implicitevidence$558:reflect.runtime.universe.TypeTag[A2]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: (A1) ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT,A1](name:String,func:A1=>RT,stageLocation:String)(implicitevidence$554:reflect.runtime.universe.TypeTag[RT],implicitevidence$555:reflect.runtime.universe.TypeTag[A1]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerPermanent", "tail" : "(name: String, func: () ⇒ RT, stageLocation: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerPermanent[RT](name:String,func:()=>RT,stageLocation:String)(implicitevidence$553:reflect.runtime.universe.TypeTag[RT]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21], arg22: scala.reflect.api.JavaUniverse.TypeTag[A22]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22)=>RT)(implicitevidence$530:reflect.runtime.universe.TypeTag[RT],implicitevidence$531:reflect.runtime.universe.TypeTag[A1],implicitevidence$532:reflect.runtime.universe.TypeTag[A2],implicitevidence$533:reflect.runtime.universe.TypeTag[A3],implicitevidence$534:reflect.runtime.universe.TypeTag[A4],implicitevidence$535:reflect.runtime.universe.TypeTag[A5],implicitevidence$536:reflect.runtime.universe.TypeTag[A6],implicitevidence$537:reflect.runtime.universe.TypeTag[A7],implicitevidence$538:reflect.runtime.universe.TypeTag[A8],implicitevidence$539:reflect.runtime.universe.TypeTag[A9],implicitevidence$540:reflect.runtime.universe.TypeTag[A10],implicitevidence$541:reflect.runtime.universe.TypeTag[A11],implicitevidence$542:reflect.runtime.universe.TypeTag[A12],implicitevidence$543:reflect.runtime.universe.TypeTag[A13],implicitevidence$544:reflect.runtime.universe.TypeTag[A14],implicitevidence$545:reflect.runtime.universe.TypeTag[A15],implicitevidence$546:reflect.runtime.universe.TypeTag[A16],implicitevidence$547:reflect.runtime.universe.TypeTag[A17],implicitevidence$548:reflect.runtime.universe.TypeTag[A18],implicitevidence$549:reflect.runtime.universe.TypeTag[A19],implicitevidence$550:reflect.runtime.universe.TypeTag[A20],implicitevidence$551:reflect.runtime.universe.TypeTag[A21],implicitevidence$552:reflect.runtime.universe.TypeTag[A22]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>RT)(implicitevidence$508:reflect.runtime.universe.TypeTag[RT],implicitevidence$509:reflect.runtime.universe.TypeTag[A1],implicitevidence$510:reflect.runtime.universe.TypeTag[A2],implicitevidence$511:reflect.runtime.universe.TypeTag[A3],implicitevidence$512:reflect.runtime.universe.TypeTag[A4],implicitevidence$513:reflect.runtime.universe.TypeTag[A5],implicitevidence$514:reflect.runtime.universe.TypeTag[A6],implicitevidence$515:reflect.runtime.universe.TypeTag[A7],implicitevidence$516:reflect.runtime.universe.TypeTag[A8],implicitevidence$517:reflect.runtime.universe.TypeTag[A9],implicitevidence$518:reflect.runtime.universe.TypeTag[A10],implicitevidence$519:reflect.runtime.universe.TypeTag[A11],implicitevidence$520:reflect.runtime.universe.TypeTag[A12],implicitevidence$521:reflect.runtime.universe.TypeTag[A13],implicitevidence$522:reflect.runtime.universe.TypeTag[A14],implicitevidence$523:reflect.runtime.universe.TypeTag[A15],implicitevidence$524:reflect.runtime.universe.TypeTag[A16],implicitevidence$525:reflect.runtime.universe.TypeTag[A17],implicitevidence$526:reflect.runtime.universe.TypeTag[A18],implicitevidence$527:reflect.runtime.universe.TypeTag[A19],implicitevidence$528:reflect.runtime.universe.TypeTag[A20],implicitevidence$529:reflect.runtime.universe.TypeTag[A21]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>RT)(implicitevidence$487:reflect.runtime.universe.TypeTag[RT],implicitevidence$488:reflect.runtime.universe.TypeTag[A1],implicitevidence$489:reflect.runtime.universe.TypeTag[A2],implicitevidence$490:reflect.runtime.universe.TypeTag[A3],implicitevidence$491:reflect.runtime.universe.TypeTag[A4],implicitevidence$492:reflect.runtime.universe.TypeTag[A5],implicitevidence$493:reflect.runtime.universe.TypeTag[A6],implicitevidence$494:reflect.runtime.universe.TypeTag[A7],implicitevidence$495:reflect.runtime.universe.TypeTag[A8],implicitevidence$496:reflect.runtime.universe.TypeTag[A9],implicitevidence$497:reflect.runtime.universe.TypeTag[A10],implicitevidence$498:reflect.runtime.universe.TypeTag[A11],implicitevidence$499:reflect.runtime.universe.TypeTag[A12],implicitevidence$500:reflect.runtime.universe.TypeTag[A13],implicitevidence$501:reflect.runtime.universe.TypeTag[A14],implicitevidence$502:reflect.runtime.universe.TypeTag[A15],implicitevidence$503:reflect.runtime.universe.TypeTag[A16],implicitevidence$504:reflect.runtime.universe.TypeTag[A17],implicitevidence$505:reflect.runtime.universe.TypeTag[A18],implicitevidence$506:reflect.runtime.universe.TypeTag[A19],implicitevidence$507:reflect.runtime.universe.TypeTag[A20]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>RT)(implicitevidence$467:reflect.runtime.universe.TypeTag[RT],implicitevidence$468:reflect.runtime.universe.TypeTag[A1],implicitevidence$469:reflect.runtime.universe.TypeTag[A2],implicitevidence$470:reflect.runtime.universe.TypeTag[A3],implicitevidence$471:reflect.runtime.universe.TypeTag[A4],implicitevidence$472:reflect.runtime.universe.TypeTag[A5],implicitevidence$473:reflect.runtime.universe.TypeTag[A6],implicitevidence$474:reflect.runtime.universe.TypeTag[A7],implicitevidence$475:reflect.runtime.universe.TypeTag[A8],implicitevidence$476:reflect.runtime.universe.TypeTag[A9],implicitevidence$477:reflect.runtime.universe.TypeTag[A10],implicitevidence$478:reflect.runtime.universe.TypeTag[A11],implicitevidence$479:reflect.runtime.universe.TypeTag[A12],implicitevidence$480:reflect.runtime.universe.TypeTag[A13],implicitevidence$481:reflect.runtime.universe.TypeTag[A14],implicitevidence$482:reflect.runtime.universe.TypeTag[A15],implicitevidence$483:reflect.runtime.universe.TypeTag[A16],implicitevidence$484:reflect.runtime.universe.TypeTag[A17],implicitevidence$485:reflect.runtime.universe.TypeTag[A18],implicitevidence$486:reflect.runtime.universe.TypeTag[A19]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>RT)(implicitevidence$448:reflect.runtime.universe.TypeTag[RT],implicitevidence$449:reflect.runtime.universe.TypeTag[A1],implicitevidence$450:reflect.runtime.universe.TypeTag[A2],implicitevidence$451:reflect.runtime.universe.TypeTag[A3],implicitevidence$452:reflect.runtime.universe.TypeTag[A4],implicitevidence$453:reflect.runtime.universe.TypeTag[A5],implicitevidence$454:reflect.runtime.universe.TypeTag[A6],implicitevidence$455:reflect.runtime.universe.TypeTag[A7],implicitevidence$456:reflect.runtime.universe.TypeTag[A8],implicitevidence$457:reflect.runtime.universe.TypeTag[A9],implicitevidence$458:reflect.runtime.universe.TypeTag[A10],implicitevidence$459:reflect.runtime.universe.TypeTag[A11],implicitevidence$460:reflect.runtime.universe.TypeTag[A12],implicitevidence$461:reflect.runtime.universe.TypeTag[A13],implicitevidence$462:reflect.runtime.universe.TypeTag[A14],implicitevidence$463:reflect.runtime.universe.TypeTag[A15],implicitevidence$464:reflect.runtime.universe.TypeTag[A16],implicitevidence$465:reflect.runtime.universe.TypeTag[A17],implicitevidence$466:reflect.runtime.universe.TypeTag[A18]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>RT)(implicitevidence$430:reflect.runtime.universe.TypeTag[RT],implicitevidence$431:reflect.runtime.universe.TypeTag[A1],implicitevidence$432:reflect.runtime.universe.TypeTag[A2],implicitevidence$433:reflect.runtime.universe.TypeTag[A3],implicitevidence$434:reflect.runtime.universe.TypeTag[A4],implicitevidence$435:reflect.runtime.universe.TypeTag[A5],implicitevidence$436:reflect.runtime.universe.TypeTag[A6],implicitevidence$437:reflect.runtime.universe.TypeTag[A7],implicitevidence$438:reflect.runtime.universe.TypeTag[A8],implicitevidence$439:reflect.runtime.universe.TypeTag[A9],implicitevidence$440:reflect.runtime.universe.TypeTag[A10],implicitevidence$441:reflect.runtime.universe.TypeTag[A11],implicitevidence$442:reflect.runtime.universe.TypeTag[A12],implicitevidence$443:reflect.runtime.universe.TypeTag[A13],implicitevidence$444:reflect.runtime.universe.TypeTag[A14],implicitevidence$445:reflect.runtime.universe.TypeTag[A15],implicitevidence$446:reflect.runtime.universe.TypeTag[A16],implicitevidence$447:reflect.runtime.universe.TypeTag[A17]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>RT)(implicitevidence$413:reflect.runtime.universe.TypeTag[RT],implicitevidence$414:reflect.runtime.universe.TypeTag[A1],implicitevidence$415:reflect.runtime.universe.TypeTag[A2],implicitevidence$416:reflect.runtime.universe.TypeTag[A3],implicitevidence$417:reflect.runtime.universe.TypeTag[A4],implicitevidence$418:reflect.runtime.universe.TypeTag[A5],implicitevidence$419:reflect.runtime.universe.TypeTag[A6],implicitevidence$420:reflect.runtime.universe.TypeTag[A7],implicitevidence$421:reflect.runtime.universe.TypeTag[A8],implicitevidence$422:reflect.runtime.universe.TypeTag[A9],implicitevidence$423:reflect.runtime.universe.TypeTag[A10],implicitevidence$424:reflect.runtime.universe.TypeTag[A11],implicitevidence$425:reflect.runtime.universe.TypeTag[A12],implicitevidence$426:reflect.runtime.universe.TypeTag[A13],implicitevidence$427:reflect.runtime.universe.TypeTag[A14],implicitevidence$428:reflect.runtime.universe.TypeTag[A15],implicitevidence$429:reflect.runtime.universe.TypeTag[A16]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>RT)(implicitevidence$397:reflect.runtime.universe.TypeTag[RT],implicitevidence$398:reflect.runtime.universe.TypeTag[A1],implicitevidence$399:reflect.runtime.universe.TypeTag[A2],implicitevidence$400:reflect.runtime.universe.TypeTag[A3],implicitevidence$401:reflect.runtime.universe.TypeTag[A4],implicitevidence$402:reflect.runtime.universe.TypeTag[A5],implicitevidence$403:reflect.runtime.universe.TypeTag[A6],implicitevidence$404:reflect.runtime.universe.TypeTag[A7],implicitevidence$405:reflect.runtime.universe.TypeTag[A8],implicitevidence$406:reflect.runtime.universe.TypeTag[A9],implicitevidence$407:reflect.runtime.universe.TypeTag[A10],implicitevidence$408:reflect.runtime.universe.TypeTag[A11],implicitevidence$409:reflect.runtime.universe.TypeTag[A12],implicitevidence$410:reflect.runtime.universe.TypeTag[A13],implicitevidence$411:reflect.runtime.universe.TypeTag[A14],implicitevidence$412:reflect.runtime.universe.TypeTag[A15]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>RT)(implicitevidence$382:reflect.runtime.universe.TypeTag[RT],implicitevidence$383:reflect.runtime.universe.TypeTag[A1],implicitevidence$384:reflect.runtime.universe.TypeTag[A2],implicitevidence$385:reflect.runtime.universe.TypeTag[A3],implicitevidence$386:reflect.runtime.universe.TypeTag[A4],implicitevidence$387:reflect.runtime.universe.TypeTag[A5],implicitevidence$388:reflect.runtime.universe.TypeTag[A6],implicitevidence$389:reflect.runtime.universe.TypeTag[A7],implicitevidence$390:reflect.runtime.universe.TypeTag[A8],implicitevidence$391:reflect.runtime.universe.TypeTag[A9],implicitevidence$392:reflect.runtime.universe.TypeTag[A10],implicitevidence$393:reflect.runtime.universe.TypeTag[A11],implicitevidence$394:reflect.runtime.universe.TypeTag[A12],implicitevidence$395:reflect.runtime.universe.TypeTag[A13],implicitevidence$396:reflect.runtime.universe.TypeTag[A14]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>RT)(implicitevidence$368:reflect.runtime.universe.TypeTag[RT],implicitevidence$369:reflect.runtime.universe.TypeTag[A1],implicitevidence$370:reflect.runtime.universe.TypeTag[A2],implicitevidence$371:reflect.runtime.universe.TypeTag[A3],implicitevidence$372:reflect.runtime.universe.TypeTag[A4],implicitevidence$373:reflect.runtime.universe.TypeTag[A5],implicitevidence$374:reflect.runtime.universe.TypeTag[A6],implicitevidence$375:reflect.runtime.universe.TypeTag[A7],implicitevidence$376:reflect.runtime.universe.TypeTag[A8],implicitevidence$377:reflect.runtime.universe.TypeTag[A9],implicitevidence$378:reflect.runtime.universe.TypeTag[A10],implicitevidence$379:reflect.runtime.universe.TypeTag[A11],implicitevidence$380:reflect.runtime.universe.TypeTag[A12],implicitevidence$381:reflect.runtime.universe.TypeTag[A13]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>RT)(implicitevidence$355:reflect.runtime.universe.TypeTag[RT],implicitevidence$356:reflect.runtime.universe.TypeTag[A1],implicitevidence$357:reflect.runtime.universe.TypeTag[A2],implicitevidence$358:reflect.runtime.universe.TypeTag[A3],implicitevidence$359:reflect.runtime.universe.TypeTag[A4],implicitevidence$360:reflect.runtime.universe.TypeTag[A5],implicitevidence$361:reflect.runtime.universe.TypeTag[A6],implicitevidence$362:reflect.runtime.universe.TypeTag[A7],implicitevidence$363:reflect.runtime.universe.TypeTag[A8],implicitevidence$364:reflect.runtime.universe.TypeTag[A9],implicitevidence$365:reflect.runtime.universe.TypeTag[A10],implicitevidence$366:reflect.runtime.universe.TypeTag[A11],implicitevidence$367:reflect.runtime.universe.TypeTag[A12]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>RT)(implicitevidence$343:reflect.runtime.universe.TypeTag[RT],implicitevidence$344:reflect.runtime.universe.TypeTag[A1],implicitevidence$345:reflect.runtime.universe.TypeTag[A2],implicitevidence$346:reflect.runtime.universe.TypeTag[A3],implicitevidence$347:reflect.runtime.universe.TypeTag[A4],implicitevidence$348:reflect.runtime.universe.TypeTag[A5],implicitevidence$349:reflect.runtime.universe.TypeTag[A6],implicitevidence$350:reflect.runtime.universe.TypeTag[A7],implicitevidence$351:reflect.runtime.universe.TypeTag[A8],implicitevidence$352:reflect.runtime.universe.TypeTag[A9],implicitevidence$353:reflect.runtime.universe.TypeTag[A10],implicitevidence$354:reflect.runtime.universe.TypeTag[A11]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>RT)(implicitevidence$332:reflect.runtime.universe.TypeTag[RT],implicitevidence$333:reflect.runtime.universe.TypeTag[A1],implicitevidence$334:reflect.runtime.universe.TypeTag[A2],implicitevidence$335:reflect.runtime.universe.TypeTag[A3],implicitevidence$336:reflect.runtime.universe.TypeTag[A4],implicitevidence$337:reflect.runtime.universe.TypeTag[A5],implicitevidence$338:reflect.runtime.universe.TypeTag[A6],implicitevidence$339:reflect.runtime.universe.TypeTag[A7],implicitevidence$340:reflect.runtime.universe.TypeTag[A8],implicitevidence$341:reflect.runtime.universe.TypeTag[A9],implicitevidence$342:reflect.runtime.universe.TypeTag[A10]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>RT)(implicitevidence$322:reflect.runtime.universe.TypeTag[RT],implicitevidence$323:reflect.runtime.universe.TypeTag[A1],implicitevidence$324:reflect.runtime.universe.TypeTag[A2],implicitevidence$325:reflect.runtime.universe.TypeTag[A3],implicitevidence$326:reflect.runtime.universe.TypeTag[A4],implicitevidence$327:reflect.runtime.universe.TypeTag[A5],implicitevidence$328:reflect.runtime.universe.TypeTag[A6],implicitevidence$329:reflect.runtime.universe.TypeTag[A7],implicitevidence$330:reflect.runtime.universe.TypeTag[A8],implicitevidence$331:reflect.runtime.universe.TypeTag[A9]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7, A8) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8](name:String,func:(A1,A2,A3,A4,A5,A6,A7,A8)=>RT)(implicitevidence$313:reflect.runtime.universe.TypeTag[RT],implicitevidence$314:reflect.runtime.universe.TypeTag[A1],implicitevidence$315:reflect.runtime.universe.TypeTag[A2],implicitevidence$316:reflect.runtime.universe.TypeTag[A3],implicitevidence$317:reflect.runtime.universe.TypeTag[A4],implicitevidence$318:reflect.runtime.universe.TypeTag[A5],implicitevidence$319:reflect.runtime.universe.TypeTag[A6],implicitevidence$320:reflect.runtime.universe.TypeTag[A7],implicitevidence$321:reflect.runtime.universe.TypeTag[A8]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6, A7) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7](name:String,func:(A1,A2,A3,A4,A5,A6,A7)=>RT)(implicitevidence$305:reflect.runtime.universe.TypeTag[RT],implicitevidence$306:reflect.runtime.universe.TypeTag[A1],implicitevidence$307:reflect.runtime.universe.TypeTag[A2],implicitevidence$308:reflect.runtime.universe.TypeTag[A3],implicitevidence$309:reflect.runtime.universe.TypeTag[A4],implicitevidence$310:reflect.runtime.universe.TypeTag[A5],implicitevidence$311:reflect.runtime.universe.TypeTag[A6],implicitevidence$312:reflect.runtime.universe.TypeTag[A7]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5, A6) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6](name:String,func:(A1,A2,A3,A4,A5,A6)=>RT)(implicitevidence$298:reflect.runtime.universe.TypeTag[RT],implicitevidence$299:reflect.runtime.universe.TypeTag[A1],implicitevidence$300:reflect.runtime.universe.TypeTag[A2],implicitevidence$301:reflect.runtime.universe.TypeTag[A3],implicitevidence$302:reflect.runtime.universe.TypeTag[A4],implicitevidence$303:reflect.runtime.universe.TypeTag[A5],implicitevidence$304:reflect.runtime.universe.TypeTag[A6]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4, A5) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5](name:String,func:(A1,A2,A3,A4,A5)=>RT)(implicitevidence$292:reflect.runtime.universe.TypeTag[RT],implicitevidence$293:reflect.runtime.universe.TypeTag[A1],implicitevidence$294:reflect.runtime.universe.TypeTag[A2],implicitevidence$295:reflect.runtime.universe.TypeTag[A3],implicitevidence$296:reflect.runtime.universe.TypeTag[A4],implicitevidence$297:reflect.runtime.universe.TypeTag[A5]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3, A4) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4](name:String,func:(A1,A2,A3,A4)=>RT)(implicitevidence$287:reflect.runtime.universe.TypeTag[RT],implicitevidence$288:reflect.runtime.universe.TypeTag[A1],implicitevidence$289:reflect.runtime.universe.TypeTag[A2],implicitevidence$290:reflect.runtime.universe.TypeTag[A3],implicitevidence$291:reflect.runtime.universe.TypeTag[A4]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2, A3) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3](name:String,func:(A1,A2,A3)=>RT)(implicitevidence$283:reflect.runtime.universe.TypeTag[RT],implicitevidence$284:reflect.runtime.universe.TypeTag[A1],implicitevidence$285:reflect.runtime.universe.TypeTag[A2],implicitevidence$286:reflect.runtime.universe.TypeTag[A3]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1, A2) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2](name:String,func:(A1,A2)=>RT)(implicitevidence$280:reflect.runtime.universe.TypeTag[RT],implicitevidence$281:reflect.runtime.universe.TypeTag[A1],implicitevidence$282:reflect.runtime.universe.TypeTag[A2]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: (A1) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1](name:String,func:A1=>RT)(implicitevidence$278:reflect.runtime.universe.TypeTag[RT],implicitevidence$279:reflect.runtime.universe.TypeTag[A1]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(name: String, func: () ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT](name:String,func:()=>RT)(implicitevidence$277:reflect.runtime.universe.TypeTag[RT]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21], arg22: scala.reflect.api.JavaUniverse.TypeTag[A22]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22)=>RT)(implicitevidence$254:reflect.runtime.universe.TypeTag[RT],implicitevidence$255:reflect.runtime.universe.TypeTag[A1],implicitevidence$256:reflect.runtime.universe.TypeTag[A2],implicitevidence$257:reflect.runtime.universe.TypeTag[A3],implicitevidence$258:reflect.runtime.universe.TypeTag[A4],implicitevidence$259:reflect.runtime.universe.TypeTag[A5],implicitevidence$260:reflect.runtime.universe.TypeTag[A6],implicitevidence$261:reflect.runtime.universe.TypeTag[A7],implicitevidence$262:reflect.runtime.universe.TypeTag[A8],implicitevidence$263:reflect.runtime.universe.TypeTag[A9],implicitevidence$264:reflect.runtime.universe.TypeTag[A10],implicitevidence$265:reflect.runtime.universe.TypeTag[A11],implicitevidence$266:reflect.runtime.universe.TypeTag[A12],implicitevidence$267:reflect.runtime.universe.TypeTag[A13],implicitevidence$268:reflect.runtime.universe.TypeTag[A14],implicitevidence$269:reflect.runtime.universe.TypeTag[A15],implicitevidence$270:reflect.runtime.universe.TypeTag[A16],implicitevidence$271:reflect.runtime.universe.TypeTag[A17],implicitevidence$272:reflect.runtime.universe.TypeTag[A18],implicitevidence$273:reflect.runtime.universe.TypeTag[A19],implicitevidence$274:reflect.runtime.universe.TypeTag[A20],implicitevidence$275:reflect.runtime.universe.TypeTag[A21],implicitevidence$276:reflect.runtime.universe.TypeTag[A22]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20], arg21: scala.reflect.api.JavaUniverse.TypeTag[A21]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>RT)(implicitevidence$232:reflect.runtime.universe.TypeTag[RT],implicitevidence$233:reflect.runtime.universe.TypeTag[A1],implicitevidence$234:reflect.runtime.universe.TypeTag[A2],implicitevidence$235:reflect.runtime.universe.TypeTag[A3],implicitevidence$236:reflect.runtime.universe.TypeTag[A4],implicitevidence$237:reflect.runtime.universe.TypeTag[A5],implicitevidence$238:reflect.runtime.universe.TypeTag[A6],implicitevidence$239:reflect.runtime.universe.TypeTag[A7],implicitevidence$240:reflect.runtime.universe.TypeTag[A8],implicitevidence$241:reflect.runtime.universe.TypeTag[A9],implicitevidence$242:reflect.runtime.universe.TypeTag[A10],implicitevidence$243:reflect.runtime.universe.TypeTag[A11],implicitevidence$244:reflect.runtime.universe.TypeTag[A12],implicitevidence$245:reflect.runtime.universe.TypeTag[A13],implicitevidence$246:reflect.runtime.universe.TypeTag[A14],implicitevidence$247:reflect.runtime.universe.TypeTag[A15],implicitevidence$248:reflect.runtime.universe.TypeTag[A16],implicitevidence$249:reflect.runtime.universe.TypeTag[A17],implicitevidence$250:reflect.runtime.universe.TypeTag[A18],implicitevidence$251:reflect.runtime.universe.TypeTag[A19],implicitevidence$252:reflect.runtime.universe.TypeTag[A20],implicitevidence$253:reflect.runtime.universe.TypeTag[A21]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19], arg20: scala.reflect.api.JavaUniverse.TypeTag[A20]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>RT)(implicitevidence$211:reflect.runtime.universe.TypeTag[RT],implicitevidence$212:reflect.runtime.universe.TypeTag[A1],implicitevidence$213:reflect.runtime.universe.TypeTag[A2],implicitevidence$214:reflect.runtime.universe.TypeTag[A3],implicitevidence$215:reflect.runtime.universe.TypeTag[A4],implicitevidence$216:reflect.runtime.universe.TypeTag[A5],implicitevidence$217:reflect.runtime.universe.TypeTag[A6],implicitevidence$218:reflect.runtime.universe.TypeTag[A7],implicitevidence$219:reflect.runtime.universe.TypeTag[A8],implicitevidence$220:reflect.runtime.universe.TypeTag[A9],implicitevidence$221:reflect.runtime.universe.TypeTag[A10],implicitevidence$222:reflect.runtime.universe.TypeTag[A11],implicitevidence$223:reflect.runtime.universe.TypeTag[A12],implicitevidence$224:reflect.runtime.universe.TypeTag[A13],implicitevidence$225:reflect.runtime.universe.TypeTag[A14],implicitevidence$226:reflect.runtime.universe.TypeTag[A15],implicitevidence$227:reflect.runtime.universe.TypeTag[A16],implicitevidence$228:reflect.runtime.universe.TypeTag[A17],implicitevidence$229:reflect.runtime.universe.TypeTag[A18],implicitevidence$230:reflect.runtime.universe.TypeTag[A19],implicitevidence$231:reflect.runtime.universe.TypeTag[A20]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18], arg19: scala.reflect.api.JavaUniverse.TypeTag[A19]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>RT)(implicitevidence$191:reflect.runtime.universe.TypeTag[RT],implicitevidence$192:reflect.runtime.universe.TypeTag[A1],implicitevidence$193:reflect.runtime.universe.TypeTag[A2],implicitevidence$194:reflect.runtime.universe.TypeTag[A3],implicitevidence$195:reflect.runtime.universe.TypeTag[A4],implicitevidence$196:reflect.runtime.universe.TypeTag[A5],implicitevidence$197:reflect.runtime.universe.TypeTag[A6],implicitevidence$198:reflect.runtime.universe.TypeTag[A7],implicitevidence$199:reflect.runtime.universe.TypeTag[A8],implicitevidence$200:reflect.runtime.universe.TypeTag[A9],implicitevidence$201:reflect.runtime.universe.TypeTag[A10],implicitevidence$202:reflect.runtime.universe.TypeTag[A11],implicitevidence$203:reflect.runtime.universe.TypeTag[A12],implicitevidence$204:reflect.runtime.universe.TypeTag[A13],implicitevidence$205:reflect.runtime.universe.TypeTag[A14],implicitevidence$206:reflect.runtime.universe.TypeTag[A15],implicitevidence$207:reflect.runtime.universe.TypeTag[A16],implicitevidence$208:reflect.runtime.universe.TypeTag[A17],implicitevidence$209:reflect.runtime.universe.TypeTag[A18],implicitevidence$210:reflect.runtime.universe.TypeTag[A19]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17], arg18: scala.reflect.api.JavaUniverse.TypeTag[A18]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>RT)(implicitevidence$172:reflect.runtime.universe.TypeTag[RT],implicitevidence$173:reflect.runtime.universe.TypeTag[A1],implicitevidence$174:reflect.runtime.universe.TypeTag[A2],implicitevidence$175:reflect.runtime.universe.TypeTag[A3],implicitevidence$176:reflect.runtime.universe.TypeTag[A4],implicitevidence$177:reflect.runtime.universe.TypeTag[A5],implicitevidence$178:reflect.runtime.universe.TypeTag[A6],implicitevidence$179:reflect.runtime.universe.TypeTag[A7],implicitevidence$180:reflect.runtime.universe.TypeTag[A8],implicitevidence$181:reflect.runtime.universe.TypeTag[A9],implicitevidence$182:reflect.runtime.universe.TypeTag[A10],implicitevidence$183:reflect.runtime.universe.TypeTag[A11],implicitevidence$184:reflect.runtime.universe.TypeTag[A12],implicitevidence$185:reflect.runtime.universe.TypeTag[A13],implicitevidence$186:reflect.runtime.universe.TypeTag[A14],implicitevidence$187:reflect.runtime.universe.TypeTag[A15],implicitevidence$188:reflect.runtime.universe.TypeTag[A16],implicitevidence$189:reflect.runtime.universe.TypeTag[A17],implicitevidence$190:reflect.runtime.universe.TypeTag[A18]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16], arg17: scala.reflect.api.JavaUniverse.TypeTag[A17]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>RT)(implicitevidence$154:reflect.runtime.universe.TypeTag[RT],implicitevidence$155:reflect.runtime.universe.TypeTag[A1],implicitevidence$156:reflect.runtime.universe.TypeTag[A2],implicitevidence$157:reflect.runtime.universe.TypeTag[A3],implicitevidence$158:reflect.runtime.universe.TypeTag[A4],implicitevidence$159:reflect.runtime.universe.TypeTag[A5],implicitevidence$160:reflect.runtime.universe.TypeTag[A6],implicitevidence$161:reflect.runtime.universe.TypeTag[A7],implicitevidence$162:reflect.runtime.universe.TypeTag[A8],implicitevidence$163:reflect.runtime.universe.TypeTag[A9],implicitevidence$164:reflect.runtime.universe.TypeTag[A10],implicitevidence$165:reflect.runtime.universe.TypeTag[A11],implicitevidence$166:reflect.runtime.universe.TypeTag[A12],implicitevidence$167:reflect.runtime.universe.TypeTag[A13],implicitevidence$168:reflect.runtime.universe.TypeTag[A14],implicitevidence$169:reflect.runtime.universe.TypeTag[A15],implicitevidence$170:reflect.runtime.universe.TypeTag[A16],implicitevidence$171:reflect.runtime.universe.TypeTag[A17]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15], arg16: scala.reflect.api.JavaUniverse.TypeTag[A16]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>RT)(implicitevidence$137:reflect.runtime.universe.TypeTag[RT],implicitevidence$138:reflect.runtime.universe.TypeTag[A1],implicitevidence$139:reflect.runtime.universe.TypeTag[A2],implicitevidence$140:reflect.runtime.universe.TypeTag[A3],implicitevidence$141:reflect.runtime.universe.TypeTag[A4],implicitevidence$142:reflect.runtime.universe.TypeTag[A5],implicitevidence$143:reflect.runtime.universe.TypeTag[A6],implicitevidence$144:reflect.runtime.universe.TypeTag[A7],implicitevidence$145:reflect.runtime.universe.TypeTag[A8],implicitevidence$146:reflect.runtime.universe.TypeTag[A9],implicitevidence$147:reflect.runtime.universe.TypeTag[A10],implicitevidence$148:reflect.runtime.universe.TypeTag[A11],implicitevidence$149:reflect.runtime.universe.TypeTag[A12],implicitevidence$150:reflect.runtime.universe.TypeTag[A13],implicitevidence$151:reflect.runtime.universe.TypeTag[A14],implicitevidence$152:reflect.runtime.universe.TypeTag[A15],implicitevidence$153:reflect.runtime.universe.TypeTag[A16]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14], arg15: scala.reflect.api.JavaUniverse.TypeTag[A15]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>RT)(implicitevidence$121:reflect.runtime.universe.TypeTag[RT],implicitevidence$122:reflect.runtime.universe.TypeTag[A1],implicitevidence$123:reflect.runtime.universe.TypeTag[A2],implicitevidence$124:reflect.runtime.universe.TypeTag[A3],implicitevidence$125:reflect.runtime.universe.TypeTag[A4],implicitevidence$126:reflect.runtime.universe.TypeTag[A5],implicitevidence$127:reflect.runtime.universe.TypeTag[A6],implicitevidence$128:reflect.runtime.universe.TypeTag[A7],implicitevidence$129:reflect.runtime.universe.TypeTag[A8],implicitevidence$130:reflect.runtime.universe.TypeTag[A9],implicitevidence$131:reflect.runtime.universe.TypeTag[A10],implicitevidence$132:reflect.runtime.universe.TypeTag[A11],implicitevidence$133:reflect.runtime.universe.TypeTag[A12],implicitevidence$134:reflect.runtime.universe.TypeTag[A13],implicitevidence$135:reflect.runtime.universe.TypeTag[A14],implicitevidence$136:reflect.runtime.universe.TypeTag[A15]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13], arg14: scala.reflect.api.JavaUniverse.TypeTag[A14]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>RT)(implicitevidence$106:reflect.runtime.universe.TypeTag[RT],implicitevidence$107:reflect.runtime.universe.TypeTag[A1],implicitevidence$108:reflect.runtime.universe.TypeTag[A2],implicitevidence$109:reflect.runtime.universe.TypeTag[A3],implicitevidence$110:reflect.runtime.universe.TypeTag[A4],implicitevidence$111:reflect.runtime.universe.TypeTag[A5],implicitevidence$112:reflect.runtime.universe.TypeTag[A6],implicitevidence$113:reflect.runtime.universe.TypeTag[A7],implicitevidence$114:reflect.runtime.universe.TypeTag[A8],implicitevidence$115:reflect.runtime.universe.TypeTag[A9],implicitevidence$116:reflect.runtime.universe.TypeTag[A10],implicitevidence$117:reflect.runtime.universe.TypeTag[A11],implicitevidence$118:reflect.runtime.universe.TypeTag[A12],implicitevidence$119:reflect.runtime.universe.TypeTag[A13],implicitevidence$120:reflect.runtime.universe.TypeTag[A14]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12], arg13: scala.reflect.api.JavaUniverse.TypeTag[A13]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>RT)(implicitevidence$92:reflect.runtime.universe.TypeTag[RT],implicitevidence$93:reflect.runtime.universe.TypeTag[A1],implicitevidence$94:reflect.runtime.universe.TypeTag[A2],implicitevidence$95:reflect.runtime.universe.TypeTag[A3],implicitevidence$96:reflect.runtime.universe.TypeTag[A4],implicitevidence$97:reflect.runtime.universe.TypeTag[A5],implicitevidence$98:reflect.runtime.universe.TypeTag[A6],implicitevidence$99:reflect.runtime.universe.TypeTag[A7],implicitevidence$100:reflect.runtime.universe.TypeTag[A8],implicitevidence$101:reflect.runtime.universe.TypeTag[A9],implicitevidence$102:reflect.runtime.universe.TypeTag[A10],implicitevidence$103:reflect.runtime.universe.TypeTag[A11],implicitevidence$104:reflect.runtime.universe.TypeTag[A12],implicitevidence$105:reflect.runtime.universe.TypeTag[A13]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11], arg12: scala.reflect.api.JavaUniverse.TypeTag[A12]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>RT)(implicitevidence$79:reflect.runtime.universe.TypeTag[RT],implicitevidence$80:reflect.runtime.universe.TypeTag[A1],implicitevidence$81:reflect.runtime.universe.TypeTag[A2],implicitevidence$82:reflect.runtime.universe.TypeTag[A3],implicitevidence$83:reflect.runtime.universe.TypeTag[A4],implicitevidence$84:reflect.runtime.universe.TypeTag[A5],implicitevidence$85:reflect.runtime.universe.TypeTag[A6],implicitevidence$86:reflect.runtime.universe.TypeTag[A7],implicitevidence$87:reflect.runtime.universe.TypeTag[A8],implicitevidence$88:reflect.runtime.universe.TypeTag[A9],implicitevidence$89:reflect.runtime.universe.TypeTag[A10],implicitevidence$90:reflect.runtime.universe.TypeTag[A11],implicitevidence$91:reflect.runtime.universe.TypeTag[A12]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10], arg11: scala.reflect.api.JavaUniverse.TypeTag[A11]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>RT)(implicitevidence$67:reflect.runtime.universe.TypeTag[RT],implicitevidence$68:reflect.runtime.universe.TypeTag[A1],implicitevidence$69:reflect.runtime.universe.TypeTag[A2],implicitevidence$70:reflect.runtime.universe.TypeTag[A3],implicitevidence$71:reflect.runtime.universe.TypeTag[A4],implicitevidence$72:reflect.runtime.universe.TypeTag[A5],implicitevidence$73:reflect.runtime.universe.TypeTag[A6],implicitevidence$74:reflect.runtime.universe.TypeTag[A7],implicitevidence$75:reflect.runtime.universe.TypeTag[A8],implicitevidence$76:reflect.runtime.universe.TypeTag[A9],implicitevidence$77:reflect.runtime.universe.TypeTag[A10],implicitevidence$78:reflect.runtime.universe.TypeTag[A11]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9], arg10: scala.reflect.api.JavaUniverse.TypeTag[A10]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>RT)(implicitevidence$56:reflect.runtime.universe.TypeTag[RT],implicitevidence$57:reflect.runtime.universe.TypeTag[A1],implicitevidence$58:reflect.runtime.universe.TypeTag[A2],implicitevidence$59:reflect.runtime.universe.TypeTag[A3],implicitevidence$60:reflect.runtime.universe.TypeTag[A4],implicitevidence$61:reflect.runtime.universe.TypeTag[A5],implicitevidence$62:reflect.runtime.universe.TypeTag[A6],implicitevidence$63:reflect.runtime.universe.TypeTag[A7],implicitevidence$64:reflect.runtime.universe.TypeTag[A8],implicitevidence$65:reflect.runtime.universe.TypeTag[A9],implicitevidence$66:reflect.runtime.universe.TypeTag[A10]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8], arg9: scala.reflect.api.JavaUniverse.TypeTag[A9]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8,A9](func:(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>RT)(implicitevidence$46:reflect.runtime.universe.TypeTag[RT],implicitevidence$47:reflect.runtime.universe.TypeTag[A1],implicitevidence$48:reflect.runtime.universe.TypeTag[A2],implicitevidence$49:reflect.runtime.universe.TypeTag[A3],implicitevidence$50:reflect.runtime.universe.TypeTag[A4],implicitevidence$51:reflect.runtime.universe.TypeTag[A5],implicitevidence$52:reflect.runtime.universe.TypeTag[A6],implicitevidence$53:reflect.runtime.universe.TypeTag[A7],implicitevidence$54:reflect.runtime.universe.TypeTag[A8],implicitevidence$55:reflect.runtime.universe.TypeTag[A9]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7, A8) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7], arg8: scala.reflect.api.JavaUniverse.TypeTag[A8]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7,A8](func:(A1,A2,A3,A4,A5,A6,A7,A8)=>RT)(implicitevidence$37:reflect.runtime.universe.TypeTag[RT],implicitevidence$38:reflect.runtime.universe.TypeTag[A1],implicitevidence$39:reflect.runtime.universe.TypeTag[A2],implicitevidence$40:reflect.runtime.universe.TypeTag[A3],implicitevidence$41:reflect.runtime.universe.TypeTag[A4],implicitevidence$42:reflect.runtime.universe.TypeTag[A5],implicitevidence$43:reflect.runtime.universe.TypeTag[A6],implicitevidence$44:reflect.runtime.universe.TypeTag[A7],implicitevidence$45:reflect.runtime.universe.TypeTag[A8]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6, A7) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6], arg7: scala.reflect.api.JavaUniverse.TypeTag[A7]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6,A7](func:(A1,A2,A3,A4,A5,A6,A7)=>RT)(implicitevidence$29:reflect.runtime.universe.TypeTag[RT],implicitevidence$30:reflect.runtime.universe.TypeTag[A1],implicitevidence$31:reflect.runtime.universe.TypeTag[A2],implicitevidence$32:reflect.runtime.universe.TypeTag[A3],implicitevidence$33:reflect.runtime.universe.TypeTag[A4],implicitevidence$34:reflect.runtime.universe.TypeTag[A5],implicitevidence$35:reflect.runtime.universe.TypeTag[A6],implicitevidence$36:reflect.runtime.universe.TypeTag[A7]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5, A6) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5], arg6: scala.reflect.api.JavaUniverse.TypeTag[A6]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5,A6](func:(A1,A2,A3,A4,A5,A6)=>RT)(implicitevidence$22:reflect.runtime.universe.TypeTag[RT],implicitevidence$23:reflect.runtime.universe.TypeTag[A1],implicitevidence$24:reflect.runtime.universe.TypeTag[A2],implicitevidence$25:reflect.runtime.universe.TypeTag[A3],implicitevidence$26:reflect.runtime.universe.TypeTag[A4],implicitevidence$27:reflect.runtime.universe.TypeTag[A5],implicitevidence$28:reflect.runtime.universe.TypeTag[A6]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4, A5) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4], arg5: scala.reflect.api.JavaUniverse.TypeTag[A5]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4,A5](func:(A1,A2,A3,A4,A5)=>RT)(implicitevidence$16:reflect.runtime.universe.TypeTag[RT],implicitevidence$17:reflect.runtime.universe.TypeTag[A1],implicitevidence$18:reflect.runtime.universe.TypeTag[A2],implicitevidence$19:reflect.runtime.universe.TypeTag[A3],implicitevidence$20:reflect.runtime.universe.TypeTag[A4],implicitevidence$21:reflect.runtime.universe.TypeTag[A5]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3, A4) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3], arg4: scala.reflect.api.JavaUniverse.TypeTag[A4]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3,A4](func:(A1,A2,A3,A4)=>RT)(implicitevidence$11:reflect.runtime.universe.TypeTag[RT],implicitevidence$12:reflect.runtime.universe.TypeTag[A1],implicitevidence$13:reflect.runtime.universe.TypeTag[A2],implicitevidence$14:reflect.runtime.universe.TypeTag[A3],implicitevidence$15:reflect.runtime.universe.TypeTag[A4]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2, A3) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2], arg3: scala.reflect.api.JavaUniverse.TypeTag[A3]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2,A3](func:(A1,A2,A3)=>RT)(implicitevidence$7:reflect.runtime.universe.TypeTag[RT],implicitevidence$8:reflect.runtime.universe.TypeTag[A1],implicitevidence$9:reflect.runtime.universe.TypeTag[A2],implicitevidence$10:reflect.runtime.universe.TypeTag[A3]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1, A2) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1], arg2: scala.reflect.api.JavaUniverse.TypeTag[A2]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1,A2](func:(A1,A2)=>RT)(implicitevidence$4:reflect.runtime.universe.TypeTag[RT],implicitevidence$5:reflect.runtime.universe.TypeTag[A1],implicitevidence$6:reflect.runtime.universe.TypeTag[A2]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: (A1) ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT], arg1: scala.reflect.api.JavaUniverse.TypeTag[A1]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT,A1](func:A1=>RT)(implicitevidence$2:reflect.runtime.universe.TypeTag[RT],implicitevidence$3:reflect.runtime.universe.TypeTag[A1]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(func: () ⇒ RT)(arg0: scala.reflect.api.JavaUniverse.TypeTag[RT]): UserDefinedFunction", "member" : "com.snowflake.snowpark.UDFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#registerTemporary[RT](func:()=>RT)(implicitevidence$1:reflect.runtime.universe.TypeTag[RT]):com.snowflake.snowpark.UserDefinedFunction", "kind" : "def"}, {"member" : "com.snowflake.snowpark.UDFRegistration#<init>", "error" : "unsupported entity"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/UDFRegistration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/UDFRegistration.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.UDTFRegistration", "shortDescription" : "Provides methods to register a UDTF (user-defined table function) in the Snowflake database.", "members_class" : [{"label" : "registerPermanent", "tail" : "(funcName: String, udtf: UDTF, stageLocation: String): TableFunction", "member" : "com.snowflake.snowpark.UDTFRegistration.registerPermanent", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#registerPermanent(funcName:String,udtf:com.snowflake.snowpark.udtf.UDTF,stageLocation:String):com.snowflake.snowpark.TableFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(funcName: String, udtf: UDTF): TableFunction", "member" : "com.snowflake.snowpark.UDTFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#registerTemporary(funcName:String,udtf:com.snowflake.snowpark.udtf.UDTF):com.snowflake.snowpark.TableFunction", "kind" : "def"}, {"label" : "registerTemporary", "tail" : "(udtf: UDTF): TableFunction", "member" : "com.snowflake.snowpark.UDTFRegistration.registerTemporary", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#registerTemporary(udtf:com.snowflake.snowpark.udtf.UDTF):com.snowflake.snowpark.TableFunction", "kind" : "def"}, {"member" : "com.snowflake.snowpark.UDTFRegistration#<init>", "error" : "unsupported entity"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/UDTFRegistration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/UDTFRegistration.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.Updatable", "shortDescription" : "Represents a lazily-evaluated Updatable.", "members_class" : [{"label" : "async", "tail" : "(): UpdatableAsyncActor", "member" : "com.snowflake.snowpark.Updatable.async", "link" : "com\/snowflake\/snowpark\/Updatable.html#async:com.snowflake.snowpark.UpdatableAsyncActor", "kind" : "def"}, {"label" : "clone", "tail" : "(): Updatable", "member" : "com.snowflake.snowpark.Updatable.clone", "link" : "com\/snowflake\/snowpark\/Updatable.html#clone():com.snowflake.snowpark.Updatable", "kind" : "def"}, {"label" : "merge", "tail" : "(source: DataFrame, joinExpr: Column): MergeBuilder", "member" : "com.snowflake.snowpark.Updatable.merge", "link" : "com\/snowflake\/snowpark\/Updatable.html#merge(source:com.snowflake.snowpark.DataFrame,joinExpr:com.snowflake.snowpark.Column):com.snowflake.snowpark.MergeBuilder", "kind" : "def"}, {"label" : "delete", "tail" : "(condition: Column, sourceData: DataFrame): DeleteResult", "member" : "com.snowflake.snowpark.Updatable.delete", "link" : "com\/snowflake\/snowpark\/Updatable.html#delete(condition:com.snowflake.snowpark.Column,sourceData:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DeleteResult", "kind" : "def"}, {"label" : "delete", "tail" : "(condition: Column): DeleteResult", "member" : "com.snowflake.snowpark.Updatable.delete", "link" : "com\/snowflake\/snowpark\/Updatable.html#delete(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.DeleteResult", "kind" : "def"}, {"label" : "delete", "tail" : "(): DeleteResult", "member" : "com.snowflake.snowpark.Updatable.delete", "link" : "com\/snowflake\/snowpark\/Updatable.html#delete():com.snowflake.snowpark.DeleteResult", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[String, Column], condition: Column, sourceData: DataFrame)(arg0: ClassTag[T]): UpdateResult", "member" : "com.snowflake.snowpark.Updatable.update", "link" : "com\/snowflake\/snowpark\/Updatable.html#update[T](assignments:Map[String,com.snowflake.snowpark.Column],condition:com.snowflake.snowpark.Column,sourceData:com.snowflake.snowpark.DataFrame)(implicitevidence$3:scala.reflect.ClassTag[T]):com.snowflake.snowpark.UpdateResult", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[Column, Column], condition: Column, sourceData: DataFrame): UpdateResult", "member" : "com.snowflake.snowpark.Updatable.update", "link" : "com\/snowflake\/snowpark\/Updatable.html#update(assignments:Map[com.snowflake.snowpark.Column,com.snowflake.snowpark.Column],condition:com.snowflake.snowpark.Column,sourceData:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.UpdateResult", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[String, Column], condition: Column)(arg0: ClassTag[T]): UpdateResult", "member" : "com.snowflake.snowpark.Updatable.update", "link" : "com\/snowflake\/snowpark\/Updatable.html#update[T](assignments:Map[String,com.snowflake.snowpark.Column],condition:com.snowflake.snowpark.Column)(implicitevidence$2:scala.reflect.ClassTag[T]):com.snowflake.snowpark.UpdateResult", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[Column, Column], condition: Column): UpdateResult", "member" : "com.snowflake.snowpark.Updatable.update", "link" : "com\/snowflake\/snowpark\/Updatable.html#update(assignments:Map[com.snowflake.snowpark.Column,com.snowflake.snowpark.Column],condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.UpdateResult", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[String, Column])(arg0: ClassTag[T]): UpdateResult", "member" : "com.snowflake.snowpark.Updatable.update", "link" : "com\/snowflake\/snowpark\/Updatable.html#update[T](assignments:Map[String,com.snowflake.snowpark.Column])(implicitevidence$1:scala.reflect.ClassTag[T]):com.snowflake.snowpark.UpdateResult", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[Column, Column]): UpdateResult", "member" : "com.snowflake.snowpark.Updatable.update", "link" : "com\/snowflake\/snowpark\/Updatable.html#update(assignments:Map[com.snowflake.snowpark.Column,com.snowflake.snowpark.Column]):com.snowflake.snowpark.UpdateResult", "kind" : "def"}, {"label" : "withPlan", "tail" : "(plan: LogicalPlan): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withPlan", "link" : "com\/snowflake\/snowpark\/Updatable.html#withPlan(plan:com.snowflake.snowpark.internal.analyzer.LogicalPlan):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "disambiguate", "tail" : "(lhs: DataFrame, rhs: DataFrame, joinType: JoinType, usingColumns: Seq[String]): (DataFrame, DataFrame)", "member" : "com.snowflake.snowpark.DataFrame.disambiguate", "link" : "com\/snowflake\/snowpark\/Updatable.html#disambiguate(lhs:com.snowflake.snowpark.DataFrame,rhs:com.snowflake.snowpark.DataFrame,joinType:com.snowflake.snowpark.internal.analyzer.JoinType,usingColumns:Seq[String]):(com.snowflake.snowpark.DataFrame,com.snowflake.snowpark.DataFrame)", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column, path: String, outer: Boolean, recursive: Boolean, mode: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.flatten", "link" : "com\/snowflake\/snowpark\/Updatable.html#flatten(input:com.snowflake.snowpark.Column,path:String,outer:Boolean,recursive:Boolean,mode:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "flatten", "tail" : "(input: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.flatten", "link" : "com\/snowflake\/snowpark\/Updatable.html#flatten(input:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "randomSplit", "tail" : "(weights: Array[Double]): Array[DataFrame]", "member" : "com.snowflake.snowpark.DataFrame.randomSplit", "link" : "com\/snowflake\/snowpark\/Updatable.html#randomSplit(weights:Array[Double]):Array[com.snowflake.snowpark.DataFrame]", "kind" : "def"}, {"label" : "sample", "tail" : "(probabilityFraction: Double): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sample", "link" : "com\/snowflake\/snowpark\/Updatable.html#sample(probabilityFraction:Double):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sample", "tail" : "(num: Long): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sample", "link" : "com\/snowflake\/snowpark\/Updatable.html#sample(num:Long):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "stat", "tail" : ": DataFrameStatFunctions", "member" : "com.snowflake.snowpark.DataFrame.stat", "link" : "com\/snowflake\/snowpark\/Updatable.html#stat:com.snowflake.snowpark.DataFrameStatFunctions", "kind" : "lazy val"}, {"label" : "na", "tail" : ": DataFrameNaFunctions", "member" : "com.snowflake.snowpark.DataFrame.na", "link" : "com\/snowflake\/snowpark\/Updatable.html#na:com.snowflake.snowpark.DataFrameNaFunctions", "kind" : "lazy val"}, {"label" : "first", "tail" : "(n: Int): Array[Row]", "member" : "com.snowflake.snowpark.DataFrame.first", "link" : "com\/snowflake\/snowpark\/Updatable.html#first(n:Int):Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "first", "tail" : "(): Option[Row]", "member" : "com.snowflake.snowpark.DataFrame.first", "link" : "com\/snowflake\/snowpark\/Updatable.html#first():Option[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(multipartIdentifier: List[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/Updatable.html#createOrReplaceTempView(multipartIdentifier:java.util.List[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(multipartIdentifier: Seq[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/Updatable.html#createOrReplaceTempView(multipartIdentifier:Seq[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceTempView", "tail" : "(viewName: String): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceTempView", "link" : "com\/snowflake\/snowpark\/Updatable.html#createOrReplaceTempView(viewName:String):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(multipartIdentifier: List[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/Updatable.html#createOrReplaceView(multipartIdentifier:java.util.List[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(multipartIdentifier: Seq[String]): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/Updatable.html#createOrReplaceView(multipartIdentifier:Seq[String]):Unit", "kind" : "def"}, {"label" : "createOrReplaceView", "tail" : "(viewName: String): Unit", "member" : "com.snowflake.snowpark.DataFrame.createOrReplaceView", "link" : "com\/snowflake\/snowpark\/Updatable.html#createOrReplaceView(viewName:String):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(n: Int, maxWidth: Int): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/Updatable.html#show(n:Int,maxWidth:Int):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(n: Int): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/Updatable.html#show(n:Int):Unit", "kind" : "def"}, {"label" : "show", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.DataFrame.show", "link" : "com\/snowflake\/snowpark\/Updatable.html#show():Unit", "kind" : "def"}, {"label" : "write", "tail" : "(): DataFrameWriter", "member" : "com.snowflake.snowpark.DataFrame.write", "link" : "com\/snowflake\/snowpark\/Updatable.html#write:com.snowflake.snowpark.DataFrameWriter", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "com.snowflake.snowpark.DataFrame.count", "link" : "com\/snowflake\/snowpark\/Updatable.html#count():Long", "kind" : "def"}, {"label" : "toLocalIterator", "tail" : "(): Iterator[Row]", "member" : "com.snowflake.snowpark.DataFrame.toLocalIterator", "link" : "com\/snowflake\/snowpark\/Updatable.html#toLocalIterator:Iterator[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "collect", "tail" : "(): Array[Row]", "member" : "com.snowflake.snowpark.DataFrame.collect", "link" : "com\/snowflake\/snowpark\/Updatable.html#collect():Array[com.snowflake.snowpark.Row]", "kind" : "def"}, {"label" : "rename", "tail" : "(newName: String, col: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.rename", "link" : "com\/snowflake\/snowpark\/Updatable.html#rename(newName:String,col:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "withColumns", "tail" : "(colNames: Seq[String], values: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withColumns", "link" : "com\/snowflake\/snowpark\/Updatable.html#withColumns(colNames:Seq[String],values:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "withColumn", "tail" : "(colName: String, col: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.withColumn", "link" : "com\/snowflake\/snowpark\/Updatable.html#withColumn(colName:String,col:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "naturalJoin", "tail" : "(right: DataFrame, joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.naturalJoin", "link" : "com\/snowflake\/snowpark\/Updatable.html#naturalJoin(right:com.snowflake.snowpark.DataFrame,joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "naturalJoin", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.naturalJoin", "link" : "com\/snowflake\/snowpark\/Updatable.html#naturalJoin(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "crossJoin", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.crossJoin", "link" : "com\/snowflake\/snowpark\/Updatable.html#crossJoin(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: Column, partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(func:com.snowflake.snowpark.Column,partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(func:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Map[String, Column], partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(func:com.snowflake.snowpark.TableFunction,args:Map[String,com.snowflake.snowpark.Column],partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Map[String, Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(func:com.snowflake.snowpark.TableFunction,args:Map[String,com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Seq[Column], partitionBy: Seq[Column], orderBy: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(func:com.snowflake.snowpark.TableFunction,args:Seq[com.snowflake.snowpark.Column],partitionBy:Seq[com.snowflake.snowpark.Column],orderBy:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, args: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(func:com.snowflake.snowpark.TableFunction,args:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(func: TableFunction, firstArg: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(func:com.snowflake.snowpark.TableFunction,firstArg:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, joinExprs: Column, joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(right:com.snowflake.snowpark.DataFrame,joinExprs:com.snowflake.snowpark.Column,joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, joinExprs: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(right:com.snowflake.snowpark.DataFrame,joinExprs:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumns: Seq[String], joinType: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(right:com.snowflake.snowpark.DataFrame,usingColumns:Seq[String],joinType:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumns: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(right:com.snowflake.snowpark.DataFrame,usingColumns:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame, usingColumn: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(right:com.snowflake.snowpark.DataFrame,usingColumn:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "join", "tail" : "(right: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.join", "link" : "com\/snowflake\/snowpark\/Updatable.html#join(right:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "except", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.except", "link" : "com\/snowflake\/snowpark\/Updatable.html#except(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.intersect", "link" : "com\/snowflake\/snowpark\/Updatable.html#intersect(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionAllByName", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionAllByName", "link" : "com\/snowflake\/snowpark\/Updatable.html#unionAllByName(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionByName", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionByName", "link" : "com\/snowflake\/snowpark\/Updatable.html#unionByName(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "unionAll", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.unionAll", "link" : "com\/snowflake\/snowpark\/Updatable.html#unionAll(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "union", "tail" : "(other: DataFrame): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.union", "link" : "com\/snowflake\/snowpark\/Updatable.html#union(other:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "limit", "tail" : "(n: Int): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.limit", "link" : "com\/snowflake\/snowpark\/Updatable.html#limit(n:Int):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "pivot", "tail" : "(pivotColumn: Column, values: Seq[Any]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.pivot", "link" : "com\/snowflake\/snowpark\/Updatable.html#pivot(pivotColumn:com.snowflake.snowpark.Column,values:Seq[Any]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "pivot", "tail" : "(pivotColumn: String, values: Seq[Any]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.pivot", "link" : "com\/snowflake\/snowpark\/Updatable.html#pivot(pivotColumn:String,values:Seq[Any]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "dropDuplicates", "tail" : "(colNames: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.dropDuplicates", "link" : "com\/snowflake\/snowpark\/Updatable.html#dropDuplicates(colNames:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "distinct", "tail" : "(): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.distinct", "link" : "com\/snowflake\/snowpark\/Updatable.html#distinct():com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/Updatable.html#cube(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/Updatable.html#cube(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/Updatable.html#cube(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/Updatable.html#cube[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$6:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "cube", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.cube", "link" : "com\/snowflake\/snowpark\/Updatable.html#cube(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupByGroupingSets", "tail" : "(groupingSets: Seq[GroupingSets]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupByGroupingSets", "link" : "com\/snowflake\/snowpark\/Updatable.html#groupByGroupingSets(groupingSets:Seq[com.snowflake.snowpark.GroupingSets]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupByGroupingSets", "tail" : "(first: GroupingSets, remaining: GroupingSets*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupByGroupingSets", "link" : "com\/snowflake\/snowpark\/Updatable.html#groupByGroupingSets(first:com.snowflake.snowpark.GroupingSets,remaining:com.snowflake.snowpark.GroupingSets*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Array[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/Updatable.html#groupBy(cols:Array[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/Updatable.html#groupBy(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/Updatable.html#groupBy(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/Updatable.html#groupBy(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/Updatable.html#groupBy[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$5:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/Updatable.html#groupBy():com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "groupBy", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.groupBy", "link" : "com\/snowflake\/snowpark\/Updatable.html#groupBy(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Array[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/Updatable.html#rollup(cols:Array[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Seq[String]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/Updatable.html#rollup(cols:Seq[String]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(first: String, remaining: String*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/Updatable.html#rollup(first:String,remaining:String*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Array[Column]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/Updatable.html#rollup(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/Updatable.html#rollup[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$4:scala.reflect.ClassTag[T]):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "rollup", "tail" : "(first: Column, remaining: Column*): RelationalGroupedDataFrame", "member" : "com.snowflake.snowpark.DataFrame.rollup", "link" : "com\/snowflake\/snowpark\/Updatable.html#rollup(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.RelationalGroupedDataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/Updatable.html#agg(exprs:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/Updatable.html#agg[T](exprs:Seq[com.snowflake.snowpark.Column])(implicitevidence$3:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(expr: Column, exprs: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/Updatable.html#agg(expr:com.snowflake.snowpark.Column,exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(exprs: Seq[(String, String)]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/Updatable.html#agg(exprs:Seq[(String,String)]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "agg", "tail" : "(expr: (String, String), exprs: (String, String)*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.agg", "link" : "com\/snowflake\/snowpark\/Updatable.html#agg(expr:(String,String),exprs:(String,String)*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "where", "tail" : "(condition: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.where", "link" : "com\/snowflake\/snowpark\/Updatable.html#where(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "filter", "tail" : "(condition: Column): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.filter", "link" : "com\/snowflake\/snowpark\/Updatable.html#filter(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(cols: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/Updatable.html#drop(cols:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(cols: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/Updatable.html#drop[T](cols:Seq[com.snowflake.snowpark.Column])(implicitevidence$2:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/Updatable.html#drop(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(colNames: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/Updatable.html#drop(colNames:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(colNames: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/Updatable.html#drop(colNames:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "drop", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.drop", "link" : "com\/snowflake\/snowpark\/Updatable.html#drop(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/Updatable.html#select(columns:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/Updatable.html#select(columns:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/Updatable.html#select(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/Updatable.html#select(columns:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(columns: Seq[Column])(arg0: ClassTag[T]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/Updatable.html#select[T](columns:Seq[com.snowflake.snowpark.Column])(implicitevidence$1:scala.reflect.ClassTag[T]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "select", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.select", "link" : "com\/snowflake\/snowpark\/Updatable.html#select(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "alias", "tail" : "(alias: String): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.alias", "link" : "com\/snowflake\/snowpark\/Updatable.html#alias(alias:String):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "col", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.DataFrame.col", "link" : "com\/snowflake\/snowpark\/Updatable.html#col(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "apply", "tail" : "(colName: String): Column", "member" : "com.snowflake.snowpark.DataFrame.apply", "link" : "com\/snowflake\/snowpark\/Updatable.html#apply(colName:String):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "sort", "tail" : "(sortExprs: Array[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/Updatable.html#sort(sortExprs:Array[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sort", "tail" : "(sortExprs: Seq[Column]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/Updatable.html#sort(sortExprs:Seq[com.snowflake.snowpark.Column]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "sort", "tail" : "(first: Column, remaining: Column*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.sort", "link" : "com\/snowflake\/snowpark\/Updatable.html#sort(first:com.snowflake.snowpark.Column,remaining:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(colNames: Array[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/Updatable.html#toDF(colNames:Array[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(colNames: Seq[String]): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/Updatable.html#toDF(colNames:Seq[String]):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "toDF", "tail" : "(first: String, remaining: String*): DataFrame", "member" : "com.snowflake.snowpark.DataFrame.toDF", "link" : "com\/snowflake\/snowpark\/Updatable.html#toDF(first:String,remaining:String*):com.snowflake.snowpark.DataFrame", "kind" : "def"}, {"label" : "explain", "tail" : "(): Unit", "member" : "com.snowflake.snowpark.DataFrame.explain", "link" : "com\/snowflake\/snowpark\/Updatable.html#explain():Unit", "kind" : "def"}, {"label" : "cacheResult", "tail" : "(): HasCachedResult", "member" : "com.snowflake.snowpark.DataFrame.cacheResult", "link" : "com\/snowflake\/snowpark\/Updatable.html#cacheResult():com.snowflake.snowpark.HasCachedResult", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "com.snowflake.snowpark.DataFrame.schema", "link" : "com\/snowflake\/snowpark\/Updatable.html#schema:com.snowflake.snowpark.types.StructType", "kind" : "lazy val"}, {"label" : "logError", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/Updatable.html#logError(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/Updatable.html#logWarning(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/Updatable.html#logTrace(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/Updatable.html#logDebug(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String, throwable: Throwable): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/Updatable.html#logInfo(msg:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logError", "link" : "com\/snowflake\/snowpark\/Updatable.html#logError(msg:String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logWarning", "link" : "com\/snowflake\/snowpark\/Updatable.html#logWarning(msg:String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logTrace", "link" : "com\/snowflake\/snowpark\/Updatable.html#logTrace(msg:String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logDebug", "link" : "com\/snowflake\/snowpark\/Updatable.html#logDebug(msg:String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: String): Unit", "member" : "com.snowflake.snowpark.internal.Logging.logInfo", "link" : "com\/snowflake\/snowpark\/Updatable.html#logInfo(msg:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.snowflake.snowpark.internal.Logging.log", "link" : "com\/snowflake\/snowpark\/Updatable.html#log():org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/Updatable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/Updatable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/Updatable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/Updatable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/Updatable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/Updatable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/Updatable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Updatable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Updatable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Updatable.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/Updatable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/Updatable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/Updatable.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/Updatable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/Updatable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/Updatable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/Updatable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/Updatable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/Updatable.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.UpdatableAsyncActor", "shortDescription" : "Provides APIs to execute Updatable actions asynchronously.", "members_class" : [{"label" : "delete", "tail" : "(condition: Column, sourceData: DataFrame): TypedAsyncJob[DeleteResult]", "member" : "com.snowflake.snowpark.UpdatableAsyncActor.delete", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#delete(condition:com.snowflake.snowpark.Column,sourceData:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.DeleteResult]", "kind" : "def"}, {"label" : "delete", "tail" : "(condition: Column): TypedAsyncJob[DeleteResult]", "member" : "com.snowflake.snowpark.UpdatableAsyncActor.delete", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#delete(condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.DeleteResult]", "kind" : "def"}, {"label" : "delete", "tail" : "(): TypedAsyncJob[DeleteResult]", "member" : "com.snowflake.snowpark.UpdatableAsyncActor.delete", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#delete():com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.DeleteResult]", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[String, Column], condition: Column, sourceData: DataFrame)(arg0: ClassTag[T]): TypedAsyncJob[UpdateResult]", "member" : "com.snowflake.snowpark.UpdatableAsyncActor.update", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#update[T](assignments:Map[String,com.snowflake.snowpark.Column],condition:com.snowflake.snowpark.Column,sourceData:com.snowflake.snowpark.DataFrame)(implicitevidence$6:scala.reflect.ClassTag[T]):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.UpdateResult]", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[Column, Column], condition: Column, sourceData: DataFrame): TypedAsyncJob[UpdateResult]", "member" : "com.snowflake.snowpark.UpdatableAsyncActor.update", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#update(assignments:Map[com.snowflake.snowpark.Column,com.snowflake.snowpark.Column],condition:com.snowflake.snowpark.Column,sourceData:com.snowflake.snowpark.DataFrame):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.UpdateResult]", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[String, Column], condition: Column)(arg0: ClassTag[T]): TypedAsyncJob[UpdateResult]", "member" : "com.snowflake.snowpark.UpdatableAsyncActor.update", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#update[T](assignments:Map[String,com.snowflake.snowpark.Column],condition:com.snowflake.snowpark.Column)(implicitevidence$5:scala.reflect.ClassTag[T]):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.UpdateResult]", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[Column, Column], condition: Column): TypedAsyncJob[UpdateResult]", "member" : "com.snowflake.snowpark.UpdatableAsyncActor.update", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#update(assignments:Map[com.snowflake.snowpark.Column,com.snowflake.snowpark.Column],condition:com.snowflake.snowpark.Column):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.UpdateResult]", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[String, Column])(arg0: ClassTag[T]): TypedAsyncJob[UpdateResult]", "member" : "com.snowflake.snowpark.UpdatableAsyncActor.update", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#update[T](assignments:Map[String,com.snowflake.snowpark.Column])(implicitevidence$4:scala.reflect.ClassTag[T]):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.UpdateResult]", "kind" : "def"}, {"label" : "update", "tail" : "(assignments: Map[Column, Column]): TypedAsyncJob[UpdateResult]", "member" : "com.snowflake.snowpark.UpdatableAsyncActor.update", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#update(assignments:Map[com.snowflake.snowpark.Column,com.snowflake.snowpark.Column]):com.snowflake.snowpark.TypedAsyncJob[com.snowflake.snowpark.UpdateResult]", "kind" : "def"}, {"label" : "count", "tail" : "(): TypedAsyncJob[Long]", "member" : "com.snowflake.snowpark.DataFrameAsyncActor.count", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#count():com.snowflake.snowpark.TypedAsyncJob[Long]", "kind" : "def"}, {"label" : "toLocalIterator", "tail" : "(): TypedAsyncJob[Iterator[Row]]", "member" : "com.snowflake.snowpark.DataFrameAsyncActor.toLocalIterator", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#toLocalIterator():com.snowflake.snowpark.TypedAsyncJob[Iterator[com.snowflake.snowpark.Row]]", "kind" : "def"}, {"label" : "collect", "tail" : "(): TypedAsyncJob[Array[Row]]", "member" : "com.snowflake.snowpark.DataFrameAsyncActor.collect", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#collect():com.snowflake.snowpark.TypedAsyncJob[Array[com.snowflake.snowpark.Row]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/UpdatableAsyncActor.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.UpdateResult", "shortDescription" : "Result of updating rows in an Updatable", "members_case class" : [{"member" : "com.snowflake.snowpark.UpdateResult#<init>", "error" : "unsupported entity"}, {"label" : "multiJoinedRowsUpdated", "tail" : ": Long", "member" : "com.snowflake.snowpark.UpdateResult.multiJoinedRowsUpdated", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#multiJoinedRowsUpdated:Long", "kind" : "val"}, {"label" : "rowsUpdated", "tail" : ": Long", "member" : "com.snowflake.snowpark.UpdateResult.rowsUpdated", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#rowsUpdated:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/UpdateResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/UpdateResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/UpdateResult.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.UserDefinedFunction", "shortDescription" : "Encapsulates a user defined lambda or function that isreturned by UDFRegistration.registerTemporaryor bycom.snowflake.snowpark.functions.udf.", "members_case class" : [{"label" : "apply", "tail" : "(exprs: Column*): Column", "member" : "com.snowflake.snowpark.UserDefinedFunction.apply", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#apply(exprs:com.snowflake.snowpark.Column*):com.snowflake.snowpark.Column", "kind" : "def"}, {"label" : "name", "tail" : ": Option[String]", "member" : "com.snowflake.snowpark.UserDefinedFunction.name", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#name:Option[String]", "kind" : "val"}, {"label" : "f", "tail" : ": AnyRef", "member" : "com.snowflake.snowpark.UserDefinedFunction.f", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#f:AnyRef", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/UserDefinedFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/UserDefinedFunction.html", "kind" : "case class"}, {"name" : "com.snowflake.snowpark.Window", "shortDescription" : "Contains functions to form WindowSpec.", "object" : "com\/snowflake\/snowpark\/Window$.html", "members_object" : [{"label" : "rangeBetween", "tail" : "(start: Long, end: Long): WindowSpec", "member" : "com.snowflake.snowpark.Window.rangeBetween", "link" : "com\/snowflake\/snowpark\/Window$.html#rangeBetween(start:Long,end:Long):com.snowflake.snowpark.WindowSpec", "kind" : "def"}, {"label" : "rowsBetween", "tail" : "(start: Long, end: Long): WindowSpec", "member" : "com.snowflake.snowpark.Window.rowsBetween", "link" : "com\/snowflake\/snowpark\/Window$.html#rowsBetween(start:Long,end:Long):com.snowflake.snowpark.WindowSpec", "kind" : "def"}, {"label" : "currentRow", "tail" : "(): Long", "member" : "com.snowflake.snowpark.Window.currentRow", "link" : "com\/snowflake\/snowpark\/Window$.html#currentRow:Long", "kind" : "def"}, {"label" : "unboundedFollowing", "tail" : "(): Long", "member" : "com.snowflake.snowpark.Window.unboundedFollowing", "link" : "com\/snowflake\/snowpark\/Window$.html#unboundedFollowing:Long", "kind" : "def"}, {"label" : "unboundedPreceding", "tail" : "(): Long", "member" : "com.snowflake.snowpark.Window.unboundedPreceding", "link" : "com\/snowflake\/snowpark\/Window$.html#unboundedPreceding:Long", "kind" : "def"}, {"label" : "orderBy", "tail" : "(cols: Column*): WindowSpec", "member" : "com.snowflake.snowpark.Window.orderBy", "link" : "com\/snowflake\/snowpark\/Window$.html#orderBy(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.WindowSpec", "kind" : "def"}, {"label" : "partitionBy", "tail" : "(cols: Column*): WindowSpec", "member" : "com.snowflake.snowpark.Window.partitionBy", "link" : "com\/snowflake\/snowpark\/Window$.html#partitionBy(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.WindowSpec", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/Window$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/Window$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/Window$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/Window$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/Window$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/Window$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/Window$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Window$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Window$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/Window$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/Window$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/Window$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/Window$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/Window$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/Window$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/Window$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/Window$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/Window$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/Window$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.snowflake.snowpark.WindowSpec", "shortDescription" : "Represents a window frame clause.", "members_class" : [{"label" : "rangeBetween", "tail" : "(start: Long, end: Long): WindowSpec", "member" : "com.snowflake.snowpark.WindowSpec.rangeBetween", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#rangeBetween(start:Long,end:Long):com.snowflake.snowpark.WindowSpec", "kind" : "def"}, {"label" : "rowsBetween", "tail" : "(start: Long, end: Long): WindowSpec", "member" : "com.snowflake.snowpark.WindowSpec.rowsBetween", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#rowsBetween(start:Long,end:Long):com.snowflake.snowpark.WindowSpec", "kind" : "def"}, {"label" : "orderBy", "tail" : "(cols: Column*): WindowSpec", "member" : "com.snowflake.snowpark.WindowSpec.orderBy", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#orderBy(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.WindowSpec", "kind" : "def"}, {"label" : "partitionBy", "tail" : "(cols: Column*): WindowSpec", "member" : "com.snowflake.snowpark.WindowSpec.partitionBy", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#partitionBy(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.WindowSpec", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/WindowSpec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/WindowSpec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/snowflake\/snowpark\/WindowSpec.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.WriteFileResult", "shortDescription" : "Represents the results of writing data from a DataFrame to a file in a stage.", "members_case class" : [{"member" : "com.snowflake.snowpark.WriteFileResult#<init>", "error" : "unsupported entity"}, {"label" : "schema", "tail" : ": StructType", "member" : "com.snowflake.snowpark.WriteFileResult.schema", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#schema:com.snowflake.snowpark.types.StructType", "kind" : "val"}, {"label" : "rows", "tail" : ": Array[Row]", "member" : "com.snowflake.snowpark.WriteFileResult.rows", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#rows:Array[com.snowflake.snowpark.Row]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/WriteFileResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/snowflake\/snowpark\/WriteFileResult.html", "kind" : "case class"}], "com.snowflake" : [], "com" : [], "com.snowflake.snowpark.udtf" : [{"name" : "com.snowflake.snowpark.udtf.UDTF", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "shortDescription" : "The Scala UDTF (user-defined table function) trait.", "trait" : "com\/snowflake\/snowpark\/udtf\/UDTF.html", "kind" : "trait"}, {"name" : "com.snowflake.snowpark.udtf.UDTF0", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has no argument.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF0#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF0.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#process():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF0.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF1", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 1 argument.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF1#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF1.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#process(arg0:A0):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF1.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF10", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 10 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF10#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF10.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF10.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF11", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 11 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF11#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF11.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF11.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF12", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 12 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF12#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF12.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF12.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF13", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 13 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF13#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11, arg12: A12): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF13.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11,arg12:A12):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF13.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF14", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 14 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF14#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11, arg12: A12, arg13: A13): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF14.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11,arg12:A12,arg13:A13):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF14.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF15", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 15 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF15#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11, arg12: A12, arg13: A13, arg14: A14): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF15.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11,arg12:A12,arg13:A13,arg14:A14):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF15.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF16", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 16 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF16#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11, arg12: A12, arg13: A13, arg14: A14, arg15: A15): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF16.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11,arg12:A12,arg13:A13,arg14:A14,arg15:A15):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF16.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF17", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 17 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF17#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11, arg12: A12, arg13: A13, arg14: A14, arg15: A15, arg16: A16): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF17.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11,arg12:A12,arg13:A13,arg14:A14,arg15:A15,arg16:A16):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF17.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF18", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 18 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF18#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11, arg12: A12, arg13: A13, arg14: A14, arg15: A15, arg16: A16, arg17: A17): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF18.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11,arg12:A12,arg13:A13,arg14:A14,arg15:A15,arg16:A16,arg17:A17):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF18.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF19", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 19 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF19#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11, arg12: A12, arg13: A13, arg14: A14, arg15: A15, arg16: A16, arg17: A17, arg18: A18): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF19.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11,arg12:A12,arg13:A13,arg14:A14,arg15:A15,arg16:A16,arg17:A17,arg18:A18):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF19.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF2", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 2 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF2#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF2.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#process(arg0:A0,arg1:A1):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF2.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF20", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 20 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF20#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11, arg12: A12, arg13: A13, arg14: A14, arg15: A15, arg16: A16, arg17: A17, arg18: A18, arg19: A19): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF20.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11,arg12:A12,arg13:A13,arg14:A14,arg15:A15,arg16:A16,arg17:A17,arg18:A18,arg19:A19):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF20.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF21", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 21 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF21#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11, arg12: A12, arg13: A13, arg14: A14, arg15: A15, arg16: A16, arg17: A17, arg18: A18, arg19: A19, arg20: A20): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF21.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11,arg12:A12,arg13:A13,arg14:A14,arg15:A15,arg16:A16,arg17:A17,arg18:A18,arg19:A19,arg20:A20):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF21.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF22", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 22 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF22#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8, arg9: A9, arg10: A10, arg11: A11, arg12: A12, arg13: A13, arg14: A14, arg15: A15, arg16: A16, arg17: A17, arg18: A18, arg19: A19, arg20: A20, arg21: A21): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF22.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8,arg9:A9,arg10:A10,arg11:A11,arg12:A12,arg13:A13,arg14:A14,arg15:A15,arg16:A16,arg17:A17,arg18:A18,arg19:A19,arg20:A20,arg21:A21):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF22.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF3", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 3 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF3#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF3.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#process(arg0:A0,arg1:A1,arg2:A2):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF3.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF4", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 4 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF4#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF4.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF4.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF5", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 5 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF5#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF5.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF5.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF6", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 6 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF6#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF6.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF6.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF7", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 7 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF7#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF7.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF7.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF8", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 8 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF8#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF8.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF8.html", "kind" : "class"}, {"name" : "com.snowflake.snowpark.udtf.UDTF9", "shortDescription" : "The Scala UDTF (user-defined table function) abstract class that has 9 arguments.", "members_class" : [{"member" : "com.snowflake.snowpark.udtf.UDTF9#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(arg0: A0, arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, arg6: A6, arg7: A7, arg8: A8): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF9.process", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#process(arg0:A0,arg1:A1,arg2:A2,arg3:A3,arg4:A4,arg5:A5,arg6:A6,arg7:A7,arg8:A8):Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "endPartition", "tail" : "(): Iterable[Row]", "member" : "com.snowflake.snowpark.udtf.UDTF.endPartition", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#endPartition():Iterable[com.snowflake.snowpark.Row]", "kind" : "abstract def"}, {"label" : "outputSchema", "tail" : "(): StructType", "member" : "com.snowflake.snowpark.udtf.UDTF.outputSchema", "link" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html#outputSchema():com.snowflake.snowpark.types.StructType", "kind" : "abstract def"}], "class" : "com\/snowflake\/snowpark\/udtf\/UDTF9.html", "kind" : "class"}]};