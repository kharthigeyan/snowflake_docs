<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.22) on Wed Mar 27 20:04:07 UTC 2024 -->
<title>Functions (Snowpark Java API Reference 1.12.0)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2024-03-27">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.min.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery-ui.overrides.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.6.1.min.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.min.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Functions (Snowpark Java API Reference 1.12.0)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9,"i5":9,"i6":9,"i7":9,"i8":9,"i9":9,"i10":9,"i11":9,"i12":9,"i13":9,"i14":9,"i15":9,"i16":9,"i17":9,"i18":9,"i19":9,"i20":9,"i21":9,"i22":9,"i23":9,"i24":9,"i25":9,"i26":9,"i27":9,"i28":9,"i29":9,"i30":9,"i31":9,"i32":9,"i33":9,"i34":9,"i35":9,"i36":9,"i37":9,"i38":9,"i39":9,"i40":9,"i41":9,"i42":9,"i43":9,"i44":9,"i45":9,"i46":9,"i47":9,"i48":9,"i49":9,"i50":9,"i51":9,"i52":9,"i53":9,"i54":9,"i55":9,"i56":9,"i57":9,"i58":9,"i59":9,"i60":9,"i61":9,"i62":9,"i63":9,"i64":9,"i65":9,"i66":9,"i67":9,"i68":9,"i69":9,"i70":9,"i71":9,"i72":9,"i73":9,"i74":9,"i75":9,"i76":9,"i77":9,"i78":9,"i79":9,"i80":9,"i81":9,"i82":9,"i83":9,"i84":9,"i85":9,"i86":9,"i87":9,"i88":9,"i89":9,"i90":9,"i91":9,"i92":9,"i93":9,"i94":9,"i95":9,"i96":9,"i97":9,"i98":9,"i99":9,"i100":9,"i101":9,"i102":9,"i103":9,"i104":9,"i105":9,"i106":9,"i107":9,"i108":9,"i109":9,"i110":9,"i111":9,"i112":9,"i113":9,"i114":9,"i115":9,"i116":9,"i117":9,"i118":9,"i119":9,"i120":9,"i121":9,"i122":9,"i123":9,"i124":9,"i125":9,"i126":9,"i127":9,"i128":9,"i129":9,"i130":9,"i131":9,"i132":9,"i133":9,"i134":9,"i135":9,"i136":9,"i137":9,"i138":9,"i139":9,"i140":9,"i141":9,"i142":9,"i143":9,"i144":9,"i145":9,"i146":9,"i147":9,"i148":9,"i149":9,"i150":9,"i151":9,"i152":9,"i153":9,"i154":9,"i155":9,"i156":9,"i157":9,"i158":9,"i159":9,"i160":9,"i161":9,"i162":9,"i163":9,"i164":9,"i165":9,"i166":9,"i167":9,"i168":9,"i169":9,"i170":9,"i171":9,"i172":9,"i173":9,"i174":9,"i175":9,"i176":9,"i177":9,"i178":9,"i179":9,"i180":9,"i181":9,"i182":9,"i183":9,"i184":9,"i185":9,"i186":9,"i187":9,"i188":9,"i189":9,"i190":9,"i191":9,"i192":9,"i193":9,"i194":9,"i195":9,"i196":9,"i197":9,"i198":9,"i199":9,"i200":9,"i201":9,"i202":9,"i203":9,"i204":9,"i205":9,"i206":9,"i207":9,"i208":9,"i209":9,"i210":9,"i211":9,"i212":9,"i213":9,"i214":9,"i215":9,"i216":9,"i217":9,"i218":9,"i219":9,"i220":9,"i221":9,"i222":9,"i223":9,"i224":9,"i225":9,"i226":9,"i227":9,"i228":9,"i229":9,"i230":9,"i231":9,"i232":9,"i233":9,"i234":9,"i235":9,"i236":9,"i237":9,"i238":9,"i239":9,"i240":9,"i241":9,"i242":9,"i243":9,"i244":9,"i245":9,"i246":9,"i247":9,"i248":9,"i249":9,"i250":9,"i251":9,"i252":9,"i253":9,"i254":9,"i255":9,"i256":9,"i257":9,"i258":9,"i259":9,"i260":9,"i261":9,"i262":9,"i263":9,"i264":9,"i265":9,"i266":9,"i267":9,"i268":9,"i269":9,"i270":9,"i271":9,"i272":9,"i273":9,"i274":9,"i275":9,"i276":9,"i277":9,"i278":9,"i279":9,"i280":9,"i281":9,"i282":9,"i283":9,"i284":9,"i285":9,"i286":9,"i287":9,"i288":9,"i289":9,"i290":9,"i291":9,"i292":9,"i293":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Functions.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><div style="margin-top: 14px"><strong>                           Snowpark Java API Reference 1.12.0 <br/>                           <a style="text-transform: none" href="https://docs.snowflake.com/en/developer-guide/snowpark/java/index.html" target="_top">[Snowpark Developer Guide for Java]</a>                         </strong></div></div>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.snowflake.snowpark_java</a></div>
<h2 title="Class Functions" class="title">Class Functions</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.snowflake.snowpark_java.Functions</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public final class <span class="typeNameLabel">Functions</span>
extends <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Provides utility functions that generate Column expression that you can pass to DataFrame
 transformation methods. These functions generate references to columns, literals, and SQL
 expression.

 <p>This object also provides functions that correspond to Snowflake <a href="https://docs.snowflake.com/en/sql-reference-functions.html">system-defined functions</a>
 (built-in functions), including functions for aggregation and window functions.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#abs(com.snowflake.snowpark_java.Column)">abs</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the absolute value of a numeric expression.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#acos(com.snowflake.snowpark_java.Column)">acos</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Computes the inverse cosine (arc cosine) of its input; the result is a number in the interval
 [-pi, pi].</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#add_months(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">add_months</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;startDate,
          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;numMonths)</code></th>
<td class="colLast">
<div class="block">Adds or subtracts a specified number of months to a date or timestamp, preserving the
 end-of-month information.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#any_value(com.snowflake.snowpark_java.Column)">any_value</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns a non-deterministic value for the specified column.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#approx_count_distinct(com.snowflake.snowpark_java.Column)">approx_count_distinct</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Uses HyperLogLog to return an approximation of the distinct cardinality of the input (i.e.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#approx_percentile(com.snowflake.snowpark_java.Column,double)">approx_percentile</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                 double&nbsp;percentile)</code></th>
<td class="colLast">
<div class="block">Returns an approximated value for the desired percentile.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#approx_percentile_accumulate(com.snowflake.snowpark_java.Column)">approx_percentile_accumulate</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the internal representation of the t-Digest state (as a JSON object) at the end of
 aggregation.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#approx_percentile_combine(com.snowflake.snowpark_java.Column)">approx_percentile_combine</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;state)</code></th>
<td class="colLast">
<div class="block">Combines (merges) percentile input states into a single output state.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#approx_percentile_estimate(com.snowflake.snowpark_java.Column,double)">approx_percentile_estimate</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                          double&nbsp;percentile)</code></th>
<td class="colLast">
<div class="block">Returns the desired approximated percentile value for the specified t-Digest state.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_agg(com.snowflake.snowpark_java.Column)">array_agg</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the input values, pivoted into an ARRAY.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_append(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">array_append</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;element)</code></th>
<td class="colLast">
<div class="block">Returns an ARRAY containing all elements from the source ARRAYas well as the new element.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_cat(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">array_cat</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array1,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array2)</code></th>
<td class="colLast">
<div class="block">Returns the concatenation of two ARRAYs.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_compact(com.snowflake.snowpark_java.Column)">array_compact</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array)</code></th>
<td class="colLast">
<div class="block">Returns a compacted ARRAY with missing and null values removed, effectively converting sparse
 arrays into dense arrays.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_construct(com.snowflake.snowpark_java.Column...)">array_construct</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</code></th>
<td class="colLast">
<div class="block">Returns an ARRAY constructed from zero, one, or more inputs.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_construct_compact(com.snowflake.snowpark_java.Column...)">array_construct_compact</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</code></th>
<td class="colLast">
<div class="block">Returns an ARRAY constructed from zero, one, or more inputs; the constructed ARRAY omits any
 NULL input values.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_contains(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">array_contains</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array)</code></th>
<td class="colLast">
<div class="block">Returns <code>true</code> if the specified VARIANT is found in the specified ARRAY.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_insert(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">array_insert</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pos,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;element)</code></th>
<td class="colLast">
<div class="block">Returns an ARRAY containing all elements from the source ARRAY as well as the new element.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_intersection(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">array_intersection</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</code></th>
<td class="colLast">
<div class="block">Returns an ARRAY that contains the matching elements in the two input ARRAYs.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_position(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">array_position</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array)</code></th>
<td class="colLast">
<div class="block">Returns the index of the first occurrence of an element in an ARRAY.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_prepend(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">array_prepend</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;element)</code></th>
<td class="colLast">
<div class="block">Returns an ARRAY containing the new element as well as all elements from the source ARRAY.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_size(com.snowflake.snowpark_java.Column)">array_size</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array)</code></th>
<td class="colLast">
<div class="block">Returns the size of the input ARRAY.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_slice(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">array_slice</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;from,
           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to)</code></th>
<td class="colLast">
<div class="block">Returns an ARRAY constructed from a specified subset of elements of the input ARRAY.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#array_to_string(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">array_to_string</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;separator)</code></th>
<td class="colLast">
<div class="block">Returns an input ARRAY converted to a string by casting all values to strings (using
 TO_VARCHAR) and concatenating them (using the string from the second argument to separate the
 elements).</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#arrays_overlap(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">arrays_overlap</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;a1,
              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;a2)</code></th>
<td class="colLast">
<div class="block">Compares whether two arrays have at least one element in common.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_array(com.snowflake.snowpark_java.Column)">as_array</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to an array.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_binary(com.snowflake.snowpark_java.Column)">as_binary</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a binary string.</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_char(com.snowflake.snowpark_java.Column)">as_char</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a string.</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_date(com.snowflake.snowpark_java.Column)">as_date</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a date.</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_decimal(com.snowflake.snowpark_java.Column)">as_decimal</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values).</div>
</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_decimal(com.snowflake.snowpark_java.Column,int)">as_decimal</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
          int&nbsp;precision)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values), with
 precision.</div>
</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_decimal(com.snowflake.snowpark_java.Column,int,int)">as_decimal</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
          int&nbsp;precision,
          int&nbsp;scale)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values), with
 precision and scale.</div>
</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_double(com.snowflake.snowpark_java.Column)">as_double</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a floating-point value.</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_integer(com.snowflake.snowpark_java.Column)">as_integer</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to an integer.</div>
</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_number(com.snowflake.snowpark_java.Column)">as_number</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values).</div>
</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_number(com.snowflake.snowpark_java.Column,int)">as_number</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
         int&nbsp;precision)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values), with
 precision and scale.</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_number(com.snowflake.snowpark_java.Column,int,int)">as_number</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
         int&nbsp;precision,
         int&nbsp;scale)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values), with
 precision.</div>
</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_object(com.snowflake.snowpark_java.Column)">as_object</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to an object.</div>
</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_real(com.snowflake.snowpark_java.Column)">as_real</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a floating-point value.</div>
</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_time(com.snowflake.snowpark_java.Column)">as_time</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a time value.</div>
</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_timestamp_ltz(com.snowflake.snowpark_java.Column)">as_timestamp_ltz</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a TIMESTAMP value with local timezone.</div>
</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_timestamp_ntz(com.snowflake.snowpark_java.Column)">as_timestamp_ntz</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a TIMESTAMP value with no timezone.</div>
</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_timestamp_tz(com.snowflake.snowpark_java.Column)">as_timestamp_tz</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a TIMESTAMP value with timezone.</div>
</td>
</tr>
<tr id="i42" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#as_varchar(com.snowflake.snowpark_java.Column)">as_varchar</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</code></th>
<td class="colLast">
<div class="block">Casts a VARIANT value to a string.</div>
</td>
</tr>
<tr id="i43" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ascii(com.snowflake.snowpark_java.Column)">ascii</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns the ASCII code for the first character of a string.</div>
</td>
</tr>
<tr id="i44" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#asin(com.snowflake.snowpark_java.Column)">asin</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Computes the inverse sine (arc sine) of its argument; the result is a number in the interval
 [-pi, pi].</div>
</td>
</tr>
<tr id="i45" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#atan(com.snowflake.snowpark_java.Column)">atan</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Computes the inverse tangent (arc tangent) of its argument; the result is a number in the
 interval [-pi, pi].</div>
</td>
</tr>
<tr id="i46" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#atan2(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">atan2</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;y,
     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;x)</code></th>
<td class="colLast">
<div class="block">Computes the inverse tangent (arc tangent) of the ratio of its two arguments.</div>
</td>
</tr>
<tr id="i47" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#avg(com.snowflake.snowpark_java.Column)">avg</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the average of non-NULL records.</div>
</td>
</tr>
<tr id="i48" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#bitnot(com.snowflake.snowpark_java.Column)">bitnot</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the bitwise negation of a numeric expression.</div>
</td>
</tr>
<tr id="i49" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#bitshiftleft(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">bitshiftleft</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;numBits)</code></th>
<td class="colLast">
<div class="block">Shifts the bits for a numeric expression numBits positions to the left.</div>
</td>
</tr>
<tr id="i50" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#bitshiftright(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">bitshiftright</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;numBits)</code></th>
<td class="colLast">
<div class="block">Shifts the bits for a numeric expression numBits positions to the right.</div>
</td>
</tr>
<tr id="i51" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#callUDF(java.lang.String,com.snowflake.snowpark_java.Column...)">callUDF</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;udfName,
       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</code></th>
<td class="colLast">
<div class="block">Calls a user-defined function (UDF) by name.</div>
</td>
</tr>
<tr id="i52" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ceil(com.snowflake.snowpark_java.Column)">ceil</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns values from the specified column rounded to the nearest equal or larger integer.</div>
</td>
</tr>
<tr id="i53" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#charindex(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">charindex</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;targetExpr,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sourceExpr)</code></th>
<td class="colLast">
<div class="block">Searches for targetExpr in sourceExpr and, if successful, returns the position (1-based) of the
 targetExpr in sourceExpr.</div>
</td>
</tr>
<tr id="i54" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#charindex(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">charindex</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;targetExpr,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sourceExpr,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;position)</code></th>
<td class="colLast">
<div class="block">Searches for targetExpr in sourceExpr and, if successful, returns the position (1-based) of the
 targetExpr in sourceExpr.</div>
</td>
</tr>
<tr id="i55" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#check_json(com.snowflake.snowpark_java.Column)">check_json</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Checks the validity of a JSON document.</div>
</td>
</tr>
<tr id="i56" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#check_xml(com.snowflake.snowpark_java.Column)">check_xml</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Checks the validity of an XML document.</div>
</td>
</tr>
<tr id="i57" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#chr(com.snowflake.snowpark_java.Column)">chr</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Converts a Unicode code point (including 7-bit ASCII) into the character that matches the input
 Unicode.</div>
</td>
</tr>
<tr id="i58" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#coalesce(com.snowflake.snowpark_java.Column...)">coalesce</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</code></th>
<td class="colLast">
<div class="block">Returns the first non-NULL expression among its arguments, or NULL if all its arguments are
 NULL.</div>
</td>
</tr>
<tr id="i59" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#col(com.snowflake.snowpark_java.DataFrame)">col</a></span>&#8203;(<a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;df)</code></th>
<td class="colLast">
<div class="block">Generates a Column representing the result of the input DataFrame.</div>
</td>
</tr>
<tr id="i60" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#col(java.lang.String)">col</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;name)</code></th>
<td class="colLast">
<div class="block">Creates a Column with the specified name.</div>
</td>
</tr>
<tr id="i61" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#collate(com.snowflake.snowpark_java.Column,java.lang.String)">collate</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr,
       <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;collationSpec)</code></th>
<td class="colLast">
<div class="block">Returns a copy of expr, but with the specified collationSpec property instead of the original
 collation specification property.</div>
</td>
</tr>
<tr id="i62" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#collation(com.snowflake.snowpark_java.Column)">collation</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr)</code></th>
<td class="colLast">
<div class="block">Returns the collation specification of expr.</div>
</td>
</tr>
<tr id="i63" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#concat(com.snowflake.snowpark_java.Column...)">concat</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;exprs)</code></th>
<td class="colLast">
<div class="block">Concatenates one or more strings, or concatenates one or more binary values.</div>
</td>
</tr>
<tr id="i64" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#concat_ws(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column...)">concat_ws</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;separator,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;exprs)</code></th>
<td class="colLast">
<div class="block">Concatenates two or more strings, or concatenates two or more binary values.</div>
</td>
</tr>
<tr id="i65" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#contains(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">contains</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str)</code></th>
<td class="colLast">
<div class="block">Returns true if col contains str.</div>
</td>
</tr>
<tr id="i66" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#convert_timezone(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">convert_timezone</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;targetTimeZone,
                <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sourceTimestamp)</code></th>
<td class="colLast">
<div class="block">Converts the given sourceTimestampNTZ to targetTimeZone.</div>
</td>
</tr>
<tr id="i67" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#convert_timezone(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">convert_timezone</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sourceTimeZone,
                <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;targetTimeZone,
                <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sourceTimestampNTZ)</code></th>
<td class="colLast">
<div class="block">Converts the given sourceTimestampNTZ from sourceTimeZone to targetTimeZone.</div>
</td>
</tr>
<tr id="i68" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#corr(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">corr</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</code></th>
<td class="colLast">
<div class="block">Returns the correlation coefficient for non-null pairs in a group.</div>
</td>
</tr>
<tr id="i69" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#cos(com.snowflake.snowpark_java.Column)">cos</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Computes the cosine of its argument; the argument should be expressed in radians.</div>
</td>
</tr>
<tr id="i70" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#cosh(com.snowflake.snowpark_java.Column)">cosh</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Computes the hyperbolic cosine of its argument.</div>
</td>
</tr>
<tr id="i71" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#count(com.snowflake.snowpark_java.Column)">count</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns either the number of non-NULL records for the specified columns, or the total number of
 records.</div>
</td>
</tr>
<tr id="i72" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#count_distinct(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column...)">count_distinct</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;first,
              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;remaining)</code></th>
<td class="colLast">
<div class="block">Returns either the number of non-NULL distinct records for the specified columns, or the total
 number of the distinct records.</div>
</td>
</tr>
<tr id="i73" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#covar_pop(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">covar_pop</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</code></th>
<td class="colLast">
<div class="block">Calculates the population covariance for non-null pairs in a group.</div>
</td>
</tr>
<tr id="i74" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#covar_samp(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">covar_samp</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</code></th>
<td class="colLast">
<div class="block">Calculates the sample covariance for non-null pairs in a group.</div>
</td>
</tr>
<tr id="i75" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#cume_dist()">cume_dist</a></span>()</code></th>
<td class="colLast">
<div class="block">Finds the cumulative distribution of a value with regard to other values within the same window
 partition.</div>
</td>
</tr>
<tr id="i76" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_account()">current_account</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the account used by the user's current session.</div>
</td>
</tr>
<tr id="i77" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_available_roles()">current_available_roles</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a JSON string that lists all roles granted to the current user.</div>
</td>
</tr>
<tr id="i78" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_database()">current_database</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the name of the database in use for the current session.</div>
</td>
</tr>
<tr id="i79" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_date()">current_date</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the current date of the system.</div>
</td>
</tr>
<tr id="i80" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_region()">current_region</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the name of the region for the account where the current user is logged in.</div>
</td>
</tr>
<tr id="i81" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_role()">current_role</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the name of the role in use for the current session.</div>
</td>
</tr>
<tr id="i82" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_schema()">current_schema</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the name of the schema in use by the current session.</div>
</td>
</tr>
<tr id="i83" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_schemas()">current_schemas</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns active search path schemas.</div>
</td>
</tr>
<tr id="i84" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_session()">current_session</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a unique system identifier for the Snowflake session corresponding to the present
 connection.</div>
</td>
</tr>
<tr id="i85" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_statement()">current_statement</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the SQL text of the statement that is currently executing.</div>
</td>
</tr>
<tr id="i86" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_time()">current_time</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the current time for the system.</div>
</td>
</tr>
<tr id="i87" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_timestamp()">current_timestamp</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the current timestamp for the system.</div>
</td>
</tr>
<tr id="i88" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_user()">current_user</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the name of the user currently logged into the system.</div>
</td>
</tr>
<tr id="i89" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_version()">current_version</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the current Snowflake version.</div>
</td>
</tr>
<tr id="i90" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#current_warehouse()">current_warehouse</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the name of the warehouse in use for the current session.</div>
</td>
</tr>
<tr id="i91" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#date_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">date_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day)</code></th>
<td class="colLast">
<div class="block">Creates a date from individual numeric components that represent the year, month, and day of
 the month.</div>
</td>
</tr>
<tr id="i92" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#date_trunc(java.lang.String,com.snowflake.snowpark_java.Column)">date_trunc</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;format,
          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp)</code></th>
<td class="colLast">
<div class="block">Truncates a DATE, TIME, or TIMESTAMP to the specified precision.</div>
</td>
</tr>
<tr id="i93" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#dateadd(java.lang.String,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">dateadd</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;part,
       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;value,
       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr)</code></th>
<td class="colLast">
<div class="block">Adds the specified value for the specified date or time art to date or time expr.</div>
</td>
</tr>
<tr id="i94" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#datediff(java.lang.String,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">datediff</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;part,
        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</code></th>
<td class="colLast">
<div class="block">Calculates the difference between two date, time, or timestamp columns based on the date or
 time part requested.</div>
</td>
</tr>
<tr id="i95" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#dayname(com.snowflake.snowpark_java.Column)">dayname</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr)</code></th>
<td class="colLast">
<div class="block">Extracts the three-letter day-of-week name from the specified date or timestamp.</div>
</td>
</tr>
<tr id="i96" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#dayofmonth(com.snowflake.snowpark_java.Column)">dayofmonth</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Extracts the day of month from a date or timestamp.</div>
</td>
</tr>
<tr id="i97" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#dayofweek(com.snowflake.snowpark_java.Column)">dayofweek</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Extracts the day of week from a date or timestamp.</div>
</td>
</tr>
<tr id="i98" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#dayofyear(com.snowflake.snowpark_java.Column)">dayofyear</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Extracts the day of year from a date or timestamp.</div>
</td>
</tr>
<tr id="i99" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#degrees(com.snowflake.snowpark_java.Column)">degrees</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Converts radians to degrees.</div>
</td>
</tr>
<tr id="i100" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#dense_rank()">dense_rank</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the rank of a value within a group of values, without gaps in the ranks.</div>
</td>
</tr>
<tr id="i101" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#div0(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">div0</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dividend,
    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;divisor)</code></th>
<td class="colLast">
<div class="block">Performs division like the division operator (/), but returns 0 when the divisor is 0 (rather
 than reporting an error).</div>
</td>
</tr>
<tr id="i102" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#endswith(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">endswith</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr,
        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str)</code></th>
<td class="colLast">
<div class="block">Returns TRUE if expr ends with str.</div>
</td>
</tr>
<tr id="i103" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#equal_nan(com.snowflake.snowpark_java.Column)">equal_nan</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the value in the column is not a number (NaN).</div>
</td>
</tr>
<tr id="i104" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#exp(com.snowflake.snowpark_java.Column)">exp</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Computes Euler's number e raised to a floating-point value.</div>
</td>
</tr>
<tr id="i105" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#factorial(com.snowflake.snowpark_java.Column)">factorial</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Computes the factorial of its input.</div>
</td>
</tr>
<tr id="i106" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#floor(com.snowflake.snowpark_java.Column)">floor</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns values from the specified column rounded to the nearest equal or smaller integer.</div>
</td>
</tr>
<tr id="i107" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#get(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">get</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</code></th>
<td class="colLast">
<div class="block">Extracts a value from an object or array; returns NULL if either of the arguments is NULL.</div>
</td>
</tr>
<tr id="i108" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#get_ignore_case(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">get_ignore_case</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj,
               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;field)</code></th>
<td class="colLast">
<div class="block">Extracts a field value from an object; returns NULL if either of the arguments is NULL.</div>
</td>
</tr>
<tr id="i109" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#get_path(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">get_path</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;path)</code></th>
<td class="colLast">
<div class="block">Extracts a value from semi-structured data using a path name.</div>
</td>
</tr>
<tr id="i110" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#greatest(com.snowflake.snowpark_java.Column...)">greatest</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</code></th>
<td class="colLast">
<div class="block">Returns the largest value from a list of expressions.</div>
</td>
</tr>
<tr id="i111" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#grouping(com.snowflake.snowpark_java.Column)">grouping</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Describes which of a list of expressions are grouped in a row produced by a GROUP BY query.</div>
</td>
</tr>
<tr id="i112" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#grouping_id(com.snowflake.snowpark_java.Column...)">grouping_id</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</code></th>
<td class="colLast">
<div class="block">Describes which of a list of expressions are grouped in a row produced by a GROUP BY query.</div>
</td>
</tr>
<tr id="i113" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hash(com.snowflake.snowpark_java.Column...)">hash</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</code></th>
<td class="colLast">
<div class="block">Returns a signed 64-bit hash value.</div>
</td>
</tr>
<tr id="i114" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hour(com.snowflake.snowpark_java.Column)">hour</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Extracts the hour from a date or timestamp.</div>
</td>
</tr>
<tr id="i115" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#iff(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">iff</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition,
   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr1,
   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr2)</code></th>
<td class="colLast">
<div class="block">Returns one of two specified expressions, depending on a condition.</div>
</td>
</tr>
<tr id="i116" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#in(com.snowflake.snowpark_java.Column%5B%5D,com.snowflake.snowpark_java.DataFrame)">in</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>[]&nbsp;columns,
  <a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;df)</code></th>
<td class="colLast">
<div class="block">Returns a conditional expression that you can pass to the filter or where method to perform the
 equivalent of a WHERE ...</div>
</td>
</tr>
<tr id="i117" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#in(com.snowflake.snowpark_java.Column%5B%5D,java.util.List)">in</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>[]&nbsp;columns,
  <a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&gt;&gt;&nbsp;values)</code></th>
<td class="colLast">
<div class="block">Returns a conditional expression that you can pass to the filter or where method to perform the
 equivalent of a WHERE ...</div>
</td>
</tr>
<tr id="i118" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#initcap(com.snowflake.snowpark_java.Column)">initcap</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns the input string with the first letter of each word in uppercase and the subsequent
 letters in lowercase.</div>
</td>
</tr>
<tr id="i119" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#insert(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">insert</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;baseExpr,
      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;position,
      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;length,
      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;insertExpr)</code></th>
<td class="colLast">
<div class="block">Replaces a substring of the specified length, starting at the specified position, with a new
 string or binary value.</div>
</td>
</tr>
<tr id="i120" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_array(com.snowflake.snowpark_java.Column)">is_array</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains an ARRAY value.</div>
</td>
</tr>
<tr id="i121" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_binary(com.snowflake.snowpark_java.Column)">is_binary</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a binary value.</div>
</td>
</tr>
<tr id="i122" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_boolean(com.snowflake.snowpark_java.Column)">is_boolean</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a Boolean value.</div>
</td>
</tr>
<tr id="i123" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_char(com.snowflake.snowpark_java.Column)">is_char</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a string value.</div>
</td>
</tr>
<tr id="i124" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_date(com.snowflake.snowpark_java.Column)">is_date</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a DATE value.</div>
</td>
</tr>
<tr id="i125" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_date_value(com.snowflake.snowpark_java.Column)">is_date_value</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a DATE value.</div>
</td>
</tr>
<tr id="i126" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_decimal(com.snowflake.snowpark_java.Column)">is_decimal</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a fixed-point decimal value or integer.</div>
</td>
</tr>
<tr id="i127" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_double(com.snowflake.snowpark_java.Column)">is_double</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a floating-point value, fixed-point
 decimal, or integer.</div>
</td>
</tr>
<tr id="i128" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_integer(com.snowflake.snowpark_java.Column)">is_integer</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains an integer value.</div>
</td>
</tr>
<tr id="i129" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_null(com.snowflake.snowpark_java.Column)">is_null</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the value in the column is null.</div>
</td>
</tr>
<tr id="i130" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_null_value(com.snowflake.snowpark_java.Column)">is_null_value</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column is a JSON null value.</div>
</td>
</tr>
<tr id="i131" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_object(com.snowflake.snowpark_java.Column)">is_object</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains an OBJECT value.</div>
</td>
</tr>
<tr id="i132" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_real(com.snowflake.snowpark_java.Column)">is_real</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a floating-point value, fixed-point
 decimal, or integer.</div>
</td>
</tr>
<tr id="i133" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_time(com.snowflake.snowpark_java.Column)">is_time</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a TIME value.</div>
</td>
</tr>
<tr id="i134" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_timestamp_ltz(com.snowflake.snowpark_java.Column)">is_timestamp_ltz</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a TIMESTAMP value to be interpreted using
 the local time zone.</div>
</td>
</tr>
<tr id="i135" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_timestamp_ntz(com.snowflake.snowpark_java.Column)">is_timestamp_ntz</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a TIMESTAMP value with no time zone.</div>
</td>
</tr>
<tr id="i136" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_timestamp_tz(com.snowflake.snowpark_java.Column)">is_timestamp_tz</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a TIMESTAMP value with a time zone.</div>
</td>
</tr>
<tr id="i137" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#is_varchar(com.snowflake.snowpark_java.Column)">is_varchar</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified VARIANT column contains a string value.</div>
</td>
</tr>
<tr id="i138" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#json_extract_path_text(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">json_extract_path_text</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;path)</code></th>
<td class="colLast">
<div class="block">Parses a JSON string and returns the value of an element at a specified path in the resulting
 JSON document.</div>
</td>
</tr>
<tr id="i139" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#kurtosis(com.snowflake.snowpark_java.Column)">kurtosis</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the population excess kurtosis of non-NULL records.</div>
</td>
</tr>
<tr id="i140" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lag(com.snowflake.snowpark_java.Column)">lag</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Accesses data in a previous row in the same result set without having to join the table to
 itself.</div>
</td>
</tr>
<tr id="i141" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lag(com.snowflake.snowpark_java.Column,int)">lag</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
   int&nbsp;offset)</code></th>
<td class="colLast">
<div class="block">Accesses data in a previous row in the same result set without having to join the table to
 itself.</div>
</td>
</tr>
<tr id="i142" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lag(com.snowflake.snowpark_java.Column,int,com.snowflake.snowpark_java.Column)">lag</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
   int&nbsp;offset,
   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;defaultValue)</code></th>
<td class="colLast">
<div class="block">Accesses data in a previous row in the same result set without having to join the table to
 itself.</div>
</td>
</tr>
<tr id="i143" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#last_day(com.snowflake.snowpark_java.Column)">last_day</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns the last day of the specified date part for a date or timestamp.</div>
</td>
</tr>
<tr id="i144" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lead(com.snowflake.snowpark_java.Column)">lead</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Accesses data in a subsequent row in the same result set without having to join the table to
 itself.</div>
</td>
</tr>
<tr id="i145" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lead(com.snowflake.snowpark_java.Column,int)">lead</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
    int&nbsp;offset)</code></th>
<td class="colLast">
<div class="block">Accesses data in a subsequent row in the same result set without having to join the table to
 itself.</div>
</td>
</tr>
<tr id="i146" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lead(com.snowflake.snowpark_java.Column,int,com.snowflake.snowpark_java.Column)">lead</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
    int&nbsp;offset,
    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;defaultValue)</code></th>
<td class="colLast">
<div class="block">Accesses data in a subsequent row in the same result set without having to join the table to
 itself.</div>
</td>
</tr>
<tr id="i147" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#least(com.snowflake.snowpark_java.Column...)">least</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</code></th>
<td class="colLast">
<div class="block">Returns the smallest value from a list of expressions.</div>
</td>
</tr>
<tr id="i148" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#left(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">left</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lengthExpr)</code></th>
<td class="colLast">
<div class="block">Returns a left most substring of strExpr.</div>
</td>
</tr>
<tr id="i149" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#length(com.snowflake.snowpark_java.Column)">length</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns the length of an input string or binary value.</div>
</td>
</tr>
<tr id="i150" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#listagg(com.snowflake.snowpark_java.Column)">listagg</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the concatenated input values, separated by empty string.</div>
</td>
</tr>
<tr id="i151" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#listagg(com.snowflake.snowpark_java.Column,java.lang.String)">listagg</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
       <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;delimiter)</code></th>
<td class="colLast">
<div class="block">Returns the concatenated input values, separated by `delimiter` string.</div>
</td>
</tr>
<tr id="i152" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#listagg(com.snowflake.snowpark_java.Column,java.lang.String,boolean)">listagg</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
       <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;delimiter,
       boolean&nbsp;isDistinct)</code></th>
<td class="colLast">
<div class="block">Returns the concatenated input values, separated by `delimiter` string.</div>
</td>
</tr>
<tr id="i153" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lit(java.lang.Object)">lit</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;literal)</code></th>
<td class="colLast">
<div class="block">Creates a Column expression for a literal value.</div>
</td>
</tr>
<tr id="i154" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#log(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">log</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;base,
   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;a)</code></th>
<td class="colLast">
<div class="block">Returns the logarithm of a numeric expression.</div>
</td>
</tr>
<tr id="i155" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lower(com.snowflake.snowpark_java.Column)">lower</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns the input string with all characters converted to lowercase.</div>
</td>
</tr>
<tr id="i156" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lpad(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">lpad</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str,
    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;len,
    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pad)</code></th>
<td class="colLast">
<div class="block">Left-pads a string with characters from another string, or left-pads a binary value with bytes
 from another binary value.</div>
</td>
</tr>
<tr id="i157" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ltrim(com.snowflake.snowpark_java.Column)">ltrim</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Removes leading characters, including whitespace, from a string.</div>
</td>
</tr>
<tr id="i158" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ltrim(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">ltrim</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;trimString)</code></th>
<td class="colLast">
<div class="block">Removes leading characters, including whitespace, from a string.</div>
</td>
</tr>
<tr id="i159" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#max(com.snowflake.snowpark_java.Column)">max</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the maximum value for the records in a group.</div>
</td>
</tr>
<tr id="i160" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#md5(com.snowflake.snowpark_java.Column)">md5</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns a 32-character hex-encoded string containing the 128-bit MD5 message digest.</div>
</td>
</tr>
<tr id="i161" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mean(com.snowflake.snowpark_java.Column)">mean</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the average of non-NULL records.</div>
</td>
</tr>
<tr id="i162" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#median(com.snowflake.snowpark_java.Column)">median</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the median value for the records in a group.</div>
</td>
</tr>
<tr id="i163" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#min(com.snowflake.snowpark_java.Column)">min</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the minimum value for the records in a group.</div>
</td>
</tr>
<tr id="i164" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#minute(com.snowflake.snowpark_java.Column)">minute</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Extracts the minute from a date or timestamp.</div>
</td>
</tr>
<tr id="i165" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#month(com.snowflake.snowpark_java.Column)">month</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Extracts the month from a date or timestamp.</div>
</td>
</tr>
<tr id="i166" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#monthname(com.snowflake.snowpark_java.Column)">monthname</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr)</code></th>
<td class="colLast">
<div class="block">Extracts the three-letter month name from the specified date or timestamp.</div>
</td>
</tr>
<tr id="i167" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#negate(com.snowflake.snowpark_java.Column)">negate</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the negation of the value in the column (equivalent to a unary minus).</div>
</td>
</tr>
<tr id="i168" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#next_day(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">next_day</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;date,
        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dayOfWeek)</code></th>
<td class="colLast">
<div class="block">Returns the date of the first specified DOW (day of week) that occurs after the input date.</div>
</td>
</tr>
<tr id="i169" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#not(com.snowflake.snowpark_java.Column)">not</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the inverse of a boolean expression.</div>
</td>
</tr>
<tr id="i170" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ntile(com.snowflake.snowpark_java.Column)">ntile</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Divides an ordered data set equally into the number of buckets specified by n.</div>
</td>
</tr>
<tr id="i171" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#object_construct(com.snowflake.snowpark_java.Column...)">object_construct</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;key_values)</code></th>
<td class="colLast">
<div class="block">Returns an OBJECT constructed from the arguments.</div>
</td>
</tr>
<tr id="i172" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#object_delete(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column...)">object_delete</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj,
             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;key1,
             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;keys)</code></th>
<td class="colLast">
<div class="block">Returns an object containing the contents of the input (i.e.source) object with one or more
 keys removed.</div>
</td>
</tr>
<tr id="i173" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#object_insert(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">object_insert</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj,
             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;key,
             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;value)</code></th>
<td class="colLast">
<div class="block">Returns an object consisting of the input object with a new key-value pair inserted.</div>
</td>
</tr>
<tr id="i174" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#object_insert(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">object_insert</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj,
             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;key,
             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;value,
             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;update_flag)</code></th>
<td class="colLast">
<div class="block">Returns an object consisting of the input object with a new key-value pair inserted (or an
 existing key updated with a new value).</div>
</td>
</tr>
<tr id="i175" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#object_keys(com.snowflake.snowpark_java.Column)">object_keys</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj)</code></th>
<td class="colLast">
<div class="block">Returns an array containing the list of keys in the input object.</div>
</td>
</tr>
<tr id="i176" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#object_pick(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column...)">object_pick</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj,
           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;key1,
           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;keys)</code></th>
<td class="colLast">
<div class="block">Returns a new OBJECT containing some of the key-value pairs from an existing object.</div>
</td>
</tr>
<tr id="i177" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#objectagg(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">objectagg</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;key,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;value)</code></th>
<td class="colLast">
<div class="block">Returns one OBJECT per group.</div>
</td>
</tr>
<tr id="i178" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#parse_json(com.snowflake.snowpark_java.Column)">parse_json</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Parse the value of the specified column as a JSON string and returns the resulting JSON
 document.</div>
</td>
</tr>
<tr id="i179" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#parse_xml(com.snowflake.snowpark_java.Column)">parse_xml</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Parse the value of the specified column as a JSON string and returns the resulting XML
 document.</div>
</td>
</tr>
<tr id="i180" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#percent_rank()">percent_rank</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the relative rank of a value within a group of values, specified as a percentage
 ranging from 0.0 to 1.0.</div>
</td>
</tr>
<tr id="i181" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#pow(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">pow</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;l,
   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;r)</code></th>
<td class="colLast">
<div class="block">Returns a number (l) raised to the specified power (r).</div>
</td>
</tr>
<tr id="i182" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#previous_day(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">previous_day</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;date,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dayOfWeek)</code></th>
<td class="colLast">
<div class="block">Returns the date of the first specified DOW (day of week) that occurs before the input date.</div>
</td>
</tr>
<tr id="i183" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#quarter(com.snowflake.snowpark_java.Column)">quarter</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Extracts the quarter from a date or timestamp.</div>
</td>
</tr>
<tr id="i184" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#radians(com.snowflake.snowpark_java.Column)">radians</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Converts degrees to radians.</div>
</td>
</tr>
<tr id="i185" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#random()">random</a></span>()</code></th>
<td class="colLast">
<div class="block">Each call returns a pseudo-random 64-bit integer.</div>
</td>
</tr>
<tr id="i186" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#random(long)">random</a></span>&#8203;(long&nbsp;seed)</code></th>
<td class="colLast">
<div class="block">Each call returns a pseudo-random 64-bit integer.</div>
</td>
</tr>
<tr id="i187" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#rank()">rank</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the rank of a value within an ordered group of values.</div>
</td>
</tr>
<tr id="i188" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#regexp_count(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">regexp_count</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern)</code></th>
<td class="colLast">
<div class="block">Returns the number of times that a pattern occurs in a strExpr.</div>
</td>
</tr>
<tr id="i189" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#regexp_count(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">regexp_count</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;position,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;parameters)</code></th>
<td class="colLast">
<div class="block">Returns the number of times that a pattern occurs in a strExpr.</div>
</td>
</tr>
<tr id="i190" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#regexp_replace(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">regexp_replace</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern)</code></th>
<td class="colLast">
<div class="block">Returns the subject with the specified pattern (or all occurrences of the pattern) removed.</div>
</td>
</tr>
<tr id="i191" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#regexp_replace(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">regexp_replace</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern,
              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;replacement)</code></th>
<td class="colLast">
<div class="block">Returns the subject with the specified pattern (or all occurrences of the pattern) replaced by
 a replacement string.</div>
</td>
</tr>
<tr id="i192" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#repeat(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">repeat</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str,
      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;n)</code></th>
<td class="colLast">
<div class="block">Builds a string by repeating the input for the specified number of times.</div>
</td>
</tr>
<tr id="i193" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#replace(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">replace</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern)</code></th>
<td class="colLast">
<div class="block">Removes all occurrences of a specified strExpr, and optionally replaces them with replacement.</div>
</td>
</tr>
<tr id="i194" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#replace(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">replace</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern,
       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;replacement)</code></th>
<td class="colLast">
<div class="block">Removes all occurrences of a specified strExpr, and optionally replaces them with replacement.</div>
</td>
</tr>
<tr id="i195" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#right(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">right</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lengthExpr)</code></th>
<td class="colLast">
<div class="block">Returns a right most substring of strExpr.</div>
</td>
</tr>
<tr id="i196" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#round(com.snowflake.snowpark_java.Column)">round</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns rounded values for the specified column.</div>
</td>
</tr>
<tr id="i197" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#round(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">round</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;scale)</code></th>
<td class="colLast">
<div class="block">Returns rounded values for the specified column.</div>
</td>
</tr>
<tr id="i198" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#row_number()">row_number</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a unique row number for each row within a window partition.</div>
</td>
</tr>
<tr id="i199" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#rpad(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">rpad</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str,
    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;len,
    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pad)</code></th>
<td class="colLast">
<div class="block">Right-pads a string with characters from another string, or right-pads a binary value with
 bytes from another binary value.</div>
</td>
</tr>
<tr id="i200" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#rtrim(com.snowflake.snowpark_java.Column)">rtrim</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Removes trailing characters, including whitespace, from a string.</div>
</td>
</tr>
<tr id="i201" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#rtrim(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">rtrim</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;trimString)</code></th>
<td class="colLast">
<div class="block">Removes trailing characters, including whitespace, from a string.</div>
</td>
</tr>
<tr id="i202" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#second(com.snowflake.snowpark_java.Column)">second</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Extracts the second from a date or timestamp.</div>
</td>
</tr>
<tr id="i203" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#seq1()">seq1</a></span>()</code></th>
<td class="colLast">
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around.</div>
</td>
</tr>
<tr id="i204" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#seq1(boolean)">seq1</a></span>&#8203;(boolean&nbsp;startsFromZero)</code></th>
<td class="colLast">
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around.</div>
</td>
</tr>
<tr id="i205" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#seq2()">seq2</a></span>()</code></th>
<td class="colLast">
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around.</div>
</td>
</tr>
<tr id="i206" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#seq2(boolean)">seq2</a></span>&#8203;(boolean&nbsp;startsFromZero)</code></th>
<td class="colLast">
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around.</div>
</td>
</tr>
<tr id="i207" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#seq4()">seq4</a></span>()</code></th>
<td class="colLast">
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around.</div>
</td>
</tr>
<tr id="i208" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#seq4(boolean)">seq4</a></span>&#8203;(boolean&nbsp;startsFromZero)</code></th>
<td class="colLast">
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around.</div>
</td>
</tr>
<tr id="i209" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#seq8()">seq8</a></span>()</code></th>
<td class="colLast">
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around.</div>
</td>
</tr>
<tr id="i210" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#seq8(boolean)">seq8</a></span>&#8203;(boolean&nbsp;startsFromZero)</code></th>
<td class="colLast">
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around.</div>
</td>
</tr>
<tr id="i211" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sha1(com.snowflake.snowpark_java.Column)">sha1</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns a 40-character hex-encoded string containing the 160-bit SHA-1 message digest.</div>
</td>
</tr>
<tr id="i212" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sha2(com.snowflake.snowpark_java.Column,int)">sha2</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
    int&nbsp;numBits)</code></th>
<td class="colLast">
<div class="block">Returns a hex-encoded string containing the N-bit SHA-2 message digest, where N is the
 specified output digest size.</div>
</td>
</tr>
<tr id="i213" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sin(com.snowflake.snowpark_java.Column)">sin</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Computes the sine of its argument; the argument should be expressed in radians.</div>
</td>
</tr>
<tr id="i214" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sinh(com.snowflake.snowpark_java.Column)">sinh</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Computes the hyperbolic sine of its argument.</div>
</td>
</tr>
<tr id="i215" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#skew(com.snowflake.snowpark_java.Column)">skew</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the sample skewness of non-NULL records.</div>
</td>
</tr>
<tr id="i216" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#soundex(com.snowflake.snowpark_java.Column)">soundex</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns a string that contains a phonetic representation of the input string.</div>
</td>
</tr>
<tr id="i217" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#split(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">split</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str,
     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern)</code></th>
<td class="colLast">
<div class="block">Splits a given string with a given separator and returns the result in an array of strings.</div>
</td>
</tr>
<tr id="i218" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sqlExpr(java.lang.String)">sqlExpr</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;sqlText)</code></th>
<td class="colLast">
<div class="block">Creates a Column expression from row SQL text.</div>
</td>
</tr>
<tr id="i219" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sqrt(com.snowflake.snowpark_java.Column)">sqrt</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the square-root of a non-negative numeric expression.</div>
</td>
</tr>
<tr id="i220" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#startswith(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">startswith</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str)</code></th>
<td class="colLast">
<div class="block">Returns true if col starts with str.</div>
</td>
</tr>
<tr id="i221" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#stddev(com.snowflake.snowpark_java.Column)">stddev</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the sample standard deviation (square root of sample variance) of non-NULL values.</div>
</td>
</tr>
<tr id="i222" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#stddev_pop(com.snowflake.snowpark_java.Column)">stddev_pop</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the population standard deviation (square root of variance) of non-NULL values.</div>
</td>
</tr>
<tr id="i223" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#stddev_samp(com.snowflake.snowpark_java.Column)">stddev_samp</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the sample standard deviation (square root of sample variance) of non-NULL values.</div>
</td>
</tr>
<tr id="i224" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#strip_null_value(com.snowflake.snowpark_java.Column)">strip_null_value</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Converts a JSON "null" value in the specified column to a SQL NULL value.</div>
</td>
</tr>
<tr id="i225" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#strtok_to_array(com.snowflake.snowpark_java.Column)">strtok_to_array</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array)</code></th>
<td class="colLast">
<div class="block">Tokenizes the given string using the given set of delimiters and returns the tokens as an
 array.</div>
</td>
</tr>
<tr id="i226" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#strtok_to_array(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">strtok_to_array</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;delimiter)</code></th>
<td class="colLast">
<div class="block">Tokenizes the given string using the given set of delimiters and returns the tokens as an
 array.</div>
</td>
</tr>
<tr id="i227" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#substring(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">substring</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pos,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;len)</code></th>
<td class="colLast">
<div class="block">Returns the portion of the string or binary value str, starting from the character/byte
 specified by pos, with limited length.</div>
</td>
</tr>
<tr id="i228" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sum(com.snowflake.snowpark_java.Column)">sum</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the sum of non-NULL records in a group.</div>
</td>
</tr>
<tr id="i229" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sum(java.lang.String)">sum</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;colName)</code></th>
<td class="colLast">
<div class="block">Returns the sum of non-NULL records in a group.</div>
</td>
</tr>
<tr id="i230" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sum_distinct(com.snowflake.snowpark_java.Column)">sum_distinct</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the sum of non-NULL distinct records in a group.</div>
</td>
</tr>
<tr id="i231" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sysdate()">sysdate</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the current timestamp for the system, but in the UTC time zone.</div>
</td>
</tr>
<tr id="i232" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#tan(com.snowflake.snowpark_java.Column)">tan</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Computes the tangent of its argument; the argument should be expressed in radians.</div>
</td>
</tr>
<tr id="i233" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#tanh(com.snowflake.snowpark_java.Column)">tanh</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Computes the hyperbolic tangent of its argument.</div>
</td>
</tr>
<tr id="i234" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#time_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">time_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second)</code></th>
<td class="colLast">
<div class="block">Creates a time from individual numeric components.</div>
</td>
</tr>
<tr id="i235" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#time_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">time_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond)</code></th>
<td class="colLast">
<div class="block">Creates a time from individual numeric components.</div>
</td>
</tr>
<tr id="i236" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dateExpr,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timeExpr)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i237" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i238" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i239" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_ltz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_ltz_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i240" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_ltz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_ltz_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i241" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_ntz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_ntz_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dateExpr,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timeExpr)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i242" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_ntz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_ntz_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i243" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_ntz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_ntz_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i244" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_tz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_tz_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i245" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_tz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_tz_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i246" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#timestamp_tz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">timestamp_tz_from_parts</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond,
                       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timezone)</code></th>
<td class="colLast">
<div class="block">Creates a timestamp from individual numeric components.</div>
</td>
</tr>
<tr id="i247" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#to_array(com.snowflake.snowpark_java.Column)">to_array</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Converts the input expression into an array:</div>
</td>
</tr>
<tr id="i248" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#to_date(com.snowflake.snowpark_java.Column)">to_date</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Converts an input expression to a date.</div>
</td>
</tr>
<tr id="i249" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#to_date(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">to_date</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;fmt)</code></th>
<td class="colLast">
<div class="block">Converts an input expression to a date.</div>
</td>
</tr>
<tr id="i250" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#to_decimal(com.snowflake.snowpark_java.Column,int,int)">to_decimal</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr,
          int&nbsp;precision,
          int&nbsp;scale)</code></th>
<td class="colLast">
<div class="block">Converts an input expression to a decimal</div>
</td>
</tr>
<tr id="i251" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#to_json(com.snowflake.snowpark_java.Column)">to_json</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Converts any VARIANT value to a string containing the JSON representation of the value.</div>
</td>
</tr>
<tr id="i252" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#to_object(com.snowflake.snowpark_java.Column)">to_object</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Converts the input value to an object:</div>
</td>
</tr>
<tr id="i253" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#to_timestamp(com.snowflake.snowpark_java.Column)">to_timestamp</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;s)</code></th>
<td class="colLast">
<div class="block">Converts an input expression into the corresponding timestamp.</div>
</td>
</tr>
<tr id="i254" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#to_timestamp(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">to_timestamp</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;s,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;fmt)</code></th>
<td class="colLast">
<div class="block">Converts an input expression into the corresponding timestamp.</div>
</td>
</tr>
<tr id="i255" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#to_variant(com.snowflake.snowpark_java.Column)">to_variant</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Converts any value to VARIANT value or NULL (if input is NULL).</div>
</td>
</tr>
<tr id="i256" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#to_xml(com.snowflake.snowpark_java.Column)">to_xml</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Converts any VARIANT value to a string containing the XML representation of the value.</div>
</td>
</tr>
<tr id="i257" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toScalar(com.snowflake.snowpark_java.DataFrame)">toScalar</a></span>&#8203;(<a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;df)</code></th>
<td class="colLast">
<div class="block">Generates a Column representing the result of the input DataFrame.</div>
</td>
</tr>
<tr id="i258" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#translate(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">translate</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;src,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;matchingString,
         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;replaceString)</code></th>
<td class="colLast">
<div class="block">Translates src from the characters in matchingString to the characters in replaceString.</div>
</td>
</tr>
<tr id="i259" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#trim(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">trim</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;trimString)</code></th>
<td class="colLast">
<div class="block">Removes leading and trailing characters from a string.</div>
</td>
</tr>
<tr id="i260" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#trunc(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">trunc</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr,
     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;scale)</code></th>
<td class="colLast">
<div class="block">Rounds the input expression down to the nearest (or equal) integer closer to zero, or to the
 nearest equal or smaller value with the specified number of places after the decimal point.</div>
</td>
</tr>
<tr id="i261" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF0,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF0.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF0</a>&lt;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 0 argument as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i262" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF1,com.snowflake.snowpark_java.types.DataType,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF1.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF1</a>&lt;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 1 argument as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i263" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF10,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF10.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF10</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 10 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i264" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF11,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF11.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF11</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 11 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i265" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF12,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF12.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF12</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 12 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i266" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF13,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF13.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF13</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 13 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i267" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF14,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF14.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF14</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 14 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i268" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF15,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF15.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF15</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 15 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i269" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF16,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF16.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF16</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 16 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i270" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF17,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF17.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF17</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 17 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i271" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF18,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF18.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF18</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 18 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i272" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF19,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF19.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF19</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 19 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i273" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF2,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF2.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF2</a>&lt;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 2 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i274" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF20,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF20.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF20</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 20 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i275" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF21,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF21.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF21</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 21 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i276" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF22,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF22.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF22</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 22 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i277" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF3,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF3.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF3</a>&lt;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 3 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i278" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF4,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF4.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF4</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 4 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i279" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF5,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF5.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF5</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 5 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i280" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF6,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF6.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF6</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 6 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i281" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF7,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF7.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF7</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 7 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i282" class="altColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF8,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF8.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF8</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 8 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i283" class="rowColor">
<td class="colFirst"><code>static <a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#udf(com.snowflake.snowpark_java.udf.JavaUDF9,com.snowflake.snowpark_java.types.DataType%5B%5D,com.snowflake.snowpark_java.types.DataType)">udf</a></span>&#8203;(<a href="udf/JavaUDF9.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF9</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
   <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</code></th>
<td class="colLast">
<div class="block">Registers a Java Lambda of 9 arguments as a Snowflake UDF and returns the UDF.</div>
</td>
</tr>
<tr id="i284" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#uniform(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">uniform</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;min,
       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;max,
       <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;gen)</code></th>
<td class="colLast">
<div class="block">Returns a uniformly random number, in the inclusive range (`min`, `max`)</div>
</td>
</tr>
<tr id="i285" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#upper(com.snowflake.snowpark_java.Column)">upper</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Returns the input string with all characters converted to uppercase.</div>
</td>
</tr>
<tr id="i286" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#var_pop(com.snowflake.snowpark_java.Column)">var_pop</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the population variance of non-NULL records in a group.</div>
</td>
</tr>
<tr id="i287" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#var_samp(com.snowflake.snowpark_java.Column)">var_samp</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the sample variance of non-NULL records in a group.</div>
</td>
</tr>
<tr id="i288" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#variance(com.snowflake.snowpark_java.Column)">variance</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</code></th>
<td class="colLast">
<div class="block">Returns the sample variance of non-NULL records in a group.</div>
</td>
</tr>
<tr id="i289" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#weekofyear(com.snowflake.snowpark_java.Column)">weekofyear</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Extracts the week of year from a date or timestamp.</div>
</td>
</tr>
<tr id="i290" class="altColor">
<td class="colFirst"><code>static <a href="CaseExpr.html" title="class in com.snowflake.snowpark_java">CaseExpr</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#when(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">when</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition,
    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;value)</code></th>
<td class="colLast">
<div class="block">Works like a cascading if-then-else statement.</div>
</td>
</tr>
<tr id="i291" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#xmlget(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">xmlget</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;xml,
      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;tag)</code></th>
<td class="colLast">
<div class="block">Extracts the first XML element object (often referred to as simply a tag) from a content of
 outer XML element object by the name of the tag</div>
</td>
</tr>
<tr id="i292" class="altColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#xmlget(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">xmlget</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;xml,
      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;tag,
      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;instance)</code></th>
<td class="colLast">
<div class="block">Extracts an XML element object (often referred to as simply a tag) from a content of outer XML
 element object by the name of the tag and its instance number (counting from 0).</div>
</td>
</tr>
<tr id="i293" class="rowColor">
<td class="colFirst"><code>static <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#year(com.snowflake.snowpark_java.Column)">year</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Extracts the year from a date or timestamp.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#clone--" title="class or interface in java.lang" class="externalLink">clone</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#equals-java.lang.Object-" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#finalize--" title="class or interface in java.lang" class="externalLink">finalize</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#getClass--" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#hashCode--" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notify--" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notifyAll--" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString--" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait--" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-int-" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="col(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>col</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;name)</pre>
<div class="block">Creates a Column with the specified name.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>name</code> - The column name</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="col(com.snowflake.snowpark_java.DataFrame)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>col</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col&#8203;(<a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;df)</pre>
<div class="block">Generates a Column representing the result of the input DataFrame. The parameter 'df' should
 have one column and must produce one row. It is an alias of <code>toScalar</code> function.

 <p>For example:

 <pre><code>
 DataFrame df1 = session.sql("select * from values(1,1,1),(2,2,3) as T(c1, c2, c3)");
 DataFrame df2 = session.sql("select * from values(2) as T(a)");
 df1.select(Functions.col("c1"), Functions.col(df2)).show();
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>df</code> - The sub-query Dataframe</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="toScalar(com.snowflake.snowpark_java.DataFrame)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toScalar</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;toScalar&#8203;(<a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;df)</pre>
<div class="block">Generates a Column representing the result of the input DataFrame. The parameter 'df' should
 have one column and must produce one row.

 <p>For example:

 <pre><code>
 DataFrame df1 = session.sql("select * from values(1,1,1),(2,2,3) as T(c1, c2, c3)");
 DataFrame df2 = session.sql("select * from values(2) as T(a)");
 df1.select(Functions.col("c1"), Functions.toScalar(df2)).show();
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>df</code> - The sub-query Dataframe</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="lit(java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lit</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lit&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;literal)</pre>
<div class="block">Creates a Column expression for a literal value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>literal</code> - The literal value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="lead(com.snowflake.snowpark_java.Column,int,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lead</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lead&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                          int&nbsp;offset,
                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;defaultValue)</pre>
<div class="block">Accesses data in a subsequent row in the same result set without having to join the table to
 itself.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dd><code>offset</code> - The function offset</dd>
<dd><code>defaultValue</code> - The default value of lead function</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="lead(com.snowflake.snowpark_java.Column,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lead</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lead&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                          int&nbsp;offset)</pre>
<div class="block">Accesses data in a subsequent row in the same result set without having to join the table to
 itself.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dd><code>offset</code> - The function offset</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="lead(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lead</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lead&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Accesses data in a subsequent row in the same result set without having to join the table to
 itself.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="sqlExpr(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sqlExpr</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sqlExpr&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;sqlText)</pre>
<div class="block">Creates a Column expression from row SQL text.

 <p>Note that the function does not interpret or check the SQL text.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sqlText</code> - The SQL query</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="approx_count_distinct(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>approx_count_distinct</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;approx_count_distinct&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Uses HyperLogLog to return an approximation of the distinct cardinality of the input (i.e.
 returns an approximation of `COUNT(DISTINCT col)`).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="avg(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>avg</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;avg&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the average of non-NULL records. If all records inside a group are NULL, the function
 returns NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="corr(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>corr</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;corr&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</pre>
<div class="block">Returns the correlation coefficient for non-null pairs in a group.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col1</code> - The first input column</dd>
<dd><code>col2</code> - The second input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="count(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>count</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;count&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns either the number of non-NULL records for the specified columns, or the total number of
 records.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="count_distinct(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>count_distinct</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;count_distinct&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;first,
                                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;remaining)</pre>
<div class="block">Returns either the number of non-NULL distinct records for the specified columns, or the total
 number of the distinct records.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>first</code> - The first column</dd>
<dd><code>remaining</code> - A column list except the first column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="covar_pop(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>covar_pop</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;covar_pop&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</pre>
<div class="block">Calculates the population covariance for non-null pairs in a group.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col1</code> - The first column</dd>
<dd><code>col2</code> - The second column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="covar_samp(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>covar_samp</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;covar_samp&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
                                <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</pre>
<div class="block">Calculates the sample covariance for non-null pairs in a group.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col1</code> - The first column</dd>
<dd><code>col2</code> - The second column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="grouping(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>grouping</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;grouping&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Describes which of a list of expressions are grouped in a row produced by a GROUP BY query.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="grouping_id(com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>grouping_id</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;grouping_id&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</pre>
<div class="block">Describes which of a list of expressions are grouped in a row produced by a GROUP BY query.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cols</code> - A list of input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="kurtosis(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>kurtosis</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;kurtosis&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the population excess kurtosis of non-NULL records. If all records inside a group are
 NULL, the function returns NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="max(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>max</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;max&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the maximum value for the records in a group. NULL values are ignored unless all the
 records are NULL, in which case a NULL value is returned.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="min(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>min</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;min&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the minimum value for the records in a group. NULL values are ignored unless all the
 records are NULL, in which case a NULL value is returned.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="mean(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mean</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;mean&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the average of non-NULL records. If all records inside a group are NULL, the function
 returns NULL. Alias of avg</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="median(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>median</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;median&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the median value for the records in a group. NULL values are ignored unless all the
 records are NULL, in which case a NULL value is returned.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="skew(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>skew</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;skew&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the sample skewness of non-NULL records. If all records inside a group are NULL, the
 function returns NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="stddev(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stddev</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;stddev&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the sample standard deviation (square root of sample variance) of non-NULL values. If
 all records inside a group are NULL, returns NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="stddev_samp(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stddev_samp</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;stddev_samp&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the sample standard deviation (square root of sample variance) of non-NULL values. If
 all records inside a group are NULL, returns NULL. Alias of stddev</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input Column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result Column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="stddev_pop(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stddev_pop</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;stddev_pop&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the population standard deviation (square root of variance) of non-NULL values. If all
 records inside a group are NULL, returns NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="sum(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sum</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sum&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the sum of non-NULL records in a group. If all records inside a group are NULL, the
 function returns NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="sum(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sum</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sum&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;colName)</pre>
<div class="block">Returns the sum of non-NULL records in a group. If all records inside a group are NULL, the
 function returns NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>colName</code> - The input column name</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.12.0</dd>
</dl>
</li>
</ul>
<a id="sum_distinct(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sum_distinct</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sum_distinct&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the sum of non-NULL distinct records in a group. You can use the DISTINCT keyword to
 compute the sum of unique non-null values. If all records inside a group are NULL, the function
 returns NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="variance(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>variance</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variance&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the sample variance of non-NULL records in a group. If all records inside a group are
 NULL, a NULL is returned.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="var_samp(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>var_samp</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;var_samp&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the sample variance of non-NULL records in a group. If all records inside a group are
 NULL, a NULL is returned. Alias of var_samp</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="var_pop(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>var_pop</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;var_pop&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the population variance of non-NULL records in a group. If all records inside a group
 are NULL, a NULL is returned.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="approx_percentile(com.snowflake.snowpark_java.Column,double)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>approx_percentile</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;approx_percentile&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                                       double&nbsp;percentile)</pre>
<div class="block">Returns an approximated value for the desired percentile. This function uses the t-Digest
 algorithm.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dd><code>percentile</code> - The desired percentile</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="approx_percentile_accumulate(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>approx_percentile_accumulate</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;approx_percentile_accumulate&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the internal representation of the t-Digest state (as a JSON object) at the end of
 aggregation. This function uses the t-Digest algorithm.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="approx_percentile_estimate(com.snowflake.snowpark_java.Column,double)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>approx_percentile_estimate</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;approx_percentile_estimate&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                                                double&nbsp;percentile)</pre>
<div class="block">Returns the desired approximated percentile value for the specified t-Digest state.
 APPROX_PERCENTILE_ESTIMATE(APPROX_PERCENTILE_ACCUMULATE(.)) is equivalent to
 APPROX_PERCENTILE(.).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dd><code>percentile</code> - The desired percentile</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="approx_percentile_combine(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>approx_percentile_combine</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;approx_percentile_combine&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;state)</pre>
<div class="block">Combines (merges) percentile input states into a single output state.

 <p>This allows scenarios where APPROX_PERCENTILE_ACCUMULATE is run over horizontal partitions
 of the same table, producing an algorithm state for each table partition. These states can
 later be combined using APPROX_PERCENTILE_COMBINE, producing the same output state as a single
 run of APPROX_PERCENTILE_ACCUMULATE over the entire table.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>state</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="cume_dist()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>cume_dist</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;cume_dist()</pre>
<div class="block">Finds the cumulative distribution of a value with regard to other values within the same window
 partition.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="dense_rank()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dense_rank</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dense_rank()</pre>
<div class="block">Returns the rank of a value within a group of values, without gaps in the ranks. The rank value
 starts at 1 and continues up sequentially. If two values are the same, they will have the same
 rank.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="lag(com.snowflake.snowpark_java.Column,int,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lag</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lag&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                         int&nbsp;offset,
                         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;defaultValue)</pre>
<div class="block">Accesses data in a previous row in the same result set without having to join the table to
 itself.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dd><code>offset</code> - The function offset</dd>
<dd><code>defaultValue</code> - The default value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="lag(com.snowflake.snowpark_java.Column,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lag</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lag&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                         int&nbsp;offset)</pre>
<div class="block">Accesses data in a previous row in the same result set without having to join the table to
 itself.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dd><code>offset</code> - The function offset</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="lag(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lag</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lag&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Accesses data in a previous row in the same result set without having to join the table to
 itself.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="ntile(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ntile</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;ntile&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Divides an ordered data set equally into the number of buckets specified by n. Buckets are
 sequentially numbered 1 through n.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="percent_rank()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>percent_rank</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;percent_rank()</pre>
<div class="block">Returns the relative rank of a value within a group of values, specified as a percentage
 ranging from 0.0 to 1.0.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="rank()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rank</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;rank()</pre>
<div class="block">Returns the rank of a value within an ordered group of values. The rank value starts at 1 and
 continues up.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.1.0</dd>
</dl>
</li>
</ul>
<a id="row_number()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>row_number</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;row_number()</pre>
<div class="block">Returns a unique row number for each row within a window partition. The row number starts at 1
 and continues up sequentially.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="coalesce(com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>coalesce</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;coalesce&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</pre>
<div class="block">Returns the first non-NULL expression among its arguments, or NULL if all its arguments are
 NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cols</code> - The list of input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="equal_nan(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>equal_nan</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;equal_nan&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the value in the column is not a number (NaN).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="is_null(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_null</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_null&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the value in the column is null.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.1.0</dd>
</dl>
</li>
</ul>
<a id="negate(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>negate</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;negate&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the negation of the value in the column (equivalent to a unary minus).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="not(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>not</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;not&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the inverse of a boolean expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="random(long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>random</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;random&#8203;(long&nbsp;seed)</pre>
<div class="block">Each call returns a pseudo-random 64-bit integer.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>seed</code> - The random seed</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="random()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>random</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;random()</pre>
<div class="block">Each call returns a pseudo-random 64-bit integer.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="bitnot(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>bitnot</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;bitnot&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the bitwise negation of a numeric expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="to_decimal(com.snowflake.snowpark_java.Column,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>to_decimal</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to_decimal&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr,
                                int&nbsp;precision,
                                int&nbsp;scale)</pre>
<div class="block">Converts an input expression to a decimal</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>expr</code> - The input column</dd>
<dd><code>precision</code> - The precision</dd>
<dd><code>scale</code> - The scale</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="div0(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>div0</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;div0&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dividend,
                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;divisor)</pre>
<div class="block">Performs division like the division operator (/), but returns 0 when the divisor is 0 (rather
 than reporting an error).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>dividend</code> - The dividend</dd>
<dd><code>divisor</code> - The divisor</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="sqrt(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sqrt</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sqrt&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the square-root of a non-negative numeric expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="abs(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>abs</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;abs&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the absolute value of a numeric expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="acos(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>acos</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;acos&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Computes the inverse cosine (arc cosine) of its input; the result is a number in the interval
 [-pi, pi].</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="asin(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>asin</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;asin&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Computes the inverse sine (arc sine) of its argument; the result is a number in the interval
 [-pi, pi].</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="atan(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>atan</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;atan&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Computes the inverse tangent (arc tangent) of its argument; the result is a number in the
 interval [-pi, pi].</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="atan2(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>atan2</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;atan2&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;y,
                           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;x)</pre>
<div class="block">Computes the inverse tangent (arc tangent) of the ratio of its two arguments.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>y</code> - The value of y</dd>
<dd><code>x</code> - The value of x</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="ceil(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ceil</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;ceil&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns values from the specified column rounded to the nearest equal or larger integer.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="floor(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>floor</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;floor&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns values from the specified column rounded to the nearest equal or smaller integer.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="cos(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>cos</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;cos&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Computes the cosine of its argument; the argument should be expressed in radians.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="cosh(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>cosh</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;cosh&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Computes the hyperbolic cosine of its argument.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="exp(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>exp</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;exp&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Computes Euler's number e raised to a floating-point value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="factorial(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>factorial</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;factorial&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Computes the factorial of its input. The input argument must be an integer expression in the
 range of 0 to 33.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="greatest(com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>greatest</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;greatest&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</pre>
<div class="block">Returns the largest value from a list of expressions. If any of the argument values is NULL,
 the result is NULL. GREATEST supports all data types, including VARIANT.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cols</code> - The list of input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="least(com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>least</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;least&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</pre>
<div class="block">Returns the smallest value from a list of expressions. LEAST supports all data types, including
 VARIANT.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cols</code> - The list of input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="log(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>log</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;log&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;base,
                         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;a)</pre>
<div class="block">Returns the logarithm of a numeric expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>base</code> - The value of base</dd>
<dd><code>a</code> - the value of A</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="pow(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>pow</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pow&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;l,
                         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;r)</pre>
<div class="block">Returns a number (l) raised to the specified power (r).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>l</code> - The value of l</dd>
<dd><code>r</code> - The value of r</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="round(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>round</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;round&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
                           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;scale)</pre>
<div class="block">Returns rounded values for the specified column.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dd><code>scale</code> - The scale</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="round(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>round</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;round&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns rounded values for the specified column.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="bitshiftleft(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>bitshiftleft</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;bitshiftleft&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
                                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;numBits)</pre>
<div class="block">Shifts the bits for a numeric expression numBits positions to the left.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dd><code>numBits</code> - The number of bits</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="bitshiftright(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>bitshiftright</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;bitshiftright&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
                                   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;numBits)</pre>
<div class="block">Shifts the bits for a numeric expression numBits positions to the right.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dd><code>numBits</code> - The number of bits</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="sin(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sin</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sin&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Computes the sine of its argument; the argument should be expressed in radians.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="sinh(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sinh</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sinh&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Computes the hyperbolic sine of its argument.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="tan(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>tan</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;tan&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Computes the tangent of its argument; the argument should be expressed in radians.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="tanh(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>tanh</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;tanh&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Computes the hyperbolic tangent of its argument.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.9.0</dd>
</dl>
</li>
</ul>
<a id="degrees(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>degrees</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;degrees&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Converts radians to degrees.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="radians(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>radians</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;radians&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Converts degrees to radians.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="md5(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>md5</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;md5&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns a 32-character hex-encoded string containing the 128-bit MD5 message digest.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="sha1(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sha1</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sha1&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns a 40-character hex-encoded string containing the 160-bit SHA-1 message digest.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="sha2(com.snowflake.snowpark_java.Column,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sha2</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sha2&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
                          int&nbsp;numBits)</pre>
<div class="block">Returns a hex-encoded string containing the N-bit SHA-2 message digest, where N is the
 specified output digest size.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dd><code>numBits</code> - The number of bits</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="hash(com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hash</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hash&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</pre>
<div class="block">Returns a signed 64-bit hash value. Note that HASH never returns NULL, even for NULL inputs.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cols</code> - The list of input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="ascii(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ascii</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;ascii&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns the ASCII code for the first character of a string. If the string is empty, a value of
 0 is returned.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="concat_ws(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>concat_ws</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;concat_ws&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;separator,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;exprs)</pre>
<div class="block">Concatenates two or more strings, or concatenates two or more binary values. If any of the
 values is null, the result is also null.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>separator</code> - The separator</dd>
<dd><code>exprs</code> - The list of input values</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="initcap(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>initcap</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;initcap&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns the input string with the first letter of each word in uppercase and the subsequent
 letters in lowercase.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="length(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>length</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;length&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns the length of an input string or binary value. For strings, the length is the number of
 characters, and UTF-8 characters are counted as a single character. For binary, the length is
 the number of bytes.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="lower(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lower</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lower&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns the input string with all characters converted to lowercase.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="upper(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>upper</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;upper&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns the input string with all characters converted to uppercase.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="lpad(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lpad</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lpad&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str,
                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;len,
                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pad)</pre>
<div class="block">Left-pads a string with characters from another string, or left-pads a binary value with bytes
 from another binary value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>str</code> - The input string</dd>
<dd><code>len</code> - The length</dd>
<dd><code>pad</code> - The pad</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="rpad(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rpad</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;rpad&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str,
                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;len,
                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pad)</pre>
<div class="block">Right-pads a string with characters from another string, or right-pads a binary value with
 bytes from another binary value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>str</code> - The input string</dd>
<dd><code>len</code> - The length</dd>
<dd><code>pad</code> - The pad</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="ltrim(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ltrim</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;ltrim&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
                           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;trimString)</pre>
<div class="block">Removes leading characters, including whitespace, from a string.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dd><code>trimString</code> - The trim string</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="ltrim(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ltrim</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;ltrim&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Removes leading characters, including whitespace, from a string.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="rtrim(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rtrim</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;rtrim&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
                           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;trimString)</pre>
<div class="block">Removes trailing characters, including whitespace, from a string.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dd><code>trimString</code> - The trim string</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="rtrim(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rtrim</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;rtrim&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Removes trailing characters, including whitespace, from a string.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="trim(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>trim</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;trim&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;trimString)</pre>
<div class="block">Removes leading and trailing characters from a string.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dd><code>trimString</code> - The trim string</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="repeat(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>repeat</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;repeat&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str,
                            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;n)</pre>
<div class="block">Builds a string by repeating the input for the specified number of times.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>str</code> - The input string</dd>
<dd><code>n</code> - The time of repeat</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="soundex(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>soundex</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;soundex&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns a string that contains a phonetic representation of the input string.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="split(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>split</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;split&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str,
                           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern)</pre>
<div class="block">Splits a given string with a given separator and returns the result in an array of strings.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>str</code> - The input string</dd>
<dd><code>pattern</code> - The pattern</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="substring(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>substring</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;substring&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pos,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;len)</pre>
<div class="block">Returns the portion of the string or binary value str, starting from the character/byte
 specified by pos, with limited length.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>str</code> - The input string</dd>
<dd><code>len</code> - The length</dd>
<dd><code>pos</code> - The position</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="any_value(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>any_value</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;any_value&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns a non-deterministic value for the specified column.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.2.0</dd>
</dl>
</li>
</ul>
<a id="translate(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>translate</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;translate&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;src,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;matchingString,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;replaceString)</pre>
<div class="block">Translates src from the characters in matchingString to the characters in replaceString.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>src</code> - The source column</dd>
<dd><code>matchingString</code> - The matching string</dd>
<dd><code>replaceString</code> - The replacement</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="contains(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>contains</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;contains&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str)</pre>
<div class="block">Returns true if col contains str.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dd><code>str</code> - The target string</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="startswith(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startswith</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;startswith&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                                <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str)</pre>
<div class="block">Returns true if col starts with str.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dd><code>str</code> - The target string</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="chr(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>chr</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;chr&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Converts a Unicode code point (including 7-bit ASCII) into the character that matches the input
 Unicode.

 <p>alias for Snowflake char function.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="add_months(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>add_months</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;add_months&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;startDate,
                                <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;numMonths)</pre>
<div class="block">Adds or subtracts a specified number of months to a date or timestamp, preserving the
 end-of-month information.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>startDate</code> - The start date</dd>
<dd><code>numMonths</code> - the number of Months</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_date()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_date</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_date()</pre>
<div class="block">Returns the current date of the system.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_timestamp()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_timestamp</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_timestamp()</pre>
<div class="block">Returns the current timestamp for the system.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_region()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_region</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_region()</pre>
<div class="block">Returns the name of the region for the account where the current user is logged in.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_time()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_time</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_time()</pre>
<div class="block">Returns the current time for the system.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_version()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_version</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_version()</pre>
<div class="block">Returns the current Snowflake version.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_account()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_account</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_account()</pre>
<div class="block">Returns the account used by the user's current session.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_role()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_role</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_role()</pre>
<div class="block">Returns the name of the role in use for the current session.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_available_roles()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_available_roles</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_available_roles()</pre>
<div class="block">Returns a JSON string that lists all roles granted to the current user.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_session()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_session</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_session()</pre>
<div class="block">Returns a unique system identifier for the Snowflake session corresponding to the present
 connection.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_statement()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_statement</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_statement()</pre>
<div class="block">Returns the SQL text of the statement that is currently executing.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_user()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_user</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_user()</pre>
<div class="block">Returns the name of the user currently logged into the system.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_database()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_database</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_database()</pre>
<div class="block">Returns the name of the database in use for the current session.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_schema()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_schema</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_schema()</pre>
<div class="block">Returns the name of the schema in use by the current session.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_schemas()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_schemas</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_schemas()</pre>
<div class="block">Returns active search path schemas.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="current_warehouse()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>current_warehouse</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;current_warehouse()</pre>
<div class="block">Returns the name of the warehouse in use for the current session.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="sysdate()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sysdate</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sysdate()</pre>
<div class="block">Returns the current timestamp for the system, but in the UTC time zone.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="convert_timezone(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>convert_timezone</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;convert_timezone&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sourceTimeZone,
                                      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;targetTimeZone,
                                      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sourceTimestampNTZ)</pre>
<div class="block">Converts the given sourceTimestampNTZ from sourceTimeZone to targetTimeZone.

 <p>Supported time zones are listed <a href="https://docs.snowflake.com/en/sql-reference/functions/convert_timezone.html#usage-notes">here</a>

 <p>Example

 <pre><code>
 df.select(Functions.convert_timezone(Functions.lit("America/Los_Angeles"),
 Functions.lit("America/New_York"), df.col("time")));
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sourceTimestampNTZ</code> - The timestamp</dd>
<dd><code>targetTimeZone</code> - The target time zone</dd>
<dd><code>sourceTimeZone</code> - The source time zone</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="convert_timezone(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>convert_timezone</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;convert_timezone&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;targetTimeZone,
                                      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sourceTimestamp)</pre>
<div class="block">Converts the given sourceTimestampNTZ to targetTimeZone.

 <p>Supported time zones are listed <a href="https://docs.snowflake.com/en/sql-reference/functions/convert_timezone.html#usage-notes">here</a>

 <p>Example

 <pre><code>
 df.select(Functions.convert_timezone(Functions.lit("America/New_York"), df.col("time")));
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sourceTimestamp</code> - The timestamp</dd>
<dd><code>targetTimeZone</code> - The target time zone</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="year(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>year</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Extracts the year from a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="quarter(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>quarter</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;quarter&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Extracts the quarter from a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="month(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>month</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Extracts the month from a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="dayofweek(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dayofweek</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dayofweek&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Extracts the day of week from a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="dayofmonth(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dayofmonth</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dayofmonth&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Extracts the day of month from a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="dayofyear(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dayofyear</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dayofyear&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Extracts the day of year from a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="last_day(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>last_day</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;last_day&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Returns the last day of the specified date part for a date or timestamp. Commonly used to
 return the last day of the month for a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="weekofyear(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>weekofyear</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;weekofyear&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Extracts the week of year from a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="hour(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hour</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Extracts the hour from a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="minute(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>minute</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Extracts the minute from a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="second(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>second</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Extracts the second from a date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="next_day(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>next_day</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;next_day&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;date,
                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dayOfWeek)</pre>
<div class="block">Returns the date of the first specified DOW (day of week) that occurs after the input date.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>date</code> - The date</dd>
<dd><code>dayOfWeek</code> - The day of week</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="previous_day(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>previous_day</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;previous_day&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;date,
                                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dayOfWeek)</pre>
<div class="block">Returns the date of the first specified DOW (day of week) that occurs before the input date.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>date</code> - The date</dd>
<dd><code>dayOfWeek</code> - The day of week</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="to_timestamp(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>to_timestamp</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to_timestamp&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;s)</pre>
<div class="block">Converts an input expression into the corresponding timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>s</code> - The input column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="to_timestamp(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>to_timestamp</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to_timestamp&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;s,
                                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;fmt)</pre>
<div class="block">Converts an input expression into the corresponding timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>s</code> - The input value</dd>
<dd><code>fmt</code> - The time format</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="to_date(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>to_date</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to_date&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e)</pre>
<div class="block">Converts an input expression to a date.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="to_date(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>to_date</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to_date&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;e,
                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;fmt)</pre>
<div class="block">Converts an input expression to a date.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>e</code> - The input value</dd>
<dd><code>fmt</code> - The time format</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="date_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>date_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;date_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                                     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                                     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day)</pre>
<div class="block">Creates a date from individual numeric components that represent the year, month, and day of
 the month.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>year</code> - The year</dd>
<dd><code>month</code> - The month</dd>
<dd><code>day</code> - The day</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="time_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>time_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;time_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                                     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond)</pre>
<div class="block">Creates a time from individual numeric components.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dd><code>nanosecond</code> - The nanosecond</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="time_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>time_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;time_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second)</pre>
<div class="block">Creates a time from individual numeric components.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>year</code> - The year</dd>
<dd><code>month</code> - The month</dd>
<dd><code>day</code> - The day</dd>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>year</code> - The year</dd>
<dd><code>month</code> - The month</dd>
<dd><code>day</code> - The day</dd>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dd><code>nanosecond</code> - The nanosecond</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dateExpr,
                                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timeExpr)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>dateExpr</code> - The date expression</dd>
<dd><code>timeExpr</code> - The time expression</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_ltz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_ltz_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_ltz_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>year</code> - The year</dd>
<dd><code>month</code> - The month</dd>
<dd><code>day</code> - The day</dd>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_ltz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_ltz_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_ltz_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>year</code> - The year</dd>
<dd><code>month</code> - The month</dd>
<dd><code>day</code> - The day</dd>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dd><code>nanosecond</code> - The nanosecond</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_ntz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_ntz_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_ntz_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>year</code> - The year</dd>
<dd><code>month</code> - The month</dd>
<dd><code>day</code> - The day</dd>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_ntz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_ntz_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_ntz_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>year</code> - The year</dd>
<dd><code>month</code> - The month</dd>
<dd><code>day</code> - The day</dd>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dd><code>nanosecond</code> - The nanosecond</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_ntz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_ntz_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_ntz_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dateExpr,
                                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timeExpr)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>dateExpr</code> - The date expression</dd>
<dd><code>timeExpr</code> - The time expression</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_tz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_tz_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_tz_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>year</code> - The year</dd>
<dd><code>month</code> - The month</dd>
<dd><code>day</code> - The day</dd>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_tz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_tz_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_tz_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>year</code> - The year</dd>
<dd><code>month</code> - The month</dd>
<dd><code>day</code> - The day</dd>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dd><code>nanosecond</code> - The nanosecond</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="timestamp_tz_from_parts(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>timestamp_tz_from_parts</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp_tz_from_parts&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;year,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;month,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;day,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;hour,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;minute,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;second,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;nanosecond,
                                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timezone)</pre>
<div class="block">Creates a timestamp from individual numeric components. If no time zone is in effect, the
 function can be used to create a timestamp from a date expression and a time expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>year</code> - The year</dd>
<dd><code>month</code> - The month</dd>
<dd><code>day</code> - The day</dd>
<dd><code>hour</code> - The hour</dd>
<dd><code>minute</code> - The minute</dd>
<dd><code>second</code> - The second</dd>
<dd><code>nanosecond</code> - The nanosecond</dd>
<dd><code>timezone</code> - The time zone</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="dayname(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dayname</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dayname&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr)</pre>
<div class="block">Extracts the three-letter day-of-week name from the specified date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>expr</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="monthname(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>monthname</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;monthname&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr)</pre>
<div class="block">Extracts the three-letter month name from the specified date or timestamp.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>expr</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="dateadd(java.lang.String,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dateadd</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;dateadd&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;part,
                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;value,
                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr)</pre>
<div class="block">Adds the specified value for the specified date or time art to date or time expr.

 <p>Supported date and time parts are listed <a href="https://docs.snowflake.com/en/sql-reference/functions-date-time.html#label-supported-date-time-parts">here</a>

 <p>Example: add one year on dates

 <pre><code>
 date.select(Functions.dateadd("year", Functions.lit(1), date.col("date_col")))
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>part</code> - The part of time being added</dd>
<dd><code>value</code> - The value being added</dd>
<dd><code>expr</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="datediff(java.lang.String,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>datediff</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;datediff&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;part,
                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</pre>
<div class="block">Calculates the difference between two date, time, or timestamp columns based on the date or
 time part requested.

 <p>Supported date and time parts are listed <a href="https://docs.snowflake.com/en/sql-reference/functions-date-time.html#label-supported-date-time-parts">here</a>

 <p>Example: year difference between two date columns

 <pre><code>
 date.select(Functions.datediff("year", date.col("date_col1"), date.col("date_col2")))
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>part</code> - The part of time</dd>
<dd><code>col1</code> - The first input value</dd>
<dd><code>col2</code> - The second input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="trunc(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>trunc</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;trunc&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr,
                           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;scale)</pre>
<div class="block">Rounds the input expression down to the nearest (or equal) integer closer to zero, or to the
 nearest equal or smaller value with the specified number of places after the decimal point.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>expr</code> - The input value</dd>
<dd><code>scale</code> - The scale</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="date_trunc(java.lang.String,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>date_trunc</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;date_trunc&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;format,
                                <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;timestamp)</pre>
<div class="block">Truncates a DATE, TIME, or TIMESTAMP to the specified precision.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>format</code> - The time format</dd>
<dd><code>timestamp</code> - The input timestamp</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="concat(com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>concat</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;concat&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;exprs)</pre>
<div class="block">Concatenates one or more strings, or concatenates one or more binary values. If any of the
 values is null, the result is also null.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>exprs</code> - A list of input values</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="arrays_overlap(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>arrays_overlap</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;arrays_overlap&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;a1,
                                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;a2)</pre>
<div class="block">Compares whether two arrays have at least one element in common. Returns TRUE if there is at
 least one element in common; otherwise returns FALSE. The function is NULL-safe, meaning it
 treats NULLs as known values for comparing equality.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a1</code> - The first input array</dd>
<dd><code>a2</code> - The second input array</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="endswith(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>endswith</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;endswith&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr,
                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;str)</pre>
<div class="block">Returns TRUE if expr ends with str.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>expr</code> - The input value</dd>
<dd><code>str</code> - The ending string</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="insert(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>insert</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;insert&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;baseExpr,
                            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;position,
                            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;length,
                            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;insertExpr)</pre>
<div class="block">Replaces a substring of the specified length, starting at the specified position, with a new
 string or binary value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>baseExpr</code> - The base expression</dd>
<dd><code>position</code> - The position</dd>
<dd><code>insertExpr</code> - The new expression</dd>
<dd><code>length</code> - The length</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="left(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>left</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;left&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lengthExpr)</pre>
<div class="block">Returns a left most substring of strExpr.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strExpr</code> - The input string</dd>
<dd><code>lengthExpr</code> - The length</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="right(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>right</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;right&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
                           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;lengthExpr)</pre>
<div class="block">Returns a right most substring of strExpr.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strExpr</code> - The input string</dd>
<dd><code>lengthExpr</code> - The length</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="regexp_count(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>regexp_count</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;regexp_count&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
                                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern,
                                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;position,
                                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;parameters)</pre>
<div class="block">Returns the number of times that a pattern occurs in a strExpr.

 <p>Pattern syntax is specified <a href="https://docs.snowflake.com/en/sql-reference/functions-regexp.html#label-regexp-general-usage-notes">here</a>

 <p>Parameter detail is specified <a href="https://docs.snowflake.com/en/sql-reference/functions-regexp.html#label-regexp-parameters-argument">here</a></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strExpr</code> - The input string</dd>
<dd><code>pattern</code> - The pattern</dd>
<dd><code>position</code> - The position</dd>
<dd><code>parameters</code> - The parameters</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="regexp_count(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>regexp_count</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;regexp_count&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
                                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern)</pre>
<div class="block">Returns the number of times that a pattern occurs in a strExpr.

 <p>Pattern syntax is specified <a href="https://docs.snowflake.com/en/sql-reference/functions-regexp.html#label-regexp-general-usage-notes">here</a>

 <p>Parameter detail is specified <a href="https://docs.snowflake.com/en/sql-reference/functions-regexp.html#label-regexp-parameters-argument">here</a></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strExpr</code> - The input string</dd>
<dd><code>pattern</code> - The pattern</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="regexp_replace(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>regexp_replace</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;regexp_replace&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
                                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern)</pre>
<div class="block">Returns the subject with the specified pattern (or all occurrences of the pattern) removed. If
 no matches are found, returns the original subject.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strExpr</code> - The input string</dd>
<dd><code>pattern</code> - The pattern</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.9.0</dd>
</dl>
</li>
</ul>
<a id="regexp_replace(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>regexp_replace</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;regexp_replace&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
                                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern,
                                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;replacement)</pre>
<div class="block">Returns the subject with the specified pattern (or all occurrences of the pattern) replaced by
 a replacement string. If no matches are found, returns the original subject.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strExpr</code> - The input string</dd>
<dd><code>pattern</code> - The pattern</dd>
<dd><code>replacement</code> - The replacement string</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.9.0</dd>
</dl>
</li>
</ul>
<a id="replace(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>replace</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;replace&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern,
                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;replacement)</pre>
<div class="block">Removes all occurrences of a specified strExpr, and optionally replaces them with replacement.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strExpr</code> - The input string</dd>
<dd><code>pattern</code> - The pattern</dd>
<dd><code>replacement</code> - The replacement string</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="replace(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>replace</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;replace&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strExpr,
                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pattern)</pre>
<div class="block">Removes all occurrences of a specified strExpr, and optionally replaces them with replacement.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strExpr</code> - The input string</dd>
<dd><code>pattern</code> - The pattern</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="charindex(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>charindex</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;charindex&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;targetExpr,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sourceExpr)</pre>
<div class="block">Searches for targetExpr in sourceExpr and, if successful, returns the position (1-based) of the
 targetExpr in sourceExpr.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sourceExpr</code> - The source value</dd>
<dd><code>targetExpr</code> - The target value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="charindex(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>charindex</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;charindex&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;targetExpr,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;sourceExpr,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;position)</pre>
<div class="block">Searches for targetExpr in sourceExpr and, if successful, returns the position (1-based) of the
 targetExpr in sourceExpr.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sourceExpr</code> - The source value</dd>
<dd><code>targetExpr</code> - The target value</dd>
<dd><code>position</code> - The position</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="collate(com.snowflake.snowpark_java.Column,java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>collate</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;collate&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr,
                             <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;collationSpec)</pre>
<div class="block">Returns a copy of expr, but with the specified collationSpec property instead of the original
 collation specification property.

 <p>Collation Specification is specified <a href="https://docs.snowflake.com/en/sql-reference/collation.html#label-collation-specification">
 here </a></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>expr</code> - The input value</dd>
<dd><code>collationSpec</code> - The collation specification</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="collation(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>collation</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;collation&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr)</pre>
<div class="block">Returns the collation specification of expr.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>expr</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="array_intersection(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_intersection</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_intersection&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
                                        <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</pre>
<div class="block">Returns an ARRAY that contains the matching elements in the two input ARRAYs.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col1</code> - The first input array</dd>
<dd><code>col2</code> - The second input array</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_array(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_array</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_array&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains an ARRAY value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_boolean(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_boolean</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_boolean&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a Boolean value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_binary(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_binary</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_binary&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a binary value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_char(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_char</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_char&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a string value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_varchar(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_varchar</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_varchar&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a string value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_date(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_date</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_date&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a DATE value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_date_value(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_date_value</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_date_value&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a DATE value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_decimal(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_decimal</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_decimal&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a fixed-point decimal value or integer.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_double(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_double</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_double&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a floating-point value, fixed-point
 decimal, or integer.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_real(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_real</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_real&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a floating-point value, fixed-point
 decimal, or integer.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_integer(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_integer</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_integer&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains an integer value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_null_value(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_null_value</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_null_value&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column is a JSON null value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_object(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_object</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_object&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains an OBJECT value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_time(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_time</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_time&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a TIME value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_timestamp_ltz(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_timestamp_ltz</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_timestamp_ltz&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a TIMESTAMP value to be interpreted using
 the local time zone.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_timestamp_ntz(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_timestamp_ntz</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_timestamp_ntz&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a TIMESTAMP value with no time zone.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="is_timestamp_tz(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>is_timestamp_tz</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;is_timestamp_tz&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns true if the specified VARIANT column contains a TIMESTAMP value with a time zone.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.11.0</dd>
</dl>
</li>
</ul>
<a id="check_json(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>check_json</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;check_json&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Checks the validity of a JSON document. If the input string is a valid JSON document or a NULL
 (i.e. no error would occur when parsing the input string), the function returns NULL. In case
 of a JSON parsing error, the function returns a string that contains the error message.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="check_xml(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>check_xml</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;check_xml&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Checks the validity of an XML document. If the input string is a valid XML document or a NULL
 (i.e. no error would occur when parsing the input string), the function returns NULL. In case
 of an XML parsing error, the output string contains the error message.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="json_extract_path_text(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>json_extract_path_text</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;json_extract_path_text&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                                            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;path)</pre>
<div class="block">Parses a JSON string and returns the value of an element at a specified path in the resulting
 JSON document.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - Column containing the JSON string that should be parsed.</dd>
<dd><code>path</code> - Column containing the path to the element that should be extracted.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="parse_json(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parse_json</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;parse_json&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Parse the value of the specified column as a JSON string and returns the resulting JSON
 document.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="parse_xml(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parse_xml</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;parse_xml&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Parse the value of the specified column as a JSON string and returns the resulting XML
 document.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="strip_null_value(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>strip_null_value</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strip_null_value&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Converts a JSON "null" value in the specified column to a SQL NULL value. All other VARIANT
 values in the column are returned unchanged.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_agg(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_agg</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_agg&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the input values, pivoted into an ARRAY. If the input is empty, an empty ARRAY is
 returned.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_append(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_append</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_append&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
                                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;element)</pre>
<div class="block">Returns an ARRAY containing all elements from the source ARRAYas well as the new element. The
 new element is located at end of the ARRAY.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array</code> - The column containing the source ARRAY.</dd>
<dd><code>element</code> - The column containing the element to be appended. The element may be of almost
     any data type. The data type does not need to match the data type(s) of the existing
     elements in the ARRAY.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_cat(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_cat</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_cat&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array1,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array2)</pre>
<div class="block">Returns the concatenation of two ARRAYs.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array1</code> - Column containing the source ARRAY.</dd>
<dd><code>array2</code> - Column containing the ARRAY to be appended to <code>array1</code>.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_compact(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_compact</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_compact&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array)</pre>
<div class="block">Returns a compacted ARRAY with missing and null values removed, effectively converting sparse
 arrays into dense arrays.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array</code> - The input array</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_construct(com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_construct</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_construct&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</pre>
<div class="block">Returns an ARRAY constructed from zero, one, or more inputs.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cols</code> - Columns containing the values (or expressions that evaluate to values). The values
     do not all need to be of the same data type.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_construct_compact(com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_construct_compact</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_construct_compact&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</pre>
<div class="block">Returns an ARRAY constructed from zero, one, or more inputs; the constructed ARRAY omits any
 NULL input values.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cols</code> - Columns containing the values (or expressions that evaluate to values). The values
     do not all need to be of the same data type.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_contains(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_contains</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_contains&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
                                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array)</pre>
<div class="block">Returns <code>true</code> if the specified VARIANT is found in the specified ARRAY.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - Column containing the VARIANT to find.</dd>
<dd><code>array</code> - Column containing the ARRAY to search.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_insert(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_insert</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_insert&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
                                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;pos,
                                  <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;element)</pre>
<div class="block">Returns an ARRAY containing all elements from the source ARRAY as well as the new element.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array</code> - Column containing the source ARRAY.</dd>
<dd><code>pos</code> - Column containing a (zero-based) position in the source ARRAY. The new element is
     inserted at this position. The original element from this position (if any) and all
     subsequent elements (if any) are shifted by one position to the right in the resulting
     array (i.e. inserting at position 0 has the same effect as using [[array_prepend]]). A
     negative position is interpreted as an index from the back of the array (e.g. <code>-1</code>
     results in insertion before the last element in the array).</dd>
<dd><code>element</code> - Column containing the element to be inserted. The new element is located at
     position <code>pos</code>. The relative order of the other elements from the source array is
     preserved.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_position(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_position</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_position&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
                                    <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array)</pre>
<div class="block">Returns the index of the first occurrence of an element in an ARRAY.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - Column containing the VARIANT value that you want to find. The function searches
     for the first occurrence of this value in the array.</dd>
<dd><code>array</code> - Column containing the ARRAY to be searched.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_prepend(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_prepend</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_prepend&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
                                   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;element)</pre>
<div class="block">Returns an ARRAY containing the new element as well as all elements from the source ARRAY. The
 new element is positioned at the beginning of the ARRAY.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array</code> - Column containing the source ARRAY.</dd>
<dd><code>element</code> - Column containing the element to be prepended.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_size(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_size</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_size&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array)</pre>
<div class="block">Returns the size of the input ARRAY.

 <p>If the specified column contains a VARIANT value that contains an ARRAY, the size of the
 ARRAY is returned; otherwise, NULL is returned if the value is not an ARRAY.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array</code> - The input array</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_slice(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_slice</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_slice&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
                                 <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;from,
                                 <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to)</pre>
<div class="block">Returns an ARRAY constructed from a specified subset of elements of the input ARRAY.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array</code> - Column containing the source ARRAY.</dd>
<dd><code>from</code> - Column containing a position in the source ARRAY. The position of the first element
     is <code>0</code>. Elements from positions less than this parameter are not included in the
     resulting ARRAY.</dd>
<dd><code>to</code> - Column containing a position in the source ARRAY. Elements from positions equal to or
     greater than this parameter are not included in the resulting array.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="array_to_string(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>array_to_string</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array_to_string&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
                                     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;separator)</pre>
<div class="block">Returns an input ARRAY converted to a string by casting all values to strings (using
 TO_VARCHAR) and concatenating them (using the string from the second argument to separate the
 elements).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array</code> - Column containing the ARRAY of elements to convert to a string.</dd>
<dd><code>separator</code> - Column containing the string to put between each element (e.g. a space, comma,
     or other human-readable separator).</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="objectagg(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>objectagg</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;objectagg&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;key,
                               <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;value)</pre>
<div class="block">Returns one OBJECT per group. For each (key, value) input pair, where key must be a VARCHAR and
 value must be a VARIANT, the resulting OBJECT contains a key:value field.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>key</code> - The key</dd>
<dd><code>value</code> - The value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="object_construct(com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>object_construct</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;object_construct&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;key_values)</pre>
<div class="block">Returns an OBJECT constructed from the arguments.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>key_values</code> - The key and value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="object_delete(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>object_delete</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;object_delete&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj,
                                   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;key1,
                                   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;keys)</pre>
<div class="block">Returns an object containing the contents of the input (i.e.source) object with one or more
 keys removed.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>obj</code> - The input object</dd>
<dd><code>key1</code> - The key being removed</dd>
<dd><code>keys</code> - A list of keys being removed except key1</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="object_insert(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>object_insert</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;object_insert&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj,
                                   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;key,
                                   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;value)</pre>
<div class="block">Returns an object consisting of the input object with a new key-value pair inserted. The input
 key must not exist in the object.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>obj</code> - The input object</dd>
<dd><code>key</code> - The key</dd>
<dd><code>value</code> - The value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="object_insert(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>object_insert</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;object_insert&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj,
                                   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;key,
                                   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;value,
                                   <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;update_flag)</pre>
<div class="block">Returns an object consisting of the input object with a new key-value pair inserted (or an
 existing key updated with a new value).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>obj</code> - The input object</dd>
<dd><code>key</code> - The key</dd>
<dd><code>value</code> - The value</dd>
<dd><code>update_flag</code> - The flags</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="object_pick(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>object_pick</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;object_pick&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj,
                                 <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;key1,
                                 <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;keys)</pre>
<div class="block">Returns a new OBJECT containing some of the key-value pairs from an existing object.

 <p>To identify the key-value pairs to include in the new object, pass in the keys as arguments,
 or pass in an array containing the keys.

 <p>If a specified key is not present in the input object, the key is ignored.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>obj</code> - The input object</dd>
<dd><code>key1</code> - The key</dd>
<dd><code>keys</code> - A list of keys except key1</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_array(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_array</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_array&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to an array.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_binary(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_binary</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_binary&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a binary string.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_char(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_char</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_char&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a string. Does not convert values of other types into string.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_varchar(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_varchar</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_varchar&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a string. Does not convert values of other types into string.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_date(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_date</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_date&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a date. Does not convert from timestamps.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_decimal(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_decimal</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_decimal&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_decimal(com.snowflake.snowpark_java.Column,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_decimal</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_decimal&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
                                int&nbsp;precision)</pre>
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values), with
 precision.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dd><code>precision</code> - The precision</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_decimal(com.snowflake.snowpark_java.Column,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_decimal</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_decimal&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
                                int&nbsp;precision,
                                int&nbsp;scale)</pre>
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values), with
 precision and scale.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dd><code>precision</code> - The precision</dd>
<dd><code>scale</code> - The scale</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_number(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_number</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_number&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_number(com.snowflake.snowpark_java.Column,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_number</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_number&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
                               int&nbsp;precision)</pre>
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values), with
 precision and scale.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dd><code>precision</code> - The precision</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_number(com.snowflake.snowpark_java.Column,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_number</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_number&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant,
                               int&nbsp;precision,
                               int&nbsp;scale)</pre>
<div class="block">Casts a VARIANT value to a fixed-point decimal (does not match floating-point values), with
 precision.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dd><code>precision</code> - The precision</dd>
<dd><code>scale</code> - The scale</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_double(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_double</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_double&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a floating-point value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_real(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_real</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_real&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a floating-point value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_integer(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_integer</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_integer&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to an integer. Does not match non-integer values.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_object(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_object</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_object&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to an object.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_time(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_time</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_time&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a time value. Does not convert from timestamps.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_timestamp_ltz(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_timestamp_ltz</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_timestamp_ltz&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a TIMESTAMP value with local timezone.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_timestamp_ntz(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_timestamp_ntz</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_timestamp_ntz&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a TIMESTAMP value with no timezone.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="as_timestamp_tz(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>as_timestamp_tz</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;as_timestamp_tz&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;variant)</pre>
<div class="block">Casts a VARIANT value to a TIMESTAMP value with timezone.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>variant</code> - The input variant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="strtok_to_array(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>strtok_to_array</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strtok_to_array&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array)</pre>
<div class="block">Tokenizes the given string using the given set of delimiters and returns the tokens as an
 array. If either parameter is a NULL, a NULL is returned. An empty array is returned if
 tokenization produces no tokens.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array</code> - The input array</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="strtok_to_array(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>strtok_to_array</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;strtok_to_array&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;array,
                                     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;delimiter)</pre>
<div class="block">Tokenizes the given string using the given set of delimiters and returns the tokens as an
 array. If either parameter is a NULL, a NULL is returned. An empty array is returned if
 tokenization produces no tokens.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array</code> - The input array</dd>
<dd><code>delimiter</code> - The delimiter</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="to_array(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>to_array</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to_array&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Converts the input expression into an array:

 <p>If the input is an ARRAY, or VARIANT containing an array value, the result is unchanged. For
 NULL or a JSON null input, returns NULL. For any other value, the result is a single-element
 array containing this value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="to_json(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>to_json</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to_json&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Converts any VARIANT value to a string containing the JSON representation of the value. If the
 input is NULL, the result is also NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="to_object(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>to_object</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to_object&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Converts the input value to an object:

 <p>For a variant value containing an object, returns this object (in a value of type OBJECT).
 For a variant value containing JSON null or for NULL input, returns NULL. For all other input
 values, reports an error.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="to_variant(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>to_variant</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to_variant&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Converts any value to VARIANT value or NULL (if input is NULL).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="to_xml(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>to_xml</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;to_xml&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Converts any VARIANT value to a string containing the XML representation of the value. If the
 input is NULL, the result is also NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="get(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>get</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;get&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col1,
                         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col2)</pre>
<div class="block">Extracts a value from an object or array; returns NULL if either of the arguments is NULL.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col1</code> - The first input value</dd>
<dd><code>col2</code> - The second input value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="get_ignore_case(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>get_ignore_case</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;get_ignore_case&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj,
                                     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;field)</pre>
<div class="block">Extracts a field value from an object; returns NULL if either of the arguments is NULL. This
 function is similar to GET but applies case-insensitive matching to field names.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>obj</code> - The input object</dd>
<dd><code>field</code> - The field</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="object_keys(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>object_keys</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;object_keys&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;obj)</pre>
<div class="block">Returns an array containing the list of keys in the input object.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>obj</code> - The input object</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="xmlget(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>xmlget</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;xmlget&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;xml,
                            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;tag,
                            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;instance)</pre>
<div class="block">Extracts an XML element object (often referred to as simply a tag) from a content of outer XML
 element object by the name of the tag and its instance number (counting from 0).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>xml</code> - The input xml</dd>
<dd><code>tag</code> - The tag</dd>
<dd><code>instance</code> - The instance</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="xmlget(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>xmlget</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;xmlget&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;xml,
                            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;tag)</pre>
<div class="block">Extracts the first XML element object (often referred to as simply a tag) from a content of
 outer XML element object by the name of the tag</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>xml</code> - The input xml</dd>
<dd><code>tag</code> - The tag</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="get_path(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>get_path</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;get_path&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                              <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;path)</pre>
<div class="block">Extracts a value from semi-structured data using a path name.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The input value</dd>
<dd><code>path</code> - The path</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="when(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>when</h4>
<pre class="methodSignature">public static&nbsp;<a href="CaseExpr.html" title="class in com.snowflake.snowpark_java">CaseExpr</a>&nbsp;when&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition,
                            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;value)</pre>
<div class="block">Works like a cascading if-then-else statement. A series of conditions are evaluated in
 sequence. When a condition evaluates to TRUE, the evaluation stops and the associated result
 (after THEN) is returned. If none of the conditions evaluate to TRUE, then the result after the
 optional OTHERWISE is returned, if present; otherwise NULL is returned. For Example:

 <pre><code>
 import com.snowflake.snowpark_java.Functions;
 df.select(Functions
     .when(df.col("col").is_null, Functions.lit(1))
     .when(df.col("col").equal_to(Functions.lit(1)), Functions.lit(6))
     .otherwise(Functions.lit(7)));
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>condition</code> - The condition</dd>
<dd><code>value</code> - The result value</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="iff(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>iff</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;iff&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition,
                         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr1,
                         <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;expr2)</pre>
<div class="block">Returns one of two specified expressions, depending on a condition.

 <p>This is equivalent to an `if-then-else` expression. If `condition` evaluates to TRUE, the
 function returns `expr1`. Otherwise, the function returns `expr2`.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>condition</code> - The condition to evaluate.</dd>
<dd><code>expr1</code> - The expression to return if the condition evaluates to TRUE.</dd>
<dd><code>expr2</code> - The expression to return if the condition is not TRUE (i.e. if it is FALSE or
     NULL).</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="in(com.snowflake.snowpark_java.Column[],java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>in</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;in&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>[]&nbsp;columns,
                        <a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&gt;&gt;&nbsp;values)</pre>
<div class="block">Returns a conditional expression that you can pass to the filter or where method to perform the
 equivalent of a WHERE ... IN query that matches rows containing a sequence of values.

 <p>The expression evaluates to true if the values in a row matches the values in one of the
 specified sequences.

 <p>For example, the following code returns a DataFrame that contains the rows in which the
 columns `c1` and `c2` contain the values: - `1` and `"a"`, or - `2` and `"b"` This is
 equivalent to `SELECT * FROM table WHERE (c1, c2) IN ((1, 'a'), (2, 'b'))`.

 <pre><code>
 import com.snowflake.snowpark_java.Functions;
 df.filter(Functions.in(new Column[]{df.col("c1"), df.col("c2")},
   Arrays.asList(Array.asList(1, "a"), Array.asList(2, "b"))));
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>columns</code> - A sequence of the columns to compare for the IN operation.</dd>
<dd><code>values</code> - A sequence containing the sequences of values to compare for the IN operation.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="in(com.snowflake.snowpark_java.Column[],com.snowflake.snowpark_java.DataFrame)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>in</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;in&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>[]&nbsp;columns,
                        <a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;df)</pre>
<div class="block">Returns a conditional expression that you can pass to the filter or where method to perform the
 equivalent of a WHERE ... IN query with the subquery represented by the specified DataFrame.

 <p>The expression evaluates to true if the value in the column is one of the values in the
 column of the same name in a specified DataFrame.

 <p>For example, the following code returns a DataFrame that contains the rows where the values
 of the columns `c1` and `c2` in `df2` match the values of the columns `a` and `b` in `df1`.
 This is equivalent to SELECT * FROM table2 WHERE (c1, c2) IN (SELECT a, b FROM table1).

 <pre><code>
 import com.snowflake.snowpark_java.Functions;
 import com.snowflake.snowpark_java.DataFrame;
 DataFrame df1 = session.sql("select a, b from table1");
 DataFrame df2 = session.table("table2");
 df2.filter(Functions.in(new Column[]{df2.col("c1"), df2.col("c2")}, df1));
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>columns</code> - A sequence of the columns to compare for the IN operation.</dd>
<dd><code>df</code> - The DataFrame used as the values for the IN operation</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="seq1()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seq1</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;seq1()</pre>
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around. Wrap-around occurs
 after the largest representable integer of the integer width 1 byte. the sequence continues at
 0 after wrap-around.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="seq1(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seq1</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;seq1&#8203;(boolean&nbsp;startsFromZero)</pre>
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around. Wrap-around occurs
 after the largest representable integer of the integer width 1 byte.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>startsFromZero</code> - if true, the sequence continues at 0 after wrap-around, otherwise,
     continues at the smallest representable number based on the given integer width.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="seq2()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seq2</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;seq2()</pre>
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around. Wrap-around occurs
 after the largest representable integer of the integer width 2 byte. the sequence continues at
 0 after wrap-around.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="seq2(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seq2</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;seq2&#8203;(boolean&nbsp;startsFromZero)</pre>
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around. Wrap-around occurs
 after the largest representable integer of the integer width 2 byte.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>startsFromZero</code> - if true, the sequence continues at 0 after wrap-around, otherwise,
     continues at the smallest representable number based on the given integer width.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="seq4()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seq4</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;seq4()</pre>
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around. Wrap-around occurs
 after the largest representable integer of the integer width 4 byte. the sequence continues at
 0 after wrap-around.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="seq4(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seq4</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;seq4&#8203;(boolean&nbsp;startsFromZero)</pre>
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around. Wrap-around occurs
 after the largest representable integer of the integer width 4 byte.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>startsFromZero</code> - if true, the sequence continues at 0 after wrap-around, otherwise,
     continues at the smallest representable number based on the given integer width.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="seq8()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seq8</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;seq8()</pre>
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around. Wrap-around occurs
 after the largest representable integer of the integer width 8 byte. the sequence continues at
 0 after wrap-around.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="seq8(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seq8</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;seq8&#8203;(boolean&nbsp;startsFromZero)</pre>
<div class="block">Generates a sequence of monotonically increasing integers, with wrap-around. Wrap-around occurs
 after the largest representable integer of the integer width 8 byte.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>startsFromZero</code> - if true, the sequence continues at 0 after wrap-around, otherwise,
     continues at the smallest representable number based on the given integer width.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="uniform(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>uniform</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;uniform&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;min,
                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;max,
                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;gen)</pre>
<div class="block">Returns a uniformly random number, in the inclusive range (`min`, `max`)

 <p>For example: {{{ import com.snowflake.snowpark_java.Functions; session.generator(10,
 Functions.seq4(), Functions.uniform(Functions.lit(1), Functions.lit(5),
 Functions.random())).show() }}}</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>min</code> - The lower bound</dd>
<dd><code>max</code> - The upper bound</dd>
<dd><code>gen</code> - The generator expression for the function. for more information, see <a href="https://docs.snowflake.com/en/sql-reference/functions-data-generation.html#label-rand-dist-functions">
     here</a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="listagg(com.snowflake.snowpark_java.Column,java.lang.String,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>listagg</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;listagg&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                             <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;delimiter,
                             boolean&nbsp;isDistinct)</pre>
<div class="block">Returns the concatenated input values, separated by `delimiter` string.

 <p>For example:

 <pre><code>
 df.groupBy(df.col("col1")).agg(Functions.listagg(df.col("col2"), ",")
      .withinGroup(df.col("col2").asc()))


 df.select(Functions.listagg(df.col("col2"), ",", false))
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The expression (typically a Column) that determines the values to be put into the
     list. The expression should evaluate to a string, or to a data type that can be cast to
     string.</dd>
<dd><code>delimiter</code> - A string delimiter.</dd>
<dd><code>isDistinct</code> - Whether the input expression is distinct.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result Column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="listagg(com.snowflake.snowpark_java.Column,java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>listagg</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;listagg&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col,
                             <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;delimiter)</pre>
<div class="block">Returns the concatenated input values, separated by `delimiter` string.

 <p>For example:

 <pre><code>
 df.groupBy(df.col("col1")).agg(Functions.listagg(df.col("col2"), ",")
      .withinGroup(df.col("col2").asc()))


 df.select(Functions.listagg(df.col("col2"), ",", false))
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The expression (typically a Column) that determines the values to be put into the
     list. The expression should evaluate to a string, or to a data type that can be cast to
     string.</dd>
<dd><code>delimiter</code> - A string delimiter.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result Column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="listagg(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>listagg</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;listagg&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;col)</pre>
<div class="block">Returns the concatenated input values, separated by empty string.

 <p>For example:

 <pre><code>
 df.groupBy(df.col("col1")).agg(Functions.listagg(df.col("col2"), ",")
      .withinGroup(df.col("col2").asc()))


 df.select(Functions.listagg(df.col("col2"), ",", false))
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>col</code> - The expression (typically a Column) that determines the values to be put into the
     list. The expression should evaluate to a string, or to a data type that can be cast to
     string.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result Column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="callUDF(java.lang.String,com.snowflake.snowpark_java.Column...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>callUDF</h4>
<pre class="methodSignature">public static&nbsp;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;callUDF&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;udfName,
                             <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>...&nbsp;cols)</pre>
<div class="block">Calls a user-defined function (UDF) by name.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>udfName</code> - The name of UDF</dd>
<dd><code>cols</code> - The list of parameters</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result column</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF0,com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF0.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF0</a>&lt;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 0 argument as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF1,com.snowflake.snowpark_java.types.DataType,com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF1.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF1</a>&lt;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 1 argument as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code></dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF2,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF2.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF2</a>&lt;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 2 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF3,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF3.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF3</a>&lt;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 3 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF4,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF4.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF4</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 4 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF5,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF5.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF5</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 5 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF6,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF6.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF6</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 6 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF7,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF7.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF7</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 7 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF8,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF8.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF8</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 8 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF9,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF9.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF9</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 9 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF10,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF10.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF10</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 10 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF11,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF11.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF11</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 11 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF12,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF12.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF12</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 12 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF13,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF13.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF13</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 13 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF14,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF14.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF14</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 14 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF15,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF15.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF15</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 15 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF16,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF16.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF16</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 16 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF17,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF17.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF17</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 17 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF18,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF18.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF18</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 18 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF19,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF19.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF19</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 19 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF20,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF20.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF20</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 20 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF21,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF21.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF21</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 21 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
<a id="udf(com.snowflake.snowpark_java.udf.JavaUDF22,com.snowflake.snowpark_java.types.DataType[],com.snowflake.snowpark_java.types.DataType)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>udf</h4>
<pre class="methodSignature">public static&nbsp;<a href="UserDefinedFunction.html" title="class in com.snowflake.snowpark_java">UserDefinedFunction</a>&nbsp;udf&#8203;(<a href="udf/JavaUDF22.html" title="interface in com.snowflake.snowpark_java.udf">JavaUDF22</a>&lt;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?,&#8203;?&gt;&nbsp;func,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>[]&nbsp;input,
                                      <a href="types/DataType.html" title="class in com.snowflake.snowpark_java.types">DataType</a>&nbsp;output)</pre>
<div class="block">Registers a Java Lambda of 22 arguments as a Snowflake UDF and returns the UDF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>func</code> - the Java lambda to be registered</dd>
<dd><code>input</code> - the UDF input <code>types.DataType</code>s</dd>
<dd><code>output</code> - the UDF return <code>types.DataType</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The result UserDefinedFunction reference</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>0.12.0</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Functions.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><div style="margin-top: 14px"><strong>                           Snowpark Java API Reference 1.12.0 <br/>                           <a style="text-transform: none" href="https://docs.snowflake.com/en/developer-guide/snowpark/java/index.html" target="_top">[Snowpark Developer Guide for Java]</a>                         </strong></div></div>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>© 2024 Snowflake Inc. All Rights Reserved                                              <!-- Google Analytics Code -->                        <script>                          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){                          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),                          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)                          })(window,document,'script','//www.google-analytics.com/analytics.js','ga');                           ga('create', 'UA-48785629-1', 'auto');                          ga('send', 'pageview');                        </script>                         <!-- Global site tag (gtag.js) - Google Analytics -->                        <script async src="https://www.googletagmanager.com/gtag/js?id=G-00K70YK8HQ"></script>                        <script>                          window.dataLayer = window.dataLayer || [];                          function gtag(){dataLayer.push(arguments);}                          gtag('js', new Date());                          gtag('config', 'G-00K70YK8HQ');                        </script>                         <script>                        if (typeof useModuleDirectories !== 'undefined') {                          useModuleDirectories = false;                        }                        </script></small></p>
</footer>
</body>
</html>
