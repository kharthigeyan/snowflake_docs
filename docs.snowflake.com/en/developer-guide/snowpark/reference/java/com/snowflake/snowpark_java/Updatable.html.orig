<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.22) on Wed Mar 27 20:04:07 UTC 2024 -->
<title>Updatable (Snowpark Java API Reference 1.12.0)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2024-03-27">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.min.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery-ui.overrides.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.6.1.min.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.min.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Updatable (Snowpark Java API Reference 1.12.0)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Updatable.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><div style="margin-top: 14px"><strong>                           Snowpark Java API Reference 1.12.0 <br/>                           <a style="text-transform: none" href="https://docs.snowflake.com/en/developer-guide/snowpark/java/index.html" target="_top">[Snowpark Developer Guide for Java]</a>                         </strong></div></div>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.snowflake.snowpark_java</a></div>
<h2 title="Class Updatable" class="title">Class Updatable</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.snowflake.snowpark.internal.Logging</li>
<li>
<ul class="inheritance">
<li><a href="DataFrame.html" title="class in com.snowflake.snowpark_java">com.snowflake.snowpark_java.DataFrame</a></li>
<li>
<ul class="inheritance">
<li>com.snowflake.snowpark_java.Updatable</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Cloneable.html?is-external=true" title="class or interface in java.lang" class="externalLink">Cloneable</a></code></dd>
</dl>
<hr>
<pre>public class <span class="typeNameLabel">Updatable</span>
extends <a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a></pre>
<div class="block">Represents a lazily-evaluated Updatable. It extends <code>DataFrame</code> so all <code>DataFrame</code>
 operations can be applied on it.

 <p>'''Creating an Updatable'''

 <p>You can create an Updatable by calling <code>Session.table</code> with the name of the Updatable.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.com.snowflake.snowpark.internal.Logging">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;com.snowflake.snowpark.internal.Logging</h3>
<code>logName</code></li>
</ul>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code><a href="UpdatableAsyncActor.html" title="class in com.snowflake.snowpark_java">UpdatableAsyncActor</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#async()">async</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns an UpdatableAsyncActor object that can be used to execute Updatable actions
 asynchronously.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code><a href="Updatable.html" title="class in com.snowflake.snowpark_java">Updatable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#clone()">clone</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a clone of this Updatable.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="DeleteResult.html" title="class in com.snowflake.snowpark_java">DeleteResult</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#delete()">delete</a></span>()</code></th>
<td class="colLast">
<div class="block">Deletes all rows in the updatable and returns a <code>DeleteResult</code>, representing number of
 rows deleted.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="DeleteResult.html" title="class in com.snowflake.snowpark_java">DeleteResult</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#delete(com.snowflake.snowpark_java.Column)">delete</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition)</code></th>
<td class="colLast">
<div class="block">Deletes all rows in the updatable that satisfy specified condition and returns a <code>
 DeleteResult</code>, representing number of rows deleted.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="DeleteResult.html" title="class in com.snowflake.snowpark_java">DeleteResult</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#delete(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.DataFrame)">delete</a></span>&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition,
      <a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;sourceData)</code></th>
<td class="colLast">
<div class="block">Deletes all rows in the updatable that satisfy specified condition where condition includes
 columns in other <code>DataFrame</code>, and returns a <code>DeleteResult</code>, representing number of
 rows deleted.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code><a href="MergeBuilder.html" title="class in com.snowflake.snowpark_java">MergeBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#merge(com.snowflake.snowpark_java.DataFrame,com.snowflake.snowpark_java.Column)">merge</a></span>&#8203;(<a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;source,
     <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;joinExpr)</code></th>
<td class="colLast">
<div class="block">Initiates a merge action for this updatable with <code>DataFrame</code> source on specified join
 expression.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#update(java.util.Map)">update</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments)</code></th>
<td class="colLast">
<div class="block">Updates all rows in the Updatable with specified assignments and returns a <code>
 UpdateResult</code>, representing number of rows modified and number of multi-joined rows modified.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#update(java.util.Map,com.snowflake.snowpark_java.Column)">update</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments,
      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition)</code></th>
<td class="colLast">
<div class="block">Updates all rows in the updatable that satisfy specified condition with specified assignments
 and returns a <code>UpdateResult</code>, representing number of rows modified and number of
 multi-joined rows modified.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code><a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#update(java.util.Map,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.DataFrame)">update</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments,
      <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition,
      <a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;sourceData)</code></th>
<td class="colLast">
<div class="block">Updates all rows in the updatable that satisfy specified condition where condition includes
 columns in other <code>DataFrame</code>, and returns a <code>UpdateResult</code>, representing number of
 rows modified and number of multi-joined rows modified.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code><a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#updateColumn(java.util.Map)">updateColumn</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments)</code></th>
<td class="colLast">
<div class="block">Updates all rows in the updatable with specified assignments and returns a <code>
 UpdateResult</code>, representing number of rows modified and number of multi-joined rows modified.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#updateColumn(java.util.Map,com.snowflake.snowpark_java.Column)">updateColumn</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition)</code></th>
<td class="colLast">
<div class="block">Updates all rows in the updatable that satisfy specified condition with specified assignments
 and returns a <code>UpdateResult</code>, representing number of rows modified and number of
 multi-joined rows modified.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code><a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#updateColumn(java.util.Map,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.DataFrame)">updateColumn</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments,
            <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition,
            <a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;sourceData)</code></th>
<td class="colLast">
<div class="block">Updates all rows in the updatable that satisfy specified condition where condition includes
 columns in other <code>DataFrame</code>, and returns a <code>UpdateResult</code>, representing number of
 rows modified and number of multi-joined rows modified.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.snowflake.snowpark_java.DataFrame">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;com.snowflake.snowpark_java.<a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a></h3>
<code><a href="DataFrame.html#agg(com.snowflake.snowpark_java.Column...)">agg</a>, <a href="DataFrame.html#alias(java.lang.String)">alias</a>, <a href="DataFrame.html#cacheResult()">cacheResult</a>, <a href="DataFrame.html#col(java.lang.String)">col</a>, <a href="DataFrame.html#collect()">collect</a>, <a href="DataFrame.html#count()">count</a>, <a href="DataFrame.html#createOrReplaceTempView(java.lang.String)">createOrReplaceTempView</a>, <a href="DataFrame.html#createOrReplaceTempView(java.lang.String%5B%5D)">createOrReplaceTempView</a>, <a href="DataFrame.html#createOrReplaceView(java.lang.String)">createOrReplaceView</a>, <a href="DataFrame.html#createOrReplaceView(java.lang.String%5B%5D)">createOrReplaceView</a>, <a href="DataFrame.html#crossJoin(com.snowflake.snowpark_java.DataFrame)">crossJoin</a>, <a href="DataFrame.html#cube(com.snowflake.snowpark_java.Column...)">cube</a>, <a href="DataFrame.html#cube(java.lang.String...)">cube</a>, <a href="DataFrame.html#distinct()">distinct</a>, <a href="DataFrame.html#drop(com.snowflake.snowpark_java.Column...)">drop</a>, <a href="DataFrame.html#drop(java.lang.String...)">drop</a>, <a href="DataFrame.html#dropDuplicates(java.lang.String...)">dropDuplicates</a>, <a href="DataFrame.html#except(com.snowflake.snowpark_java.DataFrame)">except</a>, <a href="DataFrame.html#explain()">explain</a>, <a href="DataFrame.html#filter(com.snowflake.snowpark_java.Column)">filter</a>, <a href="DataFrame.html#first()">first</a>, <a href="DataFrame.html#first(int)">first</a>, <a href="DataFrame.html#flatten(com.snowflake.snowpark_java.Column)">flatten</a>, <a href="DataFrame.html#flatten(com.snowflake.snowpark_java.Column,java.lang.String,boolean,boolean,java.lang.String)">flatten</a>, <a href="DataFrame.html#groupBy(com.snowflake.snowpark_java.Column...)">groupBy</a>, <a href="DataFrame.html#groupBy(java.lang.String...)">groupBy</a>, <a href="DataFrame.html#groupByGroupingSets(com.snowflake.snowpark_java.GroupingSets...)">groupByGroupingSets</a>, <a href="DataFrame.html#intersect(com.snowflake.snowpark_java.DataFrame)">intersect</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.Column)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.Column%5B%5D,com.snowflake.snowpark_java.Column%5B%5D)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.DataFrame)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.DataFrame,com.snowflake.snowpark_java.Column)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.DataFrame,com.snowflake.snowpark_java.Column,java.lang.String)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.DataFrame,java.lang.String)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.DataFrame,java.lang.String%5B%5D)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.DataFrame,java.lang.String%5B%5D,java.lang.String)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.TableFunction,com.snowflake.snowpark_java.Column...)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.TableFunction,com.snowflake.snowpark_java.Column%5B%5D,com.snowflake.snowpark_java.Column%5B%5D,com.snowflake.snowpark_java.Column%5B%5D)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.TableFunction,java.util.Map)">join</a>, <a href="DataFrame.html#join(com.snowflake.snowpark_java.TableFunction,java.util.Map,com.snowflake.snowpark_java.Column%5B%5D,com.snowflake.snowpark_java.Column%5B%5D)">join</a>, <a href="DataFrame.html#limit(int)">limit</a>, <a href="DataFrame.html#na()">na</a>, <a href="DataFrame.html#naturalJoin(com.snowflake.snowpark_java.DataFrame)">naturalJoin</a>, <a href="DataFrame.html#naturalJoin(com.snowflake.snowpark_java.DataFrame,java.lang.String)">naturalJoin</a>, <a href="DataFrame.html#pivot(com.snowflake.snowpark_java.Column,java.lang.Object%5B%5D)">pivot</a>, <a href="DataFrame.html#pivot(java.lang.String,java.lang.Object%5B%5D)">pivot</a>, <a href="DataFrame.html#randomSplit(double%5B%5D)">randomSplit</a>, <a href="DataFrame.html#rename(java.lang.String,com.snowflake.snowpark_java.Column)">rename</a>, <a href="DataFrame.html#rollup(com.snowflake.snowpark_java.Column...)">rollup</a>, <a href="DataFrame.html#rollup(java.lang.String...)">rollup</a>, <a href="DataFrame.html#sample(double)">sample</a>, <a href="DataFrame.html#sample(long)">sample</a>, <a href="DataFrame.html#schema()">schema</a>, <a href="DataFrame.html#select(com.snowflake.snowpark_java.Column...)">select</a>, <a href="DataFrame.html#select(java.lang.String...)">select</a>, <a href="DataFrame.html#show()">show</a>, <a href="DataFrame.html#show(int)">show</a>, <a href="DataFrame.html#show(int,int)">show</a>, <a href="DataFrame.html#sort(com.snowflake.snowpark_java.Column...)">sort</a>, <a href="DataFrame.html#stat()">stat</a>, <a href="DataFrame.html#toDF(java.lang.String...)">toDF</a>, <a href="DataFrame.html#toLocalIterator()">toLocalIterator</a>, <a href="DataFrame.html#union(com.snowflake.snowpark_java.DataFrame)">union</a>, <a href="DataFrame.html#unionAll(com.snowflake.snowpark_java.DataFrame)">unionAll</a>, <a href="DataFrame.html#unionAllByName(com.snowflake.snowpark_java.DataFrame)">unionAllByName</a>, <a href="DataFrame.html#unionByName(com.snowflake.snowpark_java.DataFrame)">unionByName</a>, <a href="DataFrame.html#where(com.snowflake.snowpark_java.Column)">where</a>, <a href="DataFrame.html#withColumn(java.lang.String,com.snowflake.snowpark_java.Column)">withColumn</a>, <a href="DataFrame.html#withColumns(java.lang.String%5B%5D,com.snowflake.snowpark_java.Column%5B%5D)">withColumns</a>, <a href="DataFrame.html#write()">write</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.snowflake.snowpark.internal.Logging">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;com.snowflake.snowpark.internal.Logging</h3>
<code>log, logDebug, logDebug, logError, logError, logInfo, logInfo, logTrace, logTrace, logWarning, logWarning, maskSecrets, maskSecrets</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#equals-java.lang.Object-" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#finalize--" title="class or interface in java.lang" class="externalLink">finalize</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#getClass--" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#hashCode--" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notify--" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notifyAll--" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString--" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait--" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-int-" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="update(java.util.Map)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>update</h4>
<pre class="methodSignature">public&nbsp;<a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a>&nbsp;update&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments)</pre>
<div class="block">Updates all rows in the Updatable with specified assignments and returns a <code>
 UpdateResult</code>, representing number of rows modified and number of multi-joined rows modified.

 <p>For example:

 <pre><code>
 Map&lt;Column, Column&gt; assignments = new HashMap&lt;&gt;;
 assignments.put(Functions.col("col1"), Functions.lit(1);
 // Assign value 1 to column col1 in all rows in updatable.
 session.table("tableName").update(assignment);
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>assignments</code> - A map contains the column being updated and the new value.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>UpdateResult</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="updateColumn(java.util.Map)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateColumn</h4>
<pre class="methodSignature">public&nbsp;<a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a>&nbsp;updateColumn&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments)</pre>
<div class="block">Updates all rows in the updatable with specified assignments and returns a <code>
 UpdateResult</code>, representing number of rows modified and number of multi-joined rows modified.

 <p>For example:

 <pre><code>
 Map&lt;String, Column&gt; assignments = new HashMap&lt;&gt;;
 assignments.put("col1", Functions.lit(1);
 // Assign value 1 to column col1 in all rows in updatable.
 session.table("tableName").updateColumn(assignment);
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>assignments</code> - A map contains the column being updated and the new value.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>UpdateResult</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="update(java.util.Map,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>update</h4>
<pre class="methodSignature">public&nbsp;<a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a>&nbsp;update&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments,
                           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition)</pre>
<div class="block">Updates all rows in the updatable that satisfy specified condition with specified assignments
 and returns a <code>UpdateResult</code>, representing number of rows modified and number of
 multi-joined rows modified.

 <p>For example:

 <pre><code>
 Map&lt;Column, Column&gt; assignments = new HashMap&lt;&gt;;
 assignments.put(Functions.col("col1"), Functions.lit(1);
 // Assign value 1 to column col1 in the rows if col2 is true in updatable.
 session.table("tableName").updateColumn(assignment,
   Functions.col("col2").equal_to(Functions.lit(true)));
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>assignments</code> - A map contains the column being updated and the new value.</dd>
<dd><code>condition</code> - The condition of the Column being updated.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>UpdateResult</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="updateColumn(java.util.Map,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateColumn</h4>
<pre class="methodSignature">public&nbsp;<a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a>&nbsp;updateColumn&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments,
                                 <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition)</pre>
<div class="block">Updates all rows in the updatable that satisfy specified condition with specified assignments
 and returns a <code>UpdateResult</code>, representing number of rows modified and number of
 multi-joined rows modified.

 <p>For example:

 <pre><code>
 Map&lt;String, Column&gt; assignments = new HashMap&lt;&gt;;
 assignments.put("col1", Functions.lit(1);
 // Assign value 1 to column col1 in the rows if col3 is true in updatable.
 session.table("tableName").updateColumn(assignment,
   Functions.col("col2").equal_to(Functions.lit(true)));
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>assignments</code> - A map contains the column being updated and the new value.</dd>
<dd><code>condition</code> - The condition of the Column being updated.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>UpdateResult</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="update(java.util.Map,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.DataFrame)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>update</h4>
<pre class="methodSignature">public&nbsp;<a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a>&nbsp;update&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments,
                           <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition,
                           <a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;sourceData)</pre>
<div class="block">Updates all rows in the updatable that satisfy specified condition where condition includes
 columns in other <code>DataFrame</code>, and returns a <code>UpdateResult</code>, representing number of
 rows modified and number of multi-joined rows modified.

 <p>For example:

 <pre><code>
 Map&lt;Column, Column&gt; assignments = new HashMap&lt;&gt;;
 assignments.put(Functions.col("col1"), Functions.lit(1);
 session.table("tableName").update(assignment,
   Functions.col("col2").equal_to(df.col("col_a")), df);
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>assignments</code> - A map contains the column being updated and the new value.</dd>
<dd><code>condition</code> - The condition of the Column being updated.</dd>
<dd><code>sourceData</code> - Another DataFrame being joined.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>UpdateResult</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="updateColumn(java.util.Map,com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.DataFrame)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateColumn</h4>
<pre class="methodSignature">public&nbsp;<a href="UpdateResult.html" title="class in com.snowflake.snowpark_java">UpdateResult</a>&nbsp;updateColumn&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&lt;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>,&#8203;<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&gt;&nbsp;assignments,
                                 <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition,
                                 <a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;sourceData)</pre>
<div class="block">Updates all rows in the updatable that satisfy specified condition where condition includes
 columns in other <code>DataFrame</code>, and returns a <code>UpdateResult</code>, representing number of
 rows modified and number of multi-joined rows modified.

 <p>For example:

 <pre><code>
 Map&lt;String, Column&gt; assignments = new HashMap&lt;&gt;;
 assignments.put("col1", Functions.lit(1);
 session.table("tableName").updateColumn(assignment,
   Functions.col("col2").equal_to(df.col("col_a")), df);
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>assignments</code> - A map contains the column being updated and the new value.</dd>
<dd><code>condition</code> - The condition of the Column being updated.</dd>
<dd><code>sourceData</code> - Another DataFrame being joined.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>UpdateResult</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="delete()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>delete</h4>
<pre class="methodSignature">public&nbsp;<a href="DeleteResult.html" title="class in com.snowflake.snowpark_java">DeleteResult</a>&nbsp;delete()</pre>
<div class="block">Deletes all rows in the updatable and returns a <code>DeleteResult</code>, representing number of
 rows deleted.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>DeleteResult</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="delete(com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>delete</h4>
<pre class="methodSignature">public&nbsp;<a href="DeleteResult.html" title="class in com.snowflake.snowpark_java">DeleteResult</a>&nbsp;delete&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition)</pre>
<div class="block">Deletes all rows in the updatable that satisfy specified condition and returns a <code>
 DeleteResult</code>, representing number of rows deleted.

 <p>For example:

 <pre><code>
 session.table("tableName").delete(Functions.col("col1").equal_to(Functions.lit(1)));
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>condition</code> - The condition expression</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>DeleteResult</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="delete(com.snowflake.snowpark_java.Column,com.snowflake.snowpark_java.DataFrame)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>delete</h4>
<pre class="methodSignature">public&nbsp;<a href="DeleteResult.html" title="class in com.snowflake.snowpark_java">DeleteResult</a>&nbsp;delete&#8203;(<a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;condition,
                           <a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;sourceData)</pre>
<div class="block">Deletes all rows in the updatable that satisfy specified condition where condition includes
 columns in other <code>DataFrame</code>, and returns a <code>DeleteResult</code>, representing number of
 rows deleted.

 <p>For example:

 <pre><code>
 session.table(tableName).delete(Functions.col("col1").equal_to(df.col("col2")), df);
 </code></pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>condition</code> - The condition expression</dd>
<dd><code>sourceData</code> - The source DataFrame</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>DeleteResult</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="merge(com.snowflake.snowpark_java.DataFrame,com.snowflake.snowpark_java.Column)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>merge</h4>
<pre class="methodSignature">public&nbsp;<a href="MergeBuilder.html" title="class in com.snowflake.snowpark_java">MergeBuilder</a>&nbsp;merge&#8203;(<a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a>&nbsp;source,
                          <a href="Column.html" title="class in com.snowflake.snowpark_java">Column</a>&nbsp;joinExpr)</pre>
<div class="block">Initiates a merge action for this updatable with <code>DataFrame</code> source on specified join
 expression. Returns a <code>MergeBuilder</code> which provides APIs to define merge clauses.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>source</code> - The source DataFrame</dd>
<dd><code>joinExpr</code> - The join expression</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>MergeBuilder</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="clone()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clone</h4>
<pre class="methodSignature">public&nbsp;<a href="Updatable.html" title="class in com.snowflake.snowpark_java">Updatable</a>&nbsp;clone()</pre>
<div class="block">Returns a clone of this Updatable.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="DataFrame.html#clone()">clone</a></code>&nbsp;in class&nbsp;<code><a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>Updatable</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.1.0</dd>
</dl>
</li>
</ul>
<a id="async()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>async</h4>
<pre class="methodSignature">public&nbsp;<a href="UpdatableAsyncActor.html" title="class in com.snowflake.snowpark_java">UpdatableAsyncActor</a>&nbsp;async()</pre>
<div class="block">Returns an UpdatableAsyncActor object that can be used to execute Updatable actions
 asynchronously.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="DataFrame.html#async()">async</a></code>&nbsp;in class&nbsp;<code><a href="DataFrame.html" title="class in com.snowflake.snowpark_java">DataFrame</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A UpdatableAsyncActor object</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.2.0</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Updatable.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><div style="margin-top: 14px"><strong>                           Snowpark Java API Reference 1.12.0 <br/>                           <a style="text-transform: none" href="https://docs.snowflake.com/en/developer-guide/snowpark/java/index.html" target="_top">[Snowpark Developer Guide for Java]</a>                         </strong></div></div>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>© 2024 Snowflake Inc. All Rights Reserved                                              <!-- Google Analytics Code -->                        <script>                          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){                          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),                          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)                          })(window,document,'script','//www.google-analytics.com/analytics.js','ga');                           ga('create', 'UA-48785629-1', 'auto');                          ga('send', 'pageview');                        </script>                         <!-- Global site tag (gtag.js) - Google Analytics -->                        <script async src="https://www.googletagmanager.com/gtag/js?id=G-00K70YK8HQ"></script>                        <script>                          window.dataLayer = window.dataLayer || [];                          function gtag(){dataLayer.push(arguments);}                          gtag('js', new Date());                          gtag('config', 'G-00K70YK8HQ');                        </script>                         <script>                        if (typeof useModuleDirectories !== 'undefined') {                          useModuleDirectories = false;                        }                        </script></small></p>
</footer>
</body>
</html>
