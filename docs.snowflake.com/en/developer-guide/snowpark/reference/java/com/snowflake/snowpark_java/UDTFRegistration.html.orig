<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.22) on Wed Mar 27 20:04:07 UTC 2024 -->
<title>UDTFRegistration (Snowpark Java API Reference 1.12.0)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2024-03-27">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.min.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery-ui.overrides.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.6.1.min.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.min.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="UDTFRegistration (Snowpark Java API Reference 1.12.0)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/UDTFRegistration.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><div style="margin-top: 14px"><strong>                           Snowpark Java API Reference 1.12.0 <br/>                           <a style="text-transform: none" href="https://docs.snowflake.com/en/developer-guide/snowpark/java/index.html" target="_top">[Snowpark Developer Guide for Java]</a>                         </strong></div></div>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.snowflake.snowpark_java</a></div>
<h2 title="Class UDTFRegistration" class="title">Class UDTFRegistration</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.snowflake.snowpark_java.UDTFRegistration</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public class <span class="typeNameLabel">UDTFRegistration</span>
extends <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Provides methods to register a UDTF (user-defined table function) in the Snowflake database.
 <code>Session.udtf()</code> returns an object of this class.

 <p>To register an UDTF, you must:

 <ol>
   <li>Define a UDTF class.
   <li>Create an instance of that class, and register that instance as a UDTF.
 </ol>

 <p>The next sections describe these steps in more detail.

 <h2>Defining the UDTF Class</h2>

 Define a class that implements one of the JavaUDTF[N] interfaces (e.g. <a href="udtf/JavaUDTF0.html" title="interface in com.snowflake.snowpark_java.udtf"><code>JavaUDTF0</code></a>, <a href="udtf/JavaUDTF1.html" title="interface in com.snowflake.snowpark_java.udtf"><code>JavaUDTF1</code></a>,
 etc.), where "n" specifies the number of input arguments for your UDTF. For example, if your UDTF
 passes in 3 input arguments, implements the <a href="udtf/JavaUDTF3.html" title="interface in com.snowflake.snowpark_java.udtf"><code>JavaUDTF3</code></a>
 interface.

 <p>In your class, implement the following four methods:

 <ul>
   <li>process() , which is called once for each row in the input partition.
   <li>endPartition(), which is called once for each partition after all rows have been passed to
       process().
   <li>outputSchema(), which returns a <a href="types/StructType.html" title="class in com.snowflake.snowpark_java.types"><code>StructType</code></a> object
       that describes the schema for the returned rows.
   <li>inputSchema(), which returns a <a href="types/StructType.html" title="class in com.snowflake.snowpark_java.types"><code>StructType</code></a> object
       that describes the types of the input parameters. If your <code>process()</code> method passes
       in <code>Map</code> arguments, you must implement the <code>inputSchema()</code> method. If the
       method does not pass in <code>Map</code> arguments, implementing <code>inputSchema()</code> is
       optional.
 </ul>

 <p>When a UDTF is called, the rows are grouped into partitions before they are passed to the
 UDTF:

 <ul>
   <li>If the statement that calls the UDTF specifies the PARTITION clause (explicit partitions),
       that clause determines how the rows are partitioned.
   <li>If the statement does not specify the PARTITION clause (implicit partitions), Snowflake
       determines how best to partition the rows.
 </ul>

 <p>For an explanation of partitions, see <a href="https://docs.snowflake.com/en/developer-guide/udf/java/udf-java-tabular-functions.html#label-udf-java-partitions">Table
 Functions and Partitions</a>

 <h3>Defining the process() Method</h3>

 This method is invoked once for each row in the input partition.

 <p>The arguments passed to the registered UDTF are passed to process(). For each argument passed
 to the UDTF, you must have a corresponding argument in the signature of the process() method.
 Make sure that the type of the argument in the process() method matches the Snowflake data type
 of the corresponding argument in the UDTF.

 <p>Snowflake supports the following data types for the parameters for a UDTF:

 <table border="1">
   <caption>Supported Snowflake Data Types and Corresponding Java Types</caption>
   <tr> <th>SQL Type</th> <th>Java Type</th> <th>Notes</th> </tr>
   <tr> <td>NUMBER</td> <td>java.lang.Short</td> <td>Supported</td> </tr>
   <tr> <td>NUMBER</td> <td>java.lang.Integer</td> <td>Supported</td> </tr>
   <tr> <td>NUMBER</td> <td> java.lang.Long</td> <td>Supported</td> </tr>
   <tr> <td>FLOAT</td> <td>java.lang.Float</td> <td>Supported</td> </tr>
   <tr> <td>DOUBLE</td> <td>java.lang.Double</td> <td>Supported</td> </tr>
   <tr> <td>NUMBER</td> <td>java.math.BigDecimal</td> <td>Supported</td> </tr>
   <tr> <td>VARCHAR</td> <td>String</td> <td>Supported</td> </tr>
   <tr> <td>BOOL</td> <td>java.lang.Boolean</td> <td>Supported</td> </tr>
   <tr> <td>DATE</td> <td>java.sql.Date</td> <td>Supported</td> </tr>
   <tr> <td>TIMESTAMP</td> <td>java.sql.Timestamp</td> <td>Supported</td> </tr>
   <tr> <td>BINARY</td> <td>byte[]</td> <td>Supported</td> </tr>
   <tr> <td>ARRAY</td> <td>String[] or Variant[]</td> <td>Supported String[] or Variant[]</td> </tr>
   <tr> <td>OBJECT</td> <td>Map&lt;String, String&gt; or Map&lt;String, Variant&gt;</td> <td>Supported Map&lt;String, String&gt; or Map&lt;String, Variant&gt; </td> </tr>
   <tr> <td>VARIANT</td> <td><a href="types/Variant.html" title="class in com.snowflake.snowpark_java.types"><code>Variant</code></a></td> <td>Supported</td> </tr>
 </table>

 <h3>Defining the endPartition() Method</h3>

 This method is invoked once for each partition, after all rows in that partition have been passed
 to the process() method.

 <p>You can use this method to generate output rows, based on any state information that you
 aggregate in the process() method.

 <h3>Defining the outputSchema() Method</h3>

 In this method, define the output schema for the rows returned by the process() and
 endPartition() methods.

 <p>Construct and return a <a href="types/StructType.html" title="class in com.snowflake.snowpark_java.types"><code>StructType</code></a> object that uses
 an Array of <a href="types/StructField.html" title="class in com.snowflake.snowpark_java.types"><code>StructField</code></a> objects to specify the
 Snowflake data type of each field in a returned row.

 <p>Snowflake supports the following <a href="types/DataTypes.html" title="class in com.snowflake.snowpark_java.types"><code>DataTypes</code></a> for the
 input types:

 <table border="1">
   <caption>Supported Snowflake Data Types and Corresponding Java Types</caption>
   <tr> <th>Snowpark <a href="types/DataTypes.html" title="class in com.snowflake.snowpark_java.types"><code>DataTypes</code></a></th> <th>Java Type</th> <th>Notes</th> </tr>
   <tr> <td>ShortType</td> <td>java.lang.Short</td> <td>Supported</td> </tr>
   <tr> <td>IntegerType</td> <td>java.lang.Integer</td> <td>Supported</td> </tr>
   <tr> <td>LongType</td> <td> java.lang.Long</td> <td>Supported</td> </tr>
   <tr> <td>FloatType</td> <td>java.lang.Float</td> <td>Supported</td> </tr>
   <tr> <td>DoubleType</td> <td>java.lang.Double</td> <td>Supported</td> </tr>
   <tr> <td>DecimalType</td> <td>java.math.BigDecimal</td> <td>Supported</td> </tr>
   <tr> <td>StringType</td> <td>String</td> <td>Supported</td> </tr>
   <tr> <td>BooleanType</td> <td>java.lang.Boolean</td> <td>Supported</td> </tr>
   <tr> <td>DateType</td> <td>java.sql.Date</td> <td>Supported</td> </tr>
   <tr> <td>TimestampType</td> <td>java.sql.Timestamp</td> <td>Supported</td> </tr>
   <tr> <td>BinaryType</td> <td>byte[]</td> <td>Supported</td> </tr>
   <tr> <td>ArrayType(StringType) or ArrayType(Variant)</td> <td>String[] or Variant[]</td> <td>Supported String[] or Variant[]</td> </tr>
   <tr> <td>MapType(StringTyoe, StringType) or MapType(StringTyoe, VariantType)</td> <td>Map&lt;String, String&gt; or Map&lt;String, Variant&gt;</td> <td>Supported Map&lt;String, String&gt; or Map&lt;String, Variant&gt; </td> </tr>
   <tr> <td>VariantType</td> <td><a href="types/Variant.html" title="class in com.snowflake.snowpark_java.types"><code>Variant</code></a></td> <td>Supported</td> </tr>
 </table>

 <h3>Defining the inputSchema() Method</h3>

 In this method, define the input schema for the input arguments for process(). Snowpark can infer
 the input schema if Map is not used as process().

 <p>Construct and return a <a href="types/StructType.html" title="class in com.snowflake.snowpark_java.types"><code>StructType</code></a> object that uses
 an Array of <a href="types/StructField.html" title="class in com.snowflake.snowpark_java.types"><code>StructField</code></a> objects to specify the data
 type of each parameter for process().

 <p>Snowflake supports the following <a href="types/DataTypes.html" title="class in com.snowflake.snowpark_java.types"><code>DataTypes</code></a> for input
 types

 <table border="1">
   <caption>Supported Java Types and Corresponding Snowflake Data Types</caption>
   <tr> <th>Java Type</th> <th><a href="types/DataTypes.html" title="class in com.snowflake.snowpark_java.types"><code>DataTypes</code></a></th> <th>Notes</th> </tr>
   <tr> <td>java.lang.Boolean</td> <td>BooleanType</td> <td>Supported</td> </tr>
   <tr> <td>java.lang.Short</td> <td>ShortType</td> <td>Supported</td> </tr>
   <tr> <td>java.lang.Integer</td> <td>IntegerType</td> <td>Supported</td> </tr>
   <tr> <td>java.lang.Long</td> <td>LongType</td> <td>Supported</td> </tr>
   <tr> <td>java.lang.Float</td> <td>FloatType</td> <td>Supported</td> </tr>
   <tr> <td>java.lang.Double</td> <td>DoubleType</td> <td>Supported</td> </tr>
   <tr> <td>java.math.BigDecimal</td> <td>DecimalType</td> <td>Supported</td> </tr>
   <tr> <td>String</td> <td>StringType</td> <td>Supported</td> </tr>
   <tr> <td>java.sql.Date</td> <td>DateType</td> <td>Supported</td> </tr>
   <tr> <td>java.sql.Timestamp</td> <td>TimestampType</td> <td>Supported</td> </tr>
   <tr> <td>byte[]</td> <td>BinaryType</td> <td>Supported</td> </tr>
   <tr> <td>String[]</td> <td>ArrayType(StringType)</td> <td>Supported</td> </tr>
   <tr> <td>Variant[]</td> <td>ArrayType(Variant)</td> <td>Supported</td> </tr>
   <tr> <td>Map&lt;String, String&gt;</td> <td>MapType(StringType, StringType)</td> <td>Supported</td> </tr>
   <tr> <td>Map&lt;String, Variant&gt;</td> <td>MapType(StringType, VariantType)</td> <td>Supported</td> </tr>
   <tr> <td>com.snowflake.snowpark_java.types.Variant</td> <td>VariantType</td> <td>Supported</td> </tr>
 </table>

 <h3>Example of a UDTF Class</h3>

 The following is an example of a UDTF class that generates a range of rows.

 <p>The UDTF passes in 2 arguments, so the class implements JavaUDTF2.

 <p>The arguments <code>start</code> and <code>count</code> specify the starting number for the row and the
 number of rows to generate.

 <pre><code>
 import java.util.stream.Stream;
 import com.snowflake.snowpark_java.types.*;
 import com.snowflake.snowpark_java.udtf.*;

 class MyRangeUdtf implements JavaUDTF2&lt;Integer, Integer&gt; {
   public StructType outputSchema() {
     return StructType.create(new StructField("C1", DataTypes.IntegerType));
   }

   // Because the process() method in this example does not pass in Map arguments,
   // implementing the inputSchema() method is optional.
   public StructType inputSchema() {
     return StructType.create(
             new StructField("start_value", DataTypes.IntegerType),
             new StructField("value_count", DataTypes.IntegerType));
   }

   public Stream&lt;Row&gt; endPartition() {
     return Stream.empty();
   }

   public Stream&lt;Row&gt; process(Integer start, Integer count) {
     Stream.Builder&lt;Row&gt; builder = Stream.builder();
     for (int i = start; i &lt; start + count ; i++) {
       builder.add(Row.create(i));
     }
     return builder.build();
   }
 }
 </code></pre>

 <h2>Registering and Calling the UDTF</h2>

 Next, create an instance of the new class, and register the class by calling one of the
 UDTFRegistration methods. You can register a temporary or permanent UDTF by name. If you don't
 need to call the UDTF by name, you can register an anonymous UDTF.

 <h3>Registering a Temporary UDTF By Name</h3>

 To register a temporary UDTF by name, call registerTemporary, passing in a name for the UDTF and
 an instance of the UDTF class. For example:

 <pre><code>
 // Use the MyRangeUdtf defined in previous example.
 TableFunction tableFunction = session.udtf().registerTemporary("myUdtf", new MyRangeUdtf());
 session.tableFunction(tableFunction, Functions.lit(10), Functions.lit(5)).show();
 </code></pre>

 <h3>Registering a Permanent UDTF By Name</h3>

 If you need to use the UDTF in subsequent sessions, register a permanent UDTF by calling <code>
 registerPermanent()</code>.

 <p>When registering a permanent UDTF, you must specify a stage where the registration method will
 upload the JAR files for the UDTF and its dependencies. For example:

 <pre><code>
 // Use the MyRangeUdtf defined in previous example.
 TableFunction tableFunction = session.udtf().registerPermanent("myUdtf", new MyRangeUdtf(), "@myStage");
 session.tableFunction(tableFunction, Functions.lit(10), Functions.lit(5)).show();
 </code></pre>

 <h3>Registering an Anonymous Temporary UDTF</h3>

 If you do not need to refer to a UDTF by name, use <code>registerTemporary(JavaUDTF udtf)</code> to
 create an anonymous UDTF instead. For example:

 <pre><code>
 // Use the MyRangeUdtf defined in previous example.
 TableFunction tableFunction = session.udtf().registerTemporary(new MyRangeUdtf());
 session.tableFunction(tableFunction, Functions.lit(10), Functions.lit(5)).show();
 </code></pre></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.4.0</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code><a href="TableFunction.html" title="class in com.snowflake.snowpark_java">TableFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#registerPermanent(java.lang.String,com.snowflake.snowpark_java.udtf.JavaUDTF,java.lang.String)">registerPermanent</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;funcName,
                 <a href="udtf/JavaUDTF.html" title="interface in com.snowflake.snowpark_java.udtf">JavaUDTF</a>&nbsp;udtf,
                 <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;stageLocation)</code></th>
<td class="colLast">
<div class="block">Registers an UDTF instance as a Snowflake UDTF.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code><a href="TableFunction.html" title="class in com.snowflake.snowpark_java">TableFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#registerTemporary(com.snowflake.snowpark_java.udtf.JavaUDTF)">registerTemporary</a></span>&#8203;(<a href="udtf/JavaUDTF.html" title="interface in com.snowflake.snowpark_java.udtf">JavaUDTF</a>&nbsp;udtf)</code></th>
<td class="colLast">
<div class="block">Registers an UDTF instance as a temporary anonymous UDTF that is scoped to this session.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="TableFunction.html" title="class in com.snowflake.snowpark_java">TableFunction</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#registerTemporary(java.lang.String,com.snowflake.snowpark_java.udtf.JavaUDTF)">registerTemporary</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;funcName,
                 <a href="udtf/JavaUDTF.html" title="interface in com.snowflake.snowpark_java.udtf">JavaUDTF</a>&nbsp;udtf)</code></th>
<td class="colLast">
<div class="block">Registers an UDTF instance as a temporary Snowflake UDTF that you plan to use in the session.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#clone--" title="class or interface in java.lang" class="externalLink">clone</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#equals-java.lang.Object-" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#finalize--" title="class or interface in java.lang" class="externalLink">finalize</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#getClass--" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#hashCode--" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notify--" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notifyAll--" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString--" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait--" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-int-" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="registerTemporary(com.snowflake.snowpark_java.udtf.JavaUDTF)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>registerTemporary</h4>
<pre class="methodSignature">public&nbsp;<a href="TableFunction.html" title="class in com.snowflake.snowpark_java">TableFunction</a>&nbsp;registerTemporary&#8203;(<a href="udtf/JavaUDTF.html" title="interface in com.snowflake.snowpark_java.udtf">JavaUDTF</a>&nbsp;udtf)</pre>
<div class="block">Registers an UDTF instance as a temporary anonymous UDTF that is scoped to this session.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>udtf</code> - The UDTF instance to be registered</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A TableFunction that represents the corresponding FUNCTION created in Snowflake</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.4.0</dd>
</dl>
</li>
</ul>
<a id="registerTemporary(java.lang.String,com.snowflake.snowpark_java.udtf.JavaUDTF)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>registerTemporary</h4>
<pre class="methodSignature">public&nbsp;<a href="TableFunction.html" title="class in com.snowflake.snowpark_java">TableFunction</a>&nbsp;registerTemporary&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;funcName,
                                       <a href="udtf/JavaUDTF.html" title="interface in com.snowflake.snowpark_java.udtf">JavaUDTF</a>&nbsp;udtf)</pre>
<div class="block">Registers an UDTF instance as a temporary Snowflake UDTF that you plan to use in the session.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>funcName</code> - The name that you want to use to refer to the UDTF.</dd>
<dd><code>udtf</code> - The UDTF instance to be registered</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A TableFunction that represents the corresponding FUNCTION created in Snowflake</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.4.0</dd>
</dl>
</li>
</ul>
<a id="registerPermanent(java.lang.String,com.snowflake.snowpark_java.udtf.JavaUDTF,java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>registerPermanent</h4>
<pre class="methodSignature">public&nbsp;<a href="TableFunction.html" title="class in com.snowflake.snowpark_java">TableFunction</a>&nbsp;registerPermanent&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;funcName,
                                       <a href="udtf/JavaUDTF.html" title="interface in com.snowflake.snowpark_java.udtf">JavaUDTF</a>&nbsp;udtf,
                                       <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;stageLocation)</pre>
<div class="block">Registers an UDTF instance as a Snowflake UDTF.

 <p>The function uploads the JAR files that the UDTF depends upon to the specified stage. Each
 JAR file is uploaded to a subdirectory named after the MD5 checksum for the file.

 <p>If you register multiple UDTFs and specify the same stage location, any dependent JAR files
 used by those functions will only be uploaded once. The JAR file for the UDTF code itself will
 be uploaded to a subdirectory named after the UDTF.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>funcName</code> - The name that you want to use to refer to the UDTF.</dd>
<dd><code>udtf</code> - The UDTF instance to be registered.</dd>
<dd><code>stageLocation</code> - Stage location where the JAR files for the UDTF and its dependencies
     should be uploaded</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A TableFunction that represents the corresponding FUNCTION created in Snowflake</dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>1.4.0</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/UDTFRegistration.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><div style="margin-top: 14px"><strong>                           Snowpark Java API Reference 1.12.0 <br/>                           <a style="text-transform: none" href="https://docs.snowflake.com/en/developer-guide/snowpark/java/index.html" target="_top">[Snowpark Developer Guide for Java]</a>                         </strong></div></div>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>© 2024 Snowflake Inc. All Rights Reserved                                              <!-- Google Analytics Code -->                        <script>                          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){                          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),                          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)                          })(window,document,'script','//www.google-analytics.com/analytics.js','ga');                           ga('create', 'UA-48785629-1', 'auto');                          ga('send', 'pageview');                        </script>                         <!-- Global site tag (gtag.js) - Google Analytics -->                        <script async src="https://www.googletagmanager.com/gtag/js?id=G-00K70YK8HQ"></script>                        <script>                          window.dataLayer = window.dataLayer || [];                          function gtag(){dataLayer.push(arguments);}                          gtag('js', new Date());                          gtag('config', 'G-00K70YK8HQ');                        </script>                         <script>                        if (typeof useModuleDirectories !== 'undefined') {                          useModuleDirectories = false;                        }                        </script></small></p>
</footer>
</body>
</html>
